"use strict";
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a2, b2) => {
  for (var prop2 in b2 || (b2 = {}))
    if (__hasOwnProp.call(b2, prop2))
      __defNormalProp(a2, prop2, b2[prop2]);
  if (__getOwnPropSymbols)
    for (var prop2 of __getOwnPropSymbols(b2)) {
      if (__propIsEnum.call(b2, prop2))
        __defNormalProp(a2, prop2, b2[prop2]);
    }
  return a2;
};
var __spreadProps = (a2, b2) => __defProps(a2, __getOwnPropDescs(b2));
var __objRest = (source, exclude) => {
  var target2 = {};
  for (var prop2 in source)
    if (__hasOwnProp.call(source, prop2) && exclude.indexOf(prop2) < 0)
      target2[prop2] = source[prop2];
  if (source != null && __getOwnPropSymbols)
    for (var prop2 of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop2) < 0 && __propIsEnum.call(source, prop2))
        target2[prop2] = source[prop2];
    }
  return target2;
};
class ServerComponentRequest extends Request {
  constructor(input, init) {
    if (input instanceof Request) {
      super(input, init);
    } else {
      super(getUrlFromNodeRequest(input), {
        headers: new Headers(input.headers),
        method: input.method
      });
    }
    this.cookies = this.parseCookies();
  }
  parseCookies() {
    const cookieString = this.headers.get("cookie") || "";
    return new Map(cookieString.split(";").map((chunk) => chunk.trim().split(/=(.+)/)));
  }
}
function getUrlFromNodeRequest(request) {
  var _a;
  const secure = request.headers["x-forwarded-proto"] === "https";
  return new URL(`${secure ? "https" : "http"}://${request.headers.host + ((_a = request.originalUrl) !== null && _a !== void 0 ? _a : request.url)}`).toString();
}
function setContext(ctx) {
  globalThis.__ctx = ctx;
}
function setCache(cache) {
  globalThis.__cache = cache;
}
function getCacheControlHeader$1({ dev }) {
  return dev ? "cache-control-preview" : "cache-control";
}
function setConfig(config) {
  globalThis.__config = config;
}
async function handleEvent(event, { request, entrypoint: entrypoint2, indexTemplate, assetHandler, streamableResponse, dev, cache, context: context2 }) {
  var _a, _b, _c;
  const url = new URL(request.url);
  setCache(cache);
  setContext(context2);
  setConfig({ dev });
  const isReactHydrationRequest = url.pathname === "/react";
  const template = typeof indexTemplate === "function" ? await indexTemplate(url.toString()) : indexTemplate;
  if (/\.(png|jpe?g|gif|css|js|svg|ico|map)$/i.test(url.pathname) && assetHandler) {
    return assetHandler(event, url);
  }
  const { render: render2, hydrate: hydrate2, stream } = entrypoint2.default || entrypoint2;
  if (dev && !(render2 && hydrate2 && stream)) {
    throw new Error(`entry-server.jsx could not be loaded. This likely occurred because of a Vite compilation error.
Please check your server logs for more information.`);
  }
  const isStreamable = streamableResponse && isStreamableRequest(url);
  if (isStreamable) {
    if (isReactHydrationRequest) {
      hydrate2(url, { context: {}, request, response: streamableResponse, dev });
    } else {
      stream(url, {
        context: {},
        request,
        response: streamableResponse,
        template,
        dev
      });
    }
    return;
  }
  const _a2 = await render2(url, { request, context: {}, isReactHydrationRequest, dev }), { body, bodyAttributes, htmlAttributes, componentResponse } = _a2, head = __objRest(_a2, ["body", "bodyAttributes", "htmlAttributes", "componentResponse"]);
  const headers = componentResponse.headers;
  headers.set(getCacheControlHeader$1({ dev }), componentResponse.cacheControlHeader);
  if (componentResponse.customBody) {
    return new Response(await componentResponse.customBody, {
      status: (_a = componentResponse.status) !== null && _a !== void 0 ? _a : 200,
      headers
    });
  }
  let response;
  if (isReactHydrationRequest) {
    response = new Response(body, {
      status: (_b = componentResponse.status) !== null && _b !== void 0 ? _b : 200,
      headers
    });
  } else {
    const html = template.replace(`<div id="root"></div>`, `<div id="root" data-server-rendered="true">${body}</div>`).replace(/<head>(.*?)<\/head>/s, generateHeadTag(head)).replace("<body", bodyAttributes ? `<body ${bodyAttributes}` : "$&").replace("<html", htmlAttributes ? `<html ${htmlAttributes}` : "$&");
    headers.append("content-type", "text/html");
    response = new Response(html, {
      status: (_c = componentResponse.status) !== null && _c !== void 0 ? _c : 200,
      headers
    });
  }
  return response;
}
function isStreamableRequest(url) {
  const isBot = url.searchParams.has("_bot");
  return !isBot;
}
function generateHeadTag(head) {
  const headProps = ["base", "meta", "style", "noscript", "script", "link"];
  const _a = head, { title } = _a, rest = __objRest(_a, ["title"]);
  const otherHeadProps = headProps.map((prop2) => rest[prop2]).filter(Boolean).join("\n");
  return (_outerHtml, innerHtml) => {
    let headHtml = otherHeadProps + innerHtml;
    if (title) {
      if (headHtml.includes("<title>")) {
        headHtml = headHtml.replace(/(<title>(?:.|\n)*?<\/title>)/, title);
      } else {
        headHtml += title;
      }
    }
    return `<head>${headHtml}</head>`;
  };
}
async function handleWorkerEvent(event, options) {
  const request = new ServerComponentRequest(event.request);
  return handleEvent(event, __spreadProps(__spreadValues({}, options), { request }));
}
var commonjsGlobal$1 = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
var react = { exports: {} };
var react_production_min = {};
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;
function toObject(val) {
  if (val === null || val === void 0) {
    throw new TypeError("Object.assign cannot be called with null or undefined");
  }
  return Object(val);
}
function shouldUseNative() {
  try {
    if (!Object.assign) {
      return false;
    }
    var test1 = new String("abc");
    test1[5] = "de";
    if (Object.getOwnPropertyNames(test1)[0] === "5") {
      return false;
    }
    var test2 = {};
    for (var i = 0; i < 10; i++) {
      test2["_" + String.fromCharCode(i)] = i;
    }
    var order2 = Object.getOwnPropertyNames(test2).map(function(n2) {
      return test2[n2];
    });
    if (order2.join("") !== "0123456789") {
      return false;
    }
    var test3 = {};
    "abcdefghijklmnopqrst".split("").forEach(function(letter) {
      test3[letter] = letter;
    });
    if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
      return false;
    }
    return true;
  } catch (err) {
    return false;
  }
}
var objectAssign = shouldUseNative() ? Object.assign : function(target2, source) {
  var from;
  var to = toObject(target2);
  var symbols;
  for (var s2 = 1; s2 < arguments.length; s2++) {
    from = Object(arguments[s2]);
    for (var key in from) {
      if (hasOwnProperty.call(from, key)) {
        to[key] = from[key];
      }
    }
    if (getOwnPropertySymbols) {
      symbols = getOwnPropertySymbols(from);
      for (var i = 0; i < symbols.length; i++) {
        if (propIsEnumerable.call(from, symbols[i])) {
          to[symbols[i]] = from[symbols[i]];
        }
      }
    }
  }
  return to;
};
/** @license React vundefined
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var l$4 = objectAssign, m$4 = 60103, p$5 = 60106;
react_production_min.Fragment = 60107;
react_production_min.StrictMode = 60108;
react_production_min.Profiler = 60114;
var q$5 = 60109, r$4 = 60110, t$3 = 60112;
react_production_min.Suspense = 60113;
react_production_min.SuspenseList = 60120;
var u$3 = 60115, v$4 = 60116;
if (typeof Symbol === "function" && Symbol.for) {
  var w$4 = Symbol.for;
  m$4 = w$4("react.element");
  p$5 = w$4("react.portal");
  react_production_min.Fragment = w$4("react.fragment");
  react_production_min.StrictMode = w$4("react.strict_mode");
  react_production_min.Profiler = w$4("react.profiler");
  q$5 = w$4("react.provider");
  r$4 = w$4("react.context");
  t$3 = w$4("react.forward_ref");
  react_production_min.Suspense = w$4("react.suspense");
  react_production_min.SuspenseList = w$4("react.suspense_list");
  u$3 = w$4("react.memo");
  v$4 = w$4("react.lazy");
}
var x$5 = typeof Symbol === "function" && Symbol.iterator;
function y$4(a2) {
  if (a2 === null || typeof a2 !== "object")
    return null;
  a2 = x$5 && a2[x$5] || a2["@@iterator"];
  return typeof a2 === "function" ? a2 : null;
}
function z$4(a2) {
  for (var b2 = "https://reactjs.org/docs/error-decoder.html?invariant=" + a2, c2 = 1; c2 < arguments.length; c2++)
    b2 += "&args[]=" + encodeURIComponent(arguments[c2]);
  return "Minified React error #" + a2 + "; visit " + b2 + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}
var A$6 = { isMounted: function() {
  return false;
}, enqueueForceUpdate: function() {
}, enqueueReplaceState: function() {
}, enqueueSetState: function() {
} }, B$4 = {};
function C$4(a2, b2, c2) {
  this.props = a2;
  this.context = b2;
  this.refs = B$4;
  this.updater = c2 || A$6;
}
C$4.prototype.isReactComponent = {};
C$4.prototype.setState = function(a2, b2) {
  if (typeof a2 !== "object" && typeof a2 !== "function" && a2 != null)
    throw Error(z$4(85));
  this.updater.enqueueSetState(this, a2, b2, "setState");
};
C$4.prototype.forceUpdate = function(a2) {
  this.updater.enqueueForceUpdate(this, a2, "forceUpdate");
};
function D$5() {
}
D$5.prototype = C$4.prototype;
function E$5(a2, b2, c2) {
  this.props = a2;
  this.context = b2;
  this.refs = B$4;
  this.updater = c2 || A$6;
}
var F$3 = E$5.prototype = new D$5();
F$3.constructor = E$5;
l$4(F$3, C$4.prototype);
F$3.isPureReactComponent = true;
var G$3 = Array.isArray, H$5 = Object.prototype.hasOwnProperty, I$4 = { current: null }, J$4 = { key: true, ref: true, __self: true, __source: true };
function K$5(a2, b2, c2) {
  var e2, d2 = {}, k2 = null, h2 = null;
  if (b2 != null)
    for (e2 in b2.ref !== void 0 && (h2 = b2.ref), b2.key !== void 0 && (k2 = "" + b2.key), b2)
      H$5.call(b2, e2) && !J$4.hasOwnProperty(e2) && (d2[e2] = b2[e2]);
  var g2 = arguments.length - 2;
  if (g2 === 1)
    d2.children = c2;
  else if (1 < g2) {
    for (var f2 = Array(g2), n2 = 0; n2 < g2; n2++)
      f2[n2] = arguments[n2 + 2];
    d2.children = f2;
  }
  if (a2 && a2.defaultProps)
    for (e2 in g2 = a2.defaultProps, g2)
      d2[e2] === void 0 && (d2[e2] = g2[e2]);
  return { $$typeof: m$4, type: a2, key: k2, ref: h2, props: d2, _owner: I$4.current };
}
function L$4(a2, b2) {
  return { $$typeof: m$4, type: a2.type, key: b2, ref: a2.ref, props: a2.props, _owner: a2._owner };
}
function M$5(a2) {
  return typeof a2 === "object" && a2 !== null && a2.$$typeof === m$4;
}
function escape(a2) {
  var b2 = { "=": "=0", ":": "=2" };
  return "$" + a2.replace(/[=:]/g, function(a3) {
    return b2[a3];
  });
}
var N$5 = /\/+/g;
function O$4(a2, b2) {
  return typeof a2 === "object" && a2 !== null && a2.key != null ? escape("" + a2.key) : b2.toString(36);
}
function P$5(a2, b2, c2, e2, d2) {
  var k2 = typeof a2;
  if (k2 === "undefined" || k2 === "boolean")
    a2 = null;
  var h2 = false;
  if (a2 === null)
    h2 = true;
  else
    switch (k2) {
      case "string":
      case "number":
        h2 = true;
        break;
      case "object":
        switch (a2.$$typeof) {
          case m$4:
          case p$5:
            h2 = true;
        }
    }
  if (h2)
    return h2 = a2, d2 = d2(h2), a2 = e2 === "" ? "." + O$4(h2, 0) : e2, G$3(d2) ? (c2 = "", a2 != null && (c2 = a2.replace(N$5, "$&/") + "/"), P$5(d2, b2, c2, "", function(a3) {
      return a3;
    })) : d2 != null && (M$5(d2) && (d2 = L$4(d2, c2 + (!d2.key || h2 && h2.key === d2.key ? "" : ("" + d2.key).replace(N$5, "$&/") + "/") + a2)), b2.push(d2)), 1;
  h2 = 0;
  e2 = e2 === "" ? "." : e2 + ":";
  if (G$3(a2))
    for (var g2 = 0; g2 < a2.length; g2++) {
      k2 = a2[g2];
      var f2 = e2 + O$4(k2, g2);
      h2 += P$5(k2, b2, c2, f2, d2);
    }
  else if (f2 = y$4(a2), typeof f2 === "function")
    for (a2 = f2.call(a2), g2 = 0; !(k2 = a2.next()).done; )
      k2 = k2.value, f2 = e2 + O$4(k2, g2++), h2 += P$5(k2, b2, c2, f2, d2);
  else if (k2 === "object")
    throw b2 = "" + a2, Error(z$4(31, b2 === "[object Object]" ? "object with keys {" + Object.keys(a2).join(", ") + "}" : b2));
  return h2;
}
function Q$4(a2, b2, c2) {
  if (a2 == null)
    return a2;
  var e2 = [], d2 = 0;
  P$5(a2, e2, "", "", function(a3) {
    return b2.call(c2, a3, d2++);
  });
  return e2;
}
function R$5(a2) {
  if (a2._status === -1) {
    var b2 = a2._result;
    b2 = b2();
    b2.then(function(b3) {
      if (a2._status === 0 || a2._status === -1)
        a2._status = 1, a2._result = b3;
    }, function(b3) {
      if (a2._status === 0 || a2._status === -1)
        a2._status = 2, a2._result = b3;
    });
    a2._status === -1 && (a2._status = 0, a2._result = b2);
  }
  if (a2._status === 1)
    return a2._result.default;
  throw a2._result;
}
var S$4 = { current: null }, T$5 = { transition: 0 }, U$5 = { ReactCurrentDispatcher: S$4, ReactCurrentBatchConfig: T$5, ReactCurrentOwner: I$4, IsSomeRendererActing: { current: false }, assign: l$4 };
react_production_min.Children = { map: Q$4, forEach: function(a2, b2, c2) {
  Q$4(a2, function() {
    b2.apply(this, arguments);
  }, c2);
}, count: function(a2) {
  var b2 = 0;
  Q$4(a2, function() {
    b2++;
  });
  return b2;
}, toArray: function(a2) {
  return Q$4(a2, function(a3) {
    return a3;
  }) || [];
}, only: function(a2) {
  if (!M$5(a2))
    throw Error(z$4(143));
  return a2;
} };
react_production_min.Component = C$4;
react_production_min.PureComponent = E$5;
react_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = U$5;
react_production_min.cloneElement = function(a2, b2, c2) {
  if (a2 === null || a2 === void 0)
    throw Error(z$4(267, a2));
  var e2 = l$4({}, a2.props), d2 = a2.key, k2 = a2.ref, h2 = a2._owner;
  if (b2 != null) {
    b2.ref !== void 0 && (k2 = b2.ref, h2 = I$4.current);
    b2.key !== void 0 && (d2 = "" + b2.key);
    if (a2.type && a2.type.defaultProps)
      var g2 = a2.type.defaultProps;
    for (f2 in b2)
      H$5.call(b2, f2) && !J$4.hasOwnProperty(f2) && (e2[f2] = b2[f2] === void 0 && g2 !== void 0 ? g2[f2] : b2[f2]);
  }
  var f2 = arguments.length - 2;
  if (f2 === 1)
    e2.children = c2;
  else if (1 < f2) {
    g2 = Array(f2);
    for (var n2 = 0; n2 < f2; n2++)
      g2[n2] = arguments[n2 + 2];
    e2.children = g2;
  }
  return {
    $$typeof: m$4,
    type: a2.type,
    key: d2,
    ref: k2,
    props: e2,
    _owner: h2
  };
};
react_production_min.createContext = function(a2) {
  a2 = { $$typeof: r$4, _currentValue: a2, _currentValue2: a2, _threadCount: 0, Provider: null, Consumer: null };
  a2.Provider = { $$typeof: q$5, _context: a2 };
  return a2.Consumer = a2;
};
react_production_min.createElement = K$5;
react_production_min.createFactory = function(a2) {
  var b2 = K$5.bind(null, a2);
  b2.type = a2;
  return b2;
};
react_production_min.createRef = function() {
  return { current: null };
};
react_production_min.forwardRef = function(a2) {
  return { $$typeof: t$3, render: a2 };
};
react_production_min.isValidElement = M$5;
react_production_min.lazy = function(a2) {
  return { $$typeof: v$4, _payload: { _status: -1, _result: a2 }, _init: R$5 };
};
react_production_min.memo = function(a2, b2) {
  return { $$typeof: u$3, type: a2, compare: b2 === void 0 ? null : b2 };
};
react_production_min.startTransition = function(a2) {
  var b2 = T$5.transition;
  T$5.transition = 1;
  try {
    a2();
  } finally {
    T$5.transition = b2;
  }
};
react_production_min.unstable_createMutableSource = function(a2, b2) {
  return { _getVersion: b2, _source: a2, _workInProgressVersionPrimary: null, _workInProgressVersionSecondary: null };
};
react_production_min.unstable_useMutableSource = function(a2, b2, c2) {
  return S$4.current.useMutableSource(a2, b2, c2);
};
react_production_min.unstable_useOpaqueIdentifier = function() {
  return S$4.current.useOpaqueIdentifier();
};
react_production_min.useCallback = function(a2, b2) {
  return S$4.current.useCallback(a2, b2);
};
react_production_min.useContext = function(a2) {
  return S$4.current.useContext(a2);
};
react_production_min.useDebugValue = function() {
};
react_production_min.useDeferredValue = function(a2) {
  return S$4.current.useDeferredValue(a2);
};
react_production_min.useEffect = function(a2, b2) {
  return S$4.current.useEffect(a2, b2);
};
react_production_min.useImperativeHandle = function(a2, b2, c2) {
  return S$4.current.useImperativeHandle(a2, b2, c2);
};
react_production_min.useLayoutEffect = function(a2, b2) {
  return S$4.current.useLayoutEffect(a2, b2);
};
react_production_min.useMemo = function(a2, b2) {
  return S$4.current.useMemo(a2, b2);
};
react_production_min.useReducer = function(a2, b2, c2) {
  return S$4.current.useReducer(a2, b2, c2);
};
react_production_min.useRef = function(a2) {
  return S$4.current.useRef(a2);
};
react_production_min.useState = function(a2) {
  return S$4.current.useState(a2);
};
react_production_min.useTransition = function() {
  return S$4.current.useTransition();
};
react_production_min.version = "18.0.0-e6be2d531";
{
  react.exports = react_production_min;
}
var React$2 = react.exports;
var unstableFizz_browser = { exports: {} };
var reactDomUnstableFizz_browser_production_min = {};
/** @license React vundefined
 * react-dom-unstable-fizz.browser.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var k$4 = objectAssign, aa$3 = react.exports;
function m$3(a2) {
  for (var b2 = "https://reactjs.org/docs/error-decoder.html?invariant=" + a2, c2 = 1; c2 < arguments.length; c2++)
    b2 += "&args[]=" + encodeURIComponent(arguments[c2]);
  return "Minified React error #" + a2 + "; visit " + b2 + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}
function p$4(a2, b2) {
  a2.enqueue(b2);
  return 0 < a2.desiredSize;
}
var ba$3 = new TextEncoder();
function r$3(a2) {
  return ba$3.encode(a2);
}
function u$2(a2) {
  return ba$3.encode(a2);
}
var w$3 = Object.prototype.hasOwnProperty, ca$3 = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, da$3 = {}, ea$3 = {};
function fa$3(a2) {
  if (w$3.call(ea$3, a2))
    return true;
  if (w$3.call(da$3, a2))
    return false;
  if (ca$3.test(a2))
    return ea$3[a2] = true;
  da$3[a2] = true;
  return false;
}
function x$4(a2, b2, c2, d2, e2, g2, f2) {
  this.acceptsBooleans = b2 === 2 || b2 === 3 || b2 === 4;
  this.attributeName = d2;
  this.attributeNamespace = e2;
  this.mustUseProperty = c2;
  this.propertyName = a2;
  this.type = b2;
  this.sanitizeURL = g2;
  this.removeEmptyString = f2;
}
var y$3 = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a2) {
  y$3[a2] = new x$4(a2, 0, false, a2, null, false, false);
});
[["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(a2) {
  var b2 = a2[0];
  y$3[b2] = new x$4(b2, 1, false, a2[1], null, false, false);
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function(a2) {
  y$3[a2] = new x$4(a2, 2, false, a2.toLowerCase(), null, false, false);
});
["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(a2) {
  y$3[a2] = new x$4(a2, 2, false, a2, null, false, false);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a2) {
  y$3[a2] = new x$4(a2, 3, false, a2.toLowerCase(), null, false, false);
});
["checked", "multiple", "muted", "selected"].forEach(function(a2) {
  y$3[a2] = new x$4(a2, 3, true, a2, null, false, false);
});
["capture", "download"].forEach(function(a2) {
  y$3[a2] = new x$4(a2, 4, false, a2, null, false, false);
});
["cols", "rows", "size", "span"].forEach(function(a2) {
  y$3[a2] = new x$4(a2, 6, false, a2, null, false, false);
});
["rowSpan", "start"].forEach(function(a2) {
  y$3[a2] = new x$4(a2, 5, false, a2.toLowerCase(), null, false, false);
});
var ha$2 = /[\-:]([a-z])/g;
function ia$3(a2) {
  return a2[1].toUpperCase();
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a2) {
  var b2 = a2.replace(ha$2, ia$3);
  y$3[b2] = new x$4(b2, 1, false, a2, null, false, false);
});
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a2) {
  var b2 = a2.replace(ha$2, ia$3);
  y$3[b2] = new x$4(b2, 1, false, a2, "http://www.w3.org/1999/xlink", false, false);
});
["xml:base", "xml:lang", "xml:space"].forEach(function(a2) {
  var b2 = a2.replace(ha$2, ia$3);
  y$3[b2] = new x$4(b2, 1, false, a2, "http://www.w3.org/XML/1998/namespace", false, false);
});
["tabIndex", "crossOrigin"].forEach(function(a2) {
  y$3[a2] = new x$4(a2, 1, false, a2.toLowerCase(), null, false, false);
});
y$3.xlinkHref = new x$4("xlinkHref", 1, false, "xlink:href", "http://www.w3.org/1999/xlink", true, false);
["src", "href", "action", "formAction"].forEach(function(a2) {
  y$3[a2] = new x$4(a2, 1, false, a2.toLowerCase(), null, true, true);
});
var z$3 = {
  animationIterationCount: true,
  aspectRatio: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridArea: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
}, ja$3 = ["Webkit", "ms", "Moz", "O"];
Object.keys(z$3).forEach(function(a2) {
  ja$3.forEach(function(b2) {
    b2 = b2 + a2.charAt(0).toUpperCase() + a2.substring(1);
    z$3[b2] = z$3[a2];
  });
});
var ka$3 = /["'&<>]/;
function A$5(a2) {
  if (typeof a2 === "boolean" || typeof a2 === "number")
    return "" + a2;
  a2 = "" + a2;
  var b2 = ka$3.exec(a2);
  if (b2) {
    var c2 = "", d2, e2 = 0;
    for (d2 = b2.index; d2 < a2.length; d2++) {
      switch (a2.charCodeAt(d2)) {
        case 34:
          b2 = "&quot;";
          break;
        case 38:
          b2 = "&amp;";
          break;
        case 39:
          b2 = "&#x27;";
          break;
        case 60:
          b2 = "&lt;";
          break;
        case 62:
          b2 = "&gt;";
          break;
        default:
          continue;
      }
      e2 !== d2 && (c2 += a2.substring(e2, d2));
      e2 = d2 + 1;
      c2 += b2;
    }
    a2 = e2 !== d2 ? c2 + a2.substring(e2, d2) : c2;
  }
  return a2;
}
var la$2 = /([A-Z])/g, ma$3 = /^ms-/, na$3 = Array.isArray;
function oa$3() {
  var a2 = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : "";
  return { placeholderPrefix: u$2(a2 + "P:"), segmentPrefix: u$2(a2 + "S:"), boundaryPrefix: a2 + "B:", opaqueIdentifierPrefix: a2 + "R:", nextSuspenseID: 0, nextOpaqueID: 0, sentCompleteSegmentFunction: false, sentCompleteBoundaryFunction: false, sentClientRenderFunction: false };
}
function B$3(a2, b2) {
  return { insertionMode: a2, selectedValue: b2 };
}
function pa$3(a2, b2, c2) {
  switch (b2) {
    case "select":
      return B$3(0, c2.value != null ? c2.value : c2.defaultValue);
    case "svg":
      return B$3(1, null);
    case "math":
      return B$3(2, null);
    case "foreignObject":
      return B$3(0, null);
    case "table":
      return B$3(4, null);
    case "thead":
    case "tbody":
    case "tfoot":
      return B$3(5, null);
    case "colgroup":
      return B$3(7, null);
    case "tr":
      return B$3(6, null);
  }
  return 4 <= a2.insertionMode ? B$3(0, null) : a2;
}
function qa$3(a2, b2) {
  var c2 = a2.nextSuspenseID++;
  return b2.formattedID = u$2(a2.boundaryPrefix + c2.toString(16));
}
var ra$3 = u$2('<template id="'), sa$2 = u$2('"></template>');
function C$3(a2, b2, c2) {
  c2 !== null && (b2 = qa$3(b2, c2), a2.push(ra$3, b2, sa$2));
}
var ta$3 = u$2("<!-- -->");
function ua$2(a2, b2, c2, d2) {
  d2 !== null && (c2 = qa$3(c2, d2), a2.push(ra$3, c2, sa$2));
  b2 !== "" && a2.push(r$3(A$5(b2)), ta$3);
}
var va$3 = new Map(), wa$3 = u$2(' style="'), xa$3 = u$2(":"), ya$3 = u$2(";");
function za$2(a2, b2, c2) {
  if (typeof c2 !== "object")
    throw Error(m$3(62));
  b2 = true;
  for (var d2 in c2)
    if (w$3.call(c2, d2)) {
      var e2 = c2[d2];
      if (e2 != null && typeof e2 !== "boolean" && e2 !== "") {
        if (d2.indexOf("--") === 0) {
          var g2 = r$3(A$5(d2));
          e2 = r$3(A$5(("" + e2).trim()));
        } else {
          g2 = d2;
          var f2 = va$3.get(g2);
          f2 !== void 0 ? g2 = f2 : (f2 = u$2(A$5(g2.replace(la$2, "-$1").toLowerCase().replace(ma$3, "-ms-"))), va$3.set(g2, f2), g2 = f2);
          e2 = typeof e2 === "number" ? e2 === 0 || w$3.call(z$3, d2) ? r$3("" + e2) : r$3(e2 + "px") : r$3(A$5(("" + e2).trim()));
        }
        b2 ? (b2 = false, a2.push(wa$3, g2, xa$3, e2)) : a2.push(ya$3, g2, xa$3, e2);
      }
    }
  b2 || a2.push(D$4);
}
var E$4 = u$2(" "), F$2 = u$2('="'), D$4 = u$2('"'), Aa$2 = u$2('=""');
function H$4(a2, b2, c2, d2) {
  switch (c2) {
    case "style":
      za$2(a2, b2, d2);
      return;
    case "defaultValue":
    case "defaultChecked":
    case "innerHTML":
    case "suppressContentEditableWarning":
    case "suppressHydrationWarning":
      return;
  }
  if (!(2 < c2.length) || c2[0] !== "o" && c2[0] !== "O" || c2[1] !== "n" && c2[1] !== "N") {
    if (b2 = y$3.hasOwnProperty(c2) ? y$3[c2] : null, b2 !== null) {
      switch (typeof d2) {
        case "function":
        case "symbol":
          return;
        case "boolean":
          if (!b2.acceptsBooleans)
            return;
      }
      c2 = r$3(b2.attributeName);
      switch (b2.type) {
        case 3:
          d2 && a2.push(E$4, c2, Aa$2);
          break;
        case 4:
          d2 === true ? a2.push(E$4, c2, Aa$2) : d2 !== false && a2.push(E$4, c2, F$2, A$5(d2), D$4);
          break;
        case 5:
          isNaN(d2) || a2.push(E$4, c2, F$2, A$5(d2), D$4);
          break;
        case 6:
          !isNaN(d2) && 1 <= d2 && a2.push(E$4, c2, F$2, A$5(d2), D$4);
          break;
        default:
          b2.sanitizeURL && (d2 = "" + d2), a2.push(E$4, c2, F$2, A$5(d2), D$4);
      }
    } else if (fa$3(c2)) {
      switch (typeof d2) {
        case "function":
        case "symbol":
          return;
        case "boolean":
          if (b2 = c2.toLowerCase().slice(0, 5), b2 !== "data-" && b2 !== "aria-")
            return;
      }
      a2.push(E$4, r$3(c2), F$2, A$5(d2), D$4);
    }
  }
}
var I$3 = u$2(">"), Ba$3 = u$2("/>"), Ca$3 = u$2(' id="'), Da$3 = u$2('"');
function J$3(a2, b2, c2, d2) {
  d2 === null || d2 === void 0 || typeof d2 !== "string" && typeof d2 !== "object" ? (b2 = qa$3(b2, c2), a2.push(Ca$3, b2, Da$3)) : c2.formattedID = u$2(A$5(d2));
}
function K$4(a2, b2, c2) {
  if (b2 != null) {
    if (c2 != null)
      throw Error(m$3(60));
    if (!(typeof b2 === "object" && "__html" in b2))
      throw Error(m$3(61));
    b2 = b2.__html;
    b2 !== null && b2 !== void 0 && a2.push(r$3("" + b2));
  }
}
function Ea$3(a2) {
  var b2 = "";
  aa$3.Children.forEach(a2, function(a3) {
    a3 != null && (b2 += a3);
  });
  return b2;
}
var Fa$3 = u$2(' selected=""');
function Ga$3(a2, b2, c2, d2, e2) {
  a2.push(L$3(c2));
  var g2 = c2 = null, f2;
  for (f2 in b2)
    if (w$3.call(b2, f2)) {
      var h2 = b2[f2];
      if (h2 != null)
        switch (f2) {
          case "children":
            c2 = h2;
            break;
          case "dangerouslySetInnerHTML":
            g2 = h2;
            break;
          default:
            H$4(a2, d2, f2, h2);
        }
    }
  e2 !== null && J$3(a2, d2, e2, b2.id);
  a2.push(I$3);
  K$4(a2, g2, c2);
  return typeof c2 === "string" ? (a2.push(r$3(A$5(c2))), null) : c2;
}
var Ha$3 = u$2("\n"), Ia$3 = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/, Ja$2 = new Map();
function L$3(a2) {
  var b2 = Ja$2.get(a2);
  if (b2 === void 0) {
    if (!Ia$3.test(a2))
      throw Error(m$3(65, a2));
    b2 = u$2("<" + a2);
    Ja$2.set(a2, b2);
  }
  return b2;
}
function Ka$3(a2, b2, c2, d2, e2, g2) {
  switch (b2) {
    case "select":
      a2.push(L$3("select"));
      var f2 = null, h2 = null;
      for (t2 in c2)
        if (w$3.call(c2, t2)) {
          var l2 = c2[t2];
          if (l2 != null)
            switch (t2) {
              case "children":
                f2 = l2;
                break;
              case "dangerouslySetInnerHTML":
                h2 = l2;
                break;
              case "defaultValue":
              case "value":
                break;
              default:
                H$4(a2, d2, t2, l2);
            }
        }
      g2 !== null && J$3(a2, d2, g2, c2.id);
      a2.push(I$3);
      K$4(a2, h2, f2);
      return f2;
    case "option":
      h2 = e2.selectedValue;
      a2.push(L$3("option"));
      var n2 = l2 = null, q2 = null;
      var t2 = null;
      for (f2 in c2)
        if (w$3.call(c2, f2) && (b2 = c2[f2], b2 != null))
          switch (f2) {
            case "children":
              l2 = b2;
              break;
            case "selected":
              q2 = b2;
              break;
            case "dangerouslySetInnerHTML":
              t2 = b2;
              break;
            case "value":
              n2 = b2;
            default:
              H$4(a2, d2, f2, b2);
          }
      if (h2 !== null)
        if (f2 = n2 !== null ? "" + n2 : Ea$3(l2), na$3(h2))
          for (n2 = 0; n2 < h2.length; n2++) {
            if ("" + h2[n2] === f2) {
              a2.push(Fa$3);
              break;
            }
          }
        else
          h2 === f2 && a2.push(Fa$3);
      else
        q2 && a2.push(Fa$3);
      g2 !== null && J$3(a2, d2, g2, c2.id);
      a2.push(I$3);
      K$4(a2, t2, l2);
      return l2;
    case "textarea":
      a2.push(L$3("textarea"));
      t2 = h2 = f2 = null;
      for (l2 in c2)
        if (w$3.call(c2, l2) && (n2 = c2[l2], n2 != null))
          switch (l2) {
            case "children":
              t2 = n2;
              break;
            case "value":
              f2 = n2;
              break;
            case "defaultValue":
              h2 = n2;
              break;
            case "dangerouslySetInnerHTML":
              throw Error(m$3(91));
            default:
              H$4(a2, d2, l2, n2);
          }
      f2 === null && h2 !== null && (f2 = h2);
      g2 !== null && J$3(a2, d2, g2, c2.id);
      a2.push(I$3);
      if (t2 != null) {
        if (f2 != null)
          throw Error(m$3(92));
        if (na$3(t2) && !(1 >= t2.length))
          throw Error(m$3(93));
        f2 = "" + t2;
      }
      typeof f2 === "string" && f2[0] === "\n" && a2.push(Ha$3);
      return f2;
    case "input":
      a2.push(L$3("input"));
      n2 = t2 = l2 = f2 = null;
      for (h2 in c2)
        if (w$3.call(c2, h2) && (q2 = c2[h2], q2 != null))
          switch (h2) {
            case "children":
            case "dangerouslySetInnerHTML":
              throw Error(m$3(399, "input"));
            case "defaultChecked":
              n2 = q2;
              break;
            case "defaultValue":
              l2 = q2;
              break;
            case "checked":
              t2 = q2;
              break;
            case "value":
              f2 = q2;
              break;
            default:
              H$4(a2, d2, h2, q2);
          }
      t2 !== null ? H$4(a2, d2, "checked", t2) : n2 !== null && H$4(a2, d2, "checked", n2);
      f2 !== null ? H$4(a2, d2, "value", f2) : l2 !== null && H$4(a2, d2, "value", l2);
      g2 !== null && J$3(a2, d2, g2, c2.id);
      a2.push(Ba$3);
      return null;
    case "menuitem":
      a2.push(L$3("menuitem"));
      for (var G2 in c2)
        if (w$3.call(c2, G2) && (f2 = c2[G2], f2 != null))
          switch (G2) {
            case "children":
            case "dangerouslySetInnerHTML":
              throw Error(m$3(400));
            default:
              H$4(a2, d2, G2, f2);
          }
      g2 !== null && J$3(a2, d2, g2, c2.id);
      a2.push(I$3);
      return null;
    case "listing":
    case "pre":
      a2.push(L$3(b2));
      h2 = f2 = null;
      for (n2 in c2)
        if (w$3.call(c2, n2) && (l2 = c2[n2], l2 != null))
          switch (n2) {
            case "children":
              f2 = l2;
              break;
            case "dangerouslySetInnerHTML":
              h2 = l2;
              break;
            default:
              H$4(a2, d2, n2, l2);
          }
      g2 !== null && J$3(a2, d2, g2, c2.id);
      a2.push(I$3);
      if (h2 != null) {
        if (f2 != null)
          throw Error(m$3(60));
        if (!(typeof h2 === "object" && "__html" in h2))
          throw Error(m$3(61));
        c2 = h2.__html;
        c2 !== null && c2 !== void 0 && (typeof c2 === "string" && 0 < c2.length && c2[0] === "\n" ? a2.push(Ha$3, r$3(c2)) : a2.push(r$3("" + c2)));
      }
      typeof f2 === "string" && f2[0] === "\n" && a2.push(Ha$3);
      return f2;
    case "area":
    case "base":
    case "br":
    case "col":
    case "embed":
    case "hr":
    case "img":
    case "keygen":
    case "link":
    case "meta":
    case "param":
    case "source":
    case "track":
    case "wbr":
      a2.push(L$3(b2));
      for (var v2 in c2)
        if (w$3.call(c2, v2) && (f2 = c2[v2], f2 != null))
          switch (v2) {
            case "children":
            case "dangerouslySetInnerHTML":
              throw Error(m$3(399, b2));
            default:
              H$4(a2, d2, v2, f2);
          }
      g2 !== null && J$3(a2, d2, g2, c2.id);
      a2.push(Ba$3);
      return null;
    case "annotation-xml":
    case "color-profile":
    case "font-face":
    case "font-face-src":
    case "font-face-uri":
    case "font-face-format":
    case "font-face-name":
    case "missing-glyph":
      return Ga$3(a2, c2, b2, d2, g2);
    default:
      if (b2.indexOf("-") === -1 && typeof c2.is !== "string")
        return Ga$3(a2, c2, b2, d2, g2);
      a2.push(L$3(b2));
      h2 = f2 = null;
      for (q2 in c2)
        if (w$3.call(c2, q2) && (l2 = c2[q2], l2 != null))
          switch (q2) {
            case "children":
              f2 = l2;
              break;
            case "dangerouslySetInnerHTML":
              h2 = l2;
              break;
            case "style":
              za$2(a2, d2, l2);
              break;
            case "suppressContentEditableWarning":
            case "suppressHydrationWarning":
              break;
            default:
              fa$3(q2) && typeof l2 !== "function" && typeof l2 !== "symbol" && a2.push(E$4, r$3(q2), F$2, A$5(l2), D$4);
          }
      g2 !== null && J$3(a2, d2, g2, c2.id);
      a2.push(I$3);
      K$4(a2, h2, f2);
      return f2;
  }
}
var La$3 = u$2("</"), Ma$3 = u$2(">"), Na$3 = u$2('<template id="'), Oa$3 = u$2('"></template>'), Pa$3 = u$2("<!--$-->"), Qa$3 = u$2("<!--$?-->"), Ra$3 = u$2("<!--$!-->"), Sa$3 = u$2("<!--/$-->"), Ta$3 = u$2('<div hidden id="'), Ua$2 = u$2('">'), Va$2 = u$2("</div>"), Wa$2 = u$2('<svg aria-hidden="true" style="display:none" id="'), Xa$2 = u$2('">'), Ya$2 = u$2("</svg>"), Za$2 = u$2('<math aria-hidden="true" style="display:none" id="'), $a$1 = u$2('">'), ab$1 = u$2("</math>"), bb$1 = u$2('<table hidden id="'), cb$1 = u$2('">'), db$1 = u$2("</table>"), eb$1 = u$2('<table hidden><tbody id="'), fb$1 = u$2('">'), gb$1 = u$2("</tbody></table>"), hb$1 = u$2('<table hidden><tr id="'), ib$1 = u$2('">'), jb$1 = u$2("</tr></table>"), kb$1 = u$2('<table hidden><colgroup id="'), lb$1 = u$2('">'), mb$1 = u$2("</colgroup></table>");
function nb$1(a2, b2, c2, d2) {
  switch (c2.insertionMode) {
    case 0:
      return p$4(a2, Ta$3), p$4(a2, b2.segmentPrefix), p$4(a2, r$3(d2.toString(16))), p$4(a2, Ua$2);
    case 1:
      return p$4(a2, Wa$2), p$4(a2, b2.segmentPrefix), p$4(a2, r$3(d2.toString(16))), p$4(a2, Xa$2);
    case 2:
      return p$4(a2, Za$2), p$4(a2, b2.segmentPrefix), p$4(a2, r$3(d2.toString(16))), p$4(a2, $a$1);
    case 4:
      return p$4(a2, bb$1), p$4(a2, b2.segmentPrefix), p$4(a2, r$3(d2.toString(16))), p$4(a2, cb$1);
    case 5:
      return p$4(a2, eb$1), p$4(a2, b2.segmentPrefix), p$4(a2, r$3(d2.toString(16))), p$4(a2, fb$1);
    case 6:
      return p$4(a2, hb$1), p$4(a2, b2.segmentPrefix), p$4(a2, r$3(d2.toString(16))), p$4(a2, ib$1);
    case 7:
      return p$4(a2, kb$1), p$4(a2, b2.segmentPrefix), p$4(a2, r$3(d2.toString(16))), p$4(a2, lb$1);
    default:
      throw Error(m$3(397));
  }
}
function ob$1(a2, b2) {
  switch (b2.insertionMode) {
    case 0:
      return p$4(a2, Va$2);
    case 1:
      return p$4(a2, Ya$2);
    case 2:
      return p$4(a2, ab$1);
    case 4:
      return p$4(a2, db$1);
    case 5:
      return p$4(a2, gb$1);
    case 6:
      return p$4(a2, jb$1);
    case 7:
      return p$4(a2, mb$1);
    default:
      throw Error(m$3(397));
  }
}
var pb$1 = u$2('<script>function $RS(b,f){var a=document.getElementById(b),c=document.getElementById(f);for(a.parentNode.removeChild(a);a.firstChild;)c.parentNode.insertBefore(a.firstChild,c);c.parentNode.removeChild(c)};$RS("'), qb$1 = u$2('<script>$RS("'), rb$1 = u$2('","'), sb$1 = u$2('")<\/script>'), tb$1 = u$2('<script>function $RC(b,f){var a=document.getElementById(b),c=document.getElementById(f);c.parentNode.removeChild(c);if(a){do a=a.previousSibling;while(8!==a.nodeType||"$?"!==a.data);var h=a.parentNode,d=a.nextSibling,g=0;do{if(d&&8===d.nodeType){var e=d.data;if("/$"===e)if(0===g)break;else g--;else"$"!==e&&"$?"!==e&&"$!"!==e||g++}e=d.nextSibling;h.removeChild(d);d=e}while(d);for(;c.firstChild;)h.insertBefore(c.firstChild,d);a.data="$";a._reactRetry&&a._reactRetry()}};$RC("'), ub$1 = u$2('<script>$RC("'), vb$1 = u$2('","'), wb$1 = u$2('")<\/script>'), xb$1 = u$2('<script>function $RX(b){if(b=document.getElementById(b)){do b=b.previousSibling;while(8!==b.nodeType||"$?"!==b.data);b.data="$!";b._reactRetry&&b._reactRetry()}};$RX("'), yb$1 = u$2('<script>$RX("'), zb$1 = u$2('")<\/script>'), Ab$1 = 60103, Bb$1 = 60106, Cb$1 = 60107, Db$1 = 60108, Eb$1 = 60114, Fb$1 = 60109, Gb$1 = 60110, Hb$1 = 60112, Ib$1 = 60113, Jb$1 = 60120, Kb$1 = 60115, M$4 = 60116, Lb$1 = 60119, Mb$1 = 60129, Nb$1 = 60131, Ob$1 = 60132;
if (typeof Symbol === "function" && Symbol.for) {
  var N$4 = Symbol.for;
  Ab$1 = N$4("react.element");
  Bb$1 = N$4("react.portal");
  Cb$1 = N$4("react.fragment");
  Db$1 = N$4("react.strict_mode");
  Eb$1 = N$4("react.profiler");
  Fb$1 = N$4("react.provider");
  Gb$1 = N$4("react.context");
  Hb$1 = N$4("react.forward_ref");
  Ib$1 = N$4("react.suspense");
  Jb$1 = N$4("react.suspense_list");
  Kb$1 = N$4("react.memo");
  M$4 = N$4("react.lazy");
  Lb$1 = N$4("react.scope");
  Mb$1 = N$4("react.debug_trace_mode");
  Nb$1 = N$4("react.legacy_hidden");
  Ob$1 = N$4("react.cache");
}
var Pb$1 = typeof Symbol === "function" && Symbol.iterator;
function O$3(a2) {
  if (a2 == null)
    return null;
  if (typeof a2 === "function")
    return a2.displayName || a2.name || null;
  if (typeof a2 === "string")
    return a2;
  switch (a2) {
    case Cb$1:
      return "Fragment";
    case Bb$1:
      return "Portal";
    case Eb$1:
      return "Profiler";
    case Db$1:
      return "StrictMode";
    case Ib$1:
      return "Suspense";
    case Jb$1:
      return "SuspenseList";
    case Ob$1:
      return "Cache";
  }
  if (typeof a2 === "object")
    switch (a2.$$typeof) {
      case Gb$1:
        return (a2.displayName || "Context") + ".Consumer";
      case Fb$1:
        return (a2._context.displayName || "Context") + ".Provider";
      case Hb$1:
        var b2 = a2.render;
        a2 = a2.displayName;
        a2 || (a2 = b2.displayName || b2.name || "", a2 = a2 !== "" ? "ForwardRef(" + a2 + ")" : "ForwardRef");
        return a2;
      case Kb$1:
        return b2 = a2.displayName || null, b2 !== null ? b2 : O$3(a2.type) || "Memo";
      case M$4:
        b2 = a2._payload;
        a2 = a2._init;
        try {
          return O$3(a2(b2));
        } catch (c2) {
        }
    }
  return null;
}
var Qb$1 = {};
function Rb$1(a2, b2) {
  a2 = a2.contextTypes;
  if (!a2)
    return Qb$1;
  var c2 = {}, d2;
  for (d2 in a2)
    c2[d2] = b2[d2];
  return c2;
}
var P$4 = null;
function Q$3(a2, b2) {
  if (a2 !== b2) {
    a2.context._currentValue = a2.parentValue;
    a2 = a2.parent;
    var c2 = b2.parent;
    if (a2 === null) {
      if (c2 !== null)
        throw Error(m$3(401));
    } else {
      if (c2 === null)
        throw Error(m$3(401));
      Q$3(a2, c2);
      b2.context._currentValue = b2.value;
    }
  }
}
function Sb$1(a2) {
  a2.context._currentValue = a2.parentValue;
  a2 = a2.parent;
  a2 !== null && Sb$1(a2);
}
function Tb$1(a2) {
  var b2 = a2.parent;
  b2 !== null && Tb$1(b2);
  a2.context._currentValue = a2.value;
}
function Ub$1(a2, b2) {
  a2.context._currentValue = a2.parentValue;
  a2 = a2.parent;
  if (a2 === null)
    throw Error(m$3(402));
  a2.depth === b2.depth ? Q$3(a2, b2) : Ub$1(a2, b2);
}
function Vb$1(a2, b2) {
  var c2 = b2.parent;
  if (c2 === null)
    throw Error(m$3(402));
  a2.depth === c2.depth ? Q$3(a2, c2) : Vb$1(a2, c2);
  b2.context._currentValue = b2.value;
}
function R$4(a2) {
  var b2 = P$4;
  b2 !== a2 && (b2 === null ? Tb$1(a2) : a2 === null ? Sb$1(b2) : b2.depth === a2.depth ? Q$3(b2, a2) : b2.depth > a2.depth ? Ub$1(b2, a2) : Vb$1(b2, a2), P$4 = a2);
}
var Wb$1 = { isMounted: function() {
  return false;
}, enqueueSetState: function(a2, b2) {
  a2 = a2._reactInternals;
  a2.queue !== null && a2.queue.push(b2);
}, enqueueReplaceState: function(a2, b2) {
  a2 = a2._reactInternals;
  a2.replace = true;
  a2.queue = [b2];
}, enqueueForceUpdate: function() {
} };
function Xb$1(a2, b2, c2, d2) {
  var e2 = a2.state !== void 0 ? a2.state : null;
  a2.updater = Wb$1;
  a2.props = c2;
  a2.state = e2;
  var g2 = { queue: [], replace: false };
  a2._reactInternals = g2;
  var f2 = b2.contextType;
  a2.context = typeof f2 === "object" && f2 !== null ? f2._currentValue : d2;
  f2 = b2.getDerivedStateFromProps;
  typeof f2 === "function" && (f2 = f2(c2, e2), e2 = f2 === null || f2 === void 0 ? e2 : k$4({}, e2, f2), a2.state = e2);
  if (typeof b2.getDerivedStateFromProps !== "function" && typeof a2.getSnapshotBeforeUpdate !== "function" && (typeof a2.UNSAFE_componentWillMount === "function" || typeof a2.componentWillMount === "function"))
    if (b2 = a2.state, typeof a2.componentWillMount === "function" && a2.componentWillMount(), typeof a2.UNSAFE_componentWillMount === "function" && a2.UNSAFE_componentWillMount(), b2 !== a2.state && Wb$1.enqueueReplaceState(a2, a2.state, null), g2.queue !== null && 0 < g2.queue.length)
      if (b2 = g2.queue, f2 = g2.replace, g2.queue = null, g2.replace = false, f2 && b2.length === 1)
        a2.state = b2[0];
      else {
        g2 = f2 ? b2[0] : a2.state;
        e2 = true;
        for (f2 = f2 ? 1 : 0; f2 < b2.length; f2++) {
          var h2 = b2[f2];
          h2 = typeof h2 === "function" ? h2.call(a2, g2, c2, d2) : h2;
          h2 != null && (e2 ? (e2 = false, g2 = k$4({}, g2, h2)) : k$4(g2, h2));
        }
        a2.state = g2;
      }
    else
      g2.queue = null;
}
function Yb$1(a2, b2) {
  return a2 === b2 && (a2 !== 0 || 1 / a2 === 1 / b2) || a2 !== a2 && b2 !== b2;
}
var Zb$1 = typeof Object.is === "function" ? Object.is : Yb$1, S$3 = null, $b$1 = null, T$4 = null, U$4 = false, ac$2 = false, V$3 = null, bc$1 = 0;
function W$2() {
  if (S$3 === null)
    throw Error(m$3(321));
  return S$3;
}
function cc$1() {
  if (0 < bc$1)
    throw Error(m$3(312));
  return { memoizedState: null, queue: null, next: null };
}
function dc$1() {
  T$4 === null ? $b$1 === null ? (U$4 = false, $b$1 = T$4 = cc$1()) : (U$4 = true, T$4 = $b$1) : T$4.next === null ? (U$4 = false, T$4 = T$4.next = cc$1()) : (U$4 = true, T$4 = T$4.next);
  return T$4;
}
function ec$1() {
  S$3 = null;
  ac$2 = false;
  $b$1 = null;
  bc$1 = 0;
  T$4 = V$3 = null;
}
function fc$1(a2, b2) {
  return typeof b2 === "function" ? b2(a2) : b2;
}
function gc$1(a2, b2, c2) {
  S$3 = W$2();
  T$4 = dc$1();
  if (U$4) {
    var d2 = T$4.queue;
    b2 = d2.dispatch;
    if (V$3 !== null && (c2 = V$3.get(d2), c2 !== void 0)) {
      V$3.delete(d2);
      d2 = T$4.memoizedState;
      do
        d2 = a2(d2, c2.action), c2 = c2.next;
      while (c2 !== null);
      T$4.memoizedState = d2;
      return [d2, b2];
    }
    return [T$4.memoizedState, b2];
  }
  a2 = a2 === fc$1 ? typeof b2 === "function" ? b2() : b2 : c2 !== void 0 ? c2(b2) : b2;
  T$4.memoizedState = a2;
  a2 = T$4.queue = { last: null, dispatch: null };
  a2 = a2.dispatch = hc$1.bind(null, S$3, a2);
  return [T$4.memoizedState, a2];
}
function ic$2(a2, b2) {
  S$3 = W$2();
  T$4 = dc$1();
  b2 = b2 === void 0 ? null : b2;
  if (T$4 !== null) {
    var c2 = T$4.memoizedState;
    if (c2 !== null && b2 !== null) {
      var d2 = c2[1];
      a:
        if (d2 === null)
          d2 = false;
        else {
          for (var e2 = 0; e2 < d2.length && e2 < b2.length; e2++)
            if (!Zb$1(b2[e2], d2[e2])) {
              d2 = false;
              break a;
            }
          d2 = true;
        }
      if (d2)
        return c2[0];
    }
  }
  a2 = a2();
  T$4.memoizedState = [a2, b2];
  return a2;
}
function hc$1(a2, b2, c2) {
  if (!(25 > bc$1))
    throw Error(m$3(301));
  if (a2 === S$3)
    if (ac$2 = true, a2 = { action: c2, next: null }, V$3 === null && (V$3 = new Map()), c2 = V$3.get(b2), c2 === void 0)
      V$3.set(b2, a2);
    else {
      for (b2 = c2; b2.next !== null; )
        b2 = b2.next;
      b2.next = a2;
    }
}
function jc$1() {
  throw Error(m$3(394));
}
function kc$1() {
}
var mc$1 = { readContext: function(a2) {
  return a2._currentValue;
}, useContext: function(a2) {
  W$2();
  return a2._currentValue;
}, useMemo: ic$2, useReducer: gc$1, useRef: function(a2) {
  S$3 = W$2();
  T$4 = dc$1();
  var b2 = T$4.memoizedState;
  return b2 === null ? (a2 = { current: a2 }, T$4.memoizedState = a2) : b2;
}, useState: function(a2) {
  return gc$1(fc$1, a2);
}, useLayoutEffect: function() {
}, useCallback: function(a2, b2) {
  return ic$2(function() {
    return a2;
  }, b2);
}, useImperativeHandle: kc$1, useEffect: kc$1, useDebugValue: kc$1, useDeferredValue: function(a2) {
  W$2();
  return a2;
}, useTransition: function() {
  W$2();
  return [
    false,
    jc$1
  ];
}, useOpaqueIdentifier: function() {
  var a2 = lc$1;
  if (a2 === null)
    throw Error(m$3(404));
  return a2.opaqueIdentifierPrefix + (a2.nextOpaqueID++).toString(36);
}, useMutableSource: function(a2, b2) {
  W$2();
  return b2(a2._source);
} }, lc$1 = null, nc$1 = aa$3.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentDispatcher;
function oc$1(a2) {
  console.error(a2);
}
function pc$1() {
}
function qc$1(a2, b2, c2, d2) {
  var e2 = 4 < arguments.length && arguments[4] !== void 0 ? arguments[4] : 12800, g2 = 5 < arguments.length && arguments[5] !== void 0 ? arguments[5] : oc$1, f2 = 6 < arguments.length && arguments[6] !== void 0 ? arguments[6] : pc$1, h2 = 7 < arguments.length && arguments[7] !== void 0 ? arguments[7] : pc$1, l2 = [], n2 = new Set();
  e2 = {
    destination: b2,
    responseState: c2,
    progressiveChunkSize: e2,
    status: 0,
    nextSegmentId: 0,
    allPendingTasks: 0,
    pendingRootTasks: 0,
    completedRootSegment: null,
    abortableTasks: n2,
    pingedTasks: l2,
    clientRenderedBoundaries: [],
    completedBoundaries: [],
    partialBoundaries: [],
    onError: g2,
    onCompleteAll: f2,
    onReadyToStream: h2
  };
  g2 = X$2(e2, 0, null, d2);
  g2.parentFlushed = true;
  n2 = rc$1(e2, a2, null, g2, n2, Qb$1, null, null);
  l2.push(n2);
  return e2;
}
function rc$1(a2, b2, c2, d2, e2, g2, f2, h2) {
  a2.allPendingTasks++;
  c2 === null ? a2.pendingRootTasks++ : c2.pendingTasks++;
  var l2 = { node: b2, ping: function() {
    var b3 = a2.pingedTasks;
    b3.push(l2);
    b3.length === 1 && sc$2(a2);
  }, blockedBoundary: c2, blockedSegment: d2, abortSet: e2, legacyContext: g2, context: f2, assignID: h2 };
  e2.add(l2);
  return l2;
}
function X$2(a2, b2, c2, d2) {
  return { status: 0, id: -1, index: b2, parentFlushed: false, chunks: [], children: [], formatContext: d2, boundary: c2 };
}
function Y$4(a2, b2) {
  a2 = a2.onError;
  a2(b2);
}
function tc$1(a2, b2) {
  a2.status = 2;
  a2 = a2.destination;
  typeof a2.error === "function" ? a2.error(b2) : a2.close();
}
function uc$1(a2) {
  throw Error(m$3(152, O$3(a2) || "Component"));
}
function vc$1(a2, b2, c2, d2, e2) {
  S$3 = {};
  for (a2 = c2(d2, e2); ac$2; )
    ac$2 = false, bc$1 += 1, T$4 = null, a2 = c2(d2, e2);
  ec$1();
  d2 = a2;
  d2 === void 0 && uc$1(c2);
  return d2;
}
function wc$1(a2, b2, c2, d2) {
  var e2 = c2.render();
  e2 === void 0 && uc$1(d2);
  var g2 = d2.childContextTypes;
  if (g2 !== null && g2 !== void 0) {
    var f2 = b2.legacyContext;
    if (typeof c2.getChildContext !== "function")
      d2 = f2;
    else {
      c2 = c2.getChildContext();
      for (var h2 in c2)
        if (!(h2 in g2))
          throw Error(m$3(108, O$3(d2) || "Unknown", h2));
      d2 = k$4({}, f2, c2);
    }
    b2.legacyContext = d2;
    Z$3(a2, b2, e2);
    b2.legacyContext = f2;
  } else
    Z$3(a2, b2, e2);
}
function xc$1(a2, b2) {
  if (a2 && a2.defaultProps) {
    b2 = k$4({}, b2);
    a2 = a2.defaultProps;
    for (var c2 in a2)
      b2[c2] === void 0 && (b2[c2] = a2[c2]);
    return b2;
  }
  return b2;
}
function yc$1(a2, b2, c2, d2, e2) {
  if (typeof c2 === "function")
    if (c2.prototype && c2.prototype.isReactComponent) {
      e2 = Rb$1(c2, b2.legacyContext);
      var g2 = c2.contextType;
      g2 = new c2(d2, typeof g2 === "object" && g2 !== null ? g2._currentValue : e2);
      Xb$1(g2, c2, d2, e2);
      wc$1(a2, b2, g2, c2);
    } else
      e2 = Rb$1(c2, b2.legacyContext), g2 = vc$1(a2, b2, c2, d2, e2), typeof g2 === "object" && g2 !== null && typeof g2.render === "function" && g2.$$typeof === void 0 ? (Xb$1(g2, c2, d2, e2), wc$1(a2, b2, g2, c2)) : Z$3(a2, b2, g2);
  else if (typeof c2 === "string") {
    e2 = b2.blockedSegment;
    g2 = Ka$3(e2.chunks, c2, d2, a2.responseState, e2.formatContext, b2.assignID);
    b2.assignID = null;
    var f2 = e2.formatContext;
    e2.formatContext = pa$3(f2, c2, d2);
    zc$1(a2, b2, g2);
    e2.formatContext = f2;
    switch (c2) {
      case "area":
      case "base":
      case "br":
      case "col":
      case "embed":
      case "hr":
      case "img":
      case "input":
      case "keygen":
      case "link":
      case "meta":
      case "param":
      case "source":
      case "track":
      case "wbr":
        break;
      default:
        e2.chunks.push(La$3, r$3(c2), Ma$3);
    }
  } else {
    switch (c2) {
      case Nb$1:
      case Mb$1:
      case Db$1:
      case Eb$1:
      case Cb$1:
        Z$3(a2, b2, d2.children);
        return;
      case Jb$1:
        Z$3(a2, b2, d2.children);
        return;
      case Lb$1:
        throw Error(m$3(343));
      case Ib$1:
        a: {
          c2 = b2.blockedBoundary;
          g2 = b2.blockedSegment;
          C$3(g2.chunks, a2.responseState, b2.assignID);
          b2.assignID = null;
          e2 = d2.fallback;
          var h2 = d2.children;
          d2 = new Set();
          var l2 = { id: { formattedID: null }, rootSegmentID: -1, parentFlushed: false, pendingTasks: 0, forceClientRender: false, completedSegments: [], byteSize: 0, fallbackAbortableTasks: d2 };
          f2 = X$2(a2, g2.chunks.length, l2, g2.formatContext);
          g2.children.push(f2);
          var n2 = X$2(a2, 0, null, g2.formatContext);
          n2.parentFlushed = true;
          b2.blockedBoundary = l2;
          b2.blockedSegment = n2;
          try {
            if (zc$1(a2, b2, h2), n2.status = 1, l2.completedSegments.push(n2), l2.pendingTasks === 0)
              break a;
          } catch (q2) {
            n2.status = 4, Y$4(a2, q2), l2.forceClientRender = true;
          } finally {
            b2.blockedBoundary = c2, b2.blockedSegment = g2;
          }
          C$3(f2.chunks, a2.responseState, l2.id);
          g2 = X$2(a2, f2.chunks.length, null, f2.formatContext);
          f2.status = 1;
          f2.children.push(g2);
          b2 = rc$1(a2, e2, c2, g2, d2, b2.legacyContext, b2.context, null);
          a2.pingedTasks.push(b2);
        }
        return;
    }
    if (typeof c2 === "object" && c2 !== null)
      switch (c2.$$typeof) {
        case Hb$1:
          d2 = vc$1(a2, b2, c2.render, d2, e2);
          Z$3(a2, b2, d2);
          return;
        case Kb$1:
          c2 = c2.type;
          d2 = xc$1(c2, d2);
          yc$1(a2, b2, c2, d2, e2);
          return;
        case Fb$1:
          e2 = d2.children;
          c2 = c2._context;
          d2 = d2.value;
          g2 = c2._currentValue;
          c2._currentValue = d2;
          f2 = P$4;
          P$4 = d2 = {
            parent: f2,
            depth: f2 === null ? 0 : f2.depth + 1,
            context: c2,
            parentValue: g2,
            value: d2
          };
          b2.context = d2;
          Z$3(a2, b2, e2);
          a2 = P$4;
          if (a2 === null)
            throw Error(m$3(403));
          a2.context._currentValue = a2.parentValue;
          a2 = P$4 = a2.parent;
          b2.context = a2;
          return;
        case Gb$1:
          d2 = d2.children;
          d2 = d2(c2._currentValue);
          Z$3(a2, b2, d2);
          return;
        case M$4:
          e2 = c2._init;
          c2 = e2(c2._payload);
          d2 = xc$1(c2, d2);
          yc$1(a2, b2, c2, d2, void 0);
          return;
      }
    throw Error(m$3(130, c2 == null ? c2 : typeof c2, ""));
  }
}
function Z$3(a2, b2, c2) {
  b2.node = c2;
  if (typeof c2 === "object" && c2 !== null) {
    switch (c2.$$typeof) {
      case Ab$1:
        yc$1(a2, b2, c2.type, c2.props, c2.ref);
        return;
      case Bb$1:
        throw Error(m$3(257));
      case M$4:
        var d2 = c2._init;
        c2 = d2(c2._payload);
        Z$3(a2, b2, c2);
        return;
    }
    if (na$3(c2)) {
      if (0 < c2.length)
        for (d2 = 0; d2 < c2.length; d2++)
          zc$1(a2, b2, c2[d2]);
      else
        C$3(b2.blockedSegment.chunks, a2.responseState, b2.assignID), b2.assignID = null;
      return;
    }
    c2 === null || typeof c2 !== "object" ? d2 = null : (d2 = Pb$1 && c2[Pb$1] || c2["@@iterator"], d2 = typeof d2 === "function" ? d2 : null);
    if (d2) {
      if (d2 = d2.call(c2)) {
        var e2 = d2.next();
        if (!e2.done) {
          do
            zc$1(a2, b2, e2.value), e2 = d2.next();
          while (!e2.done);
          return;
        }
      }
      C$3(b2.blockedSegment.chunks, a2.responseState, b2.assignID);
      b2.assignID = null;
    }
    a2 = Object.prototype.toString.call(c2);
    throw Error(m$3(31, a2 === "[object Object]" ? "object with keys {" + Object.keys(c2).join(", ") + "}" : a2));
  }
  typeof c2 === "string" ? ua$2(b2.blockedSegment.chunks, c2, a2.responseState, b2.assignID) : typeof c2 === "number" ? ua$2(b2.blockedSegment.chunks, "" + c2, a2.responseState, b2.assignID) : C$3(b2.blockedSegment.chunks, a2.responseState, b2.assignID);
  b2.assignID = null;
}
function zc$1(a2, b2, c2) {
  var d2 = b2.blockedSegment.formatContext, e2 = b2.legacyContext, g2 = b2.context;
  try {
    return Z$3(a2, b2, c2);
  } catch (l2) {
    if (ec$1(), typeof l2 === "object" && l2 !== null && typeof l2.then === "function") {
      c2 = l2;
      var f2 = b2.blockedSegment, h2 = X$2(a2, f2.chunks.length, null, f2.formatContext);
      f2.children.push(h2);
      a2 = rc$1(a2, b2.node, b2.blockedBoundary, h2, b2.abortSet, b2.legacyContext, b2.context, b2.assignID);
      b2.assignID = null;
      a2 = a2.ping;
      c2.then(a2, a2);
      b2.blockedSegment.formatContext = d2;
      b2.legacyContext = e2;
      b2.context = g2;
      R$4(g2);
    } else
      throw b2.blockedSegment.formatContext = d2, b2.legacyContext = e2, b2.context = g2, R$4(g2), l2;
  }
}
function Ac$1(a2) {
  var b2 = a2.blockedBoundary;
  a2 = a2.blockedSegment;
  a2.status = 3;
  Bc$1(this, b2, a2);
}
function Cc$1(a2) {
  var b2 = a2.blockedBoundary;
  a2.blockedSegment.status = 3;
  b2 === null ? (this.allPendingTasks--, this.status !== 2 && (this.status = 2, this.destination.close())) : (b2.pendingTasks--, b2.forceClientRender || (b2.forceClientRender = true, b2.parentFlushed && this.clientRenderedBoundaries.push(b2)), b2.fallbackAbortableTasks.forEach(Cc$1, this), b2.fallbackAbortableTasks.clear(), this.allPendingTasks--, this.allPendingTasks === 0 && (a2 = this.onCompleteAll, a2()));
}
function Bc$1(a2, b2, c2) {
  if (b2 === null) {
    if (c2.parentFlushed) {
      if (a2.completedRootSegment !== null)
        throw Error(m$3(389));
      a2.completedRootSegment = c2;
    }
    a2.pendingRootTasks--;
    a2.pendingRootTasks === 0 && (b2 = a2.onReadyToStream, b2());
  } else if (b2.pendingTasks--, !b2.forceClientRender) {
    if (b2.pendingTasks === 0)
      c2.parentFlushed && b2.completedSegments.push(c2), b2.parentFlushed && a2.completedBoundaries.push(b2), b2.fallbackAbortableTasks.forEach(Ac$1, a2), b2.fallbackAbortableTasks.clear();
    else if (c2.parentFlushed) {
      var d2 = b2.completedSegments;
      d2.push(c2);
      d2.length === 1 && b2.parentFlushed && a2.partialBoundaries.push(b2);
    }
  }
  a2.allPendingTasks--;
  a2.allPendingTasks === 0 && (a2 = a2.onCompleteAll, a2());
}
function sc$2(a2) {
  if (a2.status !== 2) {
    var b2 = P$4, c2 = nc$1.current;
    nc$1.current = mc$1;
    var d2 = lc$1;
    lc$1 = a2.responseState;
    try {
      var e2 = a2.pingedTasks, g2;
      for (g2 = 0; g2 < e2.length; g2++) {
        var f2 = e2[g2];
        var h2 = a2, l2 = f2.blockedSegment;
        if (l2.status === 0) {
          R$4(f2.context);
          try {
            Z$3(h2, f2, f2.node), f2.abortSet.delete(f2), l2.status = 1, Bc$1(h2, f2.blockedBoundary, l2);
          } catch (v2) {
            if (ec$1(), typeof v2 === "object" && v2 !== null && typeof v2.then === "function") {
              var n2 = f2.ping;
              v2.then(n2, n2);
            } else {
              f2.abortSet.delete(f2);
              l2.status = 4;
              var q2 = f2.blockedBoundary, t2 = v2;
              Y$4(h2, t2);
              q2 === null ? tc$1(h2, t2) : (q2.pendingTasks--, q2.forceClientRender || (q2.forceClientRender = true, q2.parentFlushed && h2.clientRenderedBoundaries.push(q2)));
              h2.allPendingTasks--;
              if (h2.allPendingTasks === 0) {
                var G2 = h2.onCompleteAll;
                G2();
              }
            }
          } finally {
          }
        }
      }
      e2.splice(0, g2);
      a2.status === 1 && Dc$1(a2);
    } catch (v2) {
      Y$4(a2, v2), tc$1(a2, v2);
    } finally {
      lc$1 = d2, nc$1.current = c2, c2 === mc$1 && R$4(b2);
    }
  }
}
function Ec$1(a2, b2, c2) {
  c2.parentFlushed = true;
  switch (c2.status) {
    case 0:
      var d2 = c2.id = a2.nextSegmentId++;
      a2 = a2.responseState;
      p$4(b2, Na$3);
      p$4(b2, a2.placeholderPrefix);
      a2 = r$3(d2.toString(16));
      p$4(b2, a2);
      return p$4(b2, Oa$3);
    case 1:
      c2.status = 2;
      var e2 = true;
      d2 = c2.chunks;
      var g2 = 0;
      c2 = c2.children;
      for (var f2 = 0; f2 < c2.length; f2++) {
        for (e2 = c2[f2]; g2 < e2.index; g2++)
          p$4(b2, d2[g2]);
        e2 = Fc$1(a2, b2, e2);
      }
      for (; g2 < d2.length; g2++)
        e2 = p$4(b2, d2[g2]);
      return e2;
    default:
      throw Error(m$3(390));
  }
}
function Fc$1(a2, b2, c2) {
  var d2 = c2.boundary;
  if (d2 === null)
    return Ec$1(a2, b2, c2);
  d2.parentFlushed = true;
  if (d2.forceClientRender)
    p$4(b2, Ra$3), Ec$1(a2, b2, c2);
  else if (0 < d2.pendingTasks)
    d2.rootSegmentID = a2.nextSegmentId++, 0 < d2.completedSegments.length && a2.partialBoundaries.push(d2), p$4(b2, Qa$3), Ec$1(a2, b2, c2);
  else if (d2.byteSize > a2.progressiveChunkSize)
    d2.rootSegmentID = a2.nextSegmentId++, a2.completedBoundaries.push(d2), p$4(b2, Qa$3), Ec$1(a2, b2, c2);
  else {
    p$4(b2, Pa$3);
    c2 = d2.completedSegments;
    if (c2.length !== 1)
      throw Error(m$3(391));
    Fc$1(a2, b2, c2[0]);
  }
  return p$4(b2, Sa$3);
}
function Gc$1(a2, b2, c2) {
  nb$1(b2, a2.responseState, c2.formatContext, c2.id);
  Fc$1(a2, b2, c2);
  return ob$1(b2, c2.formatContext);
}
function Hc$1(a2, b2, c2) {
  for (var d2 = c2.completedSegments, e2 = 0; e2 < d2.length; e2++)
    Ic$1(a2, b2, c2, d2[e2]);
  d2.length = 0;
  a2 = a2.responseState;
  d2 = c2.id;
  c2 = c2.rootSegmentID;
  a2.sentCompleteBoundaryFunction ? p$4(b2, ub$1) : (a2.sentCompleteBoundaryFunction = true, p$4(b2, tb$1));
  d2 = d2.formattedID;
  if (d2 === null)
    throw Error(m$3(395));
  c2 = r$3(c2.toString(16));
  p$4(b2, d2);
  p$4(b2, vb$1);
  p$4(b2, a2.segmentPrefix);
  p$4(b2, c2);
  return p$4(b2, wb$1);
}
function Ic$1(a2, b2, c2, d2) {
  if (d2.status === 2)
    return true;
  var e2 = d2.id;
  if (e2 === -1) {
    if ((d2.id = c2.rootSegmentID) === -1)
      throw Error(m$3(392));
    return Gc$1(a2, b2, d2);
  }
  Gc$1(a2, b2, d2);
  a2 = a2.responseState;
  a2.sentCompleteSegmentFunction ? p$4(b2, qb$1) : (a2.sentCompleteSegmentFunction = true, p$4(b2, pb$1));
  p$4(b2, a2.segmentPrefix);
  e2 = r$3(e2.toString(16));
  p$4(b2, e2);
  p$4(b2, rb$1);
  p$4(b2, a2.placeholderPrefix);
  p$4(b2, e2);
  return p$4(b2, sb$1);
}
var Jc$1 = false;
function Dc$1(a2) {
  if (!Jc$1) {
    Jc$1 = true;
    var b2 = a2.destination;
    try {
      var c2 = a2.completedRootSegment;
      c2 !== null && a2.pendingRootTasks === 0 && (Fc$1(a2, b2, c2), a2.completedRootSegment = null);
      var d2 = a2.clientRenderedBoundaries, e2;
      for (e2 = 0; e2 < d2.length; e2++) {
        var g2 = a2.responseState, f2 = d2[e2].id;
        g2.sentClientRenderFunction ? p$4(b2, yb$1) : (g2.sentClientRenderFunction = true, p$4(b2, xb$1));
        var h2 = f2.formattedID;
        if (h2 === null)
          throw Error(m$3(395));
        p$4(b2, h2);
        if (!p$4(b2, zb$1)) {
          a2.status = 0;
          e2++;
          d2.splice(0, e2);
          return;
        }
      }
      d2.splice(0, e2);
      var l2 = a2.completedBoundaries;
      for (e2 = 0; e2 < l2.length; e2++)
        if (!Hc$1(a2, b2, l2[e2])) {
          a2.status = 0;
          e2++;
          l2.splice(0, e2);
          return;
        }
      l2.splice(0, e2);
      var n2 = a2.partialBoundaries;
      for (e2 = 0; e2 < n2.length; e2++) {
        var q2 = n2[e2];
        a: {
          c2 = a2;
          var t2 = q2.completedSegments;
          for (d2 = 0; d2 < t2.length; d2++)
            if (!Ic$1(c2, b2, q2, t2[d2])) {
              d2++;
              t2.splice(0, d2);
              var G2 = false;
              break a;
            }
          t2.splice(0, d2);
          G2 = true;
        }
        if (!G2) {
          a2.status = 0;
          e2++;
          n2.splice(0, e2);
          return;
        }
      }
      n2.splice(0, e2);
      var v2 = a2.completedBoundaries;
      for (e2 = 0; e2 < v2.length; e2++)
        if (!Hc$1(a2, b2, v2[e2])) {
          a2.status = 0;
          e2++;
          v2.splice(0, e2);
          return;
        }
      v2.splice(0, e2);
    } finally {
      Jc$1 = false, a2.allPendingTasks === 0 && a2.pingedTasks.length === 0 && a2.clientRenderedBoundaries.length === 0 && a2.completedBoundaries.length === 0 && b2.close();
    }
  }
}
reactDomUnstableFizz_browser_production_min.renderToReadableStream = function(a2, b2) {
  var c2;
  if (b2 && b2.signal) {
    var d2 = b2.signal, e2 = function() {
      var a3 = c2;
      try {
        var b3 = a3.abortableTasks;
        b3.forEach(Cc$1, a3);
        b3.clear();
        a3.status === 1 && Dc$1(a3);
      } catch (l2) {
        Y$4(a3, l2), tc$1(a3, l2);
      }
      d2.removeEventListener("abort", e2);
    };
    d2.addEventListener("abort", e2);
  }
  var g2 = new ReadableStream({ start: function(d3) {
    var e3 = oa$3(b2 ? b2.identifierPrefix : void 0);
    var f2 = b2 ? b2.namespaceURI : void 0;
    f2 = B$3(f2 === "http://www.w3.org/2000/svg" ? 1 : f2 === "http://www.w3.org/1998/Math/MathML" ? 2 : 0, null);
    c2 = qc$1(a2, d3, e3, f2, b2 ? b2.progressiveChunkSize : void 0, b2 ? b2.onError : void 0, b2 ? b2.onCompleteAll : void 0, b2 ? b2.onReadyToStream : void 0);
    sc$2(c2);
  }, pull: function() {
    if (g2.locked) {
      var a3 = c2;
      if (a3.status !== 2) {
        a3.status = 1;
        try {
          Dc$1(a3);
        } catch (h2) {
          Y$4(a3, h2), tc$1(a3, h2);
        }
      }
    }
  }, cancel: function() {
  } });
  return g2;
};
{
  unstableFizz_browser.exports = reactDomUnstableFizz_browser_production_min;
}
var server_browser = { exports: {} };
var reactDomServer_browser_production_min = {};
/** @license React vundefined
 * react-dom-server.browser.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var k$3 = objectAssign, l$3 = react.exports;
function q$4(a2) {
  for (var b2 = "https://reactjs.org/docs/error-decoder.html?invariant=" + a2, c2 = 1; c2 < arguments.length; c2++)
    b2 += "&args[]=" + encodeURIComponent(arguments[c2]);
  return "Minified React error #" + a2 + "; visit " + b2 + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}
var aa$2 = Array.isArray, t$2 = 60106, w$2 = 60107, x$3 = 60108, A$4 = 60114, B$2 = 60109, D$3 = 60110, ba$2 = 60112, E$3 = 60113, ca$2 = 60120, da$2 = 60115, ea$2 = 60116, fa$2 = 60119, ha$1 = 60129, ia$2 = 60131, ja$2 = 60132;
if (typeof Symbol === "function" && Symbol.for) {
  var G$2 = Symbol.for;
  t$2 = G$2("react.portal");
  w$2 = G$2("react.fragment");
  x$3 = G$2("react.strict_mode");
  A$4 = G$2("react.profiler");
  B$2 = G$2("react.provider");
  D$3 = G$2("react.context");
  ba$2 = G$2("react.forward_ref");
  E$3 = G$2("react.suspense");
  ca$2 = G$2("react.suspense_list");
  da$2 = G$2("react.memo");
  ea$2 = G$2("react.lazy");
  fa$2 = G$2("react.scope");
  ha$1 = G$2("react.debug_trace_mode");
  ia$2 = G$2("react.legacy_hidden");
  ja$2 = G$2("react.cache");
}
function H$3(a2) {
  if (a2 == null)
    return null;
  if (typeof a2 === "function")
    return a2.displayName || a2.name || null;
  if (typeof a2 === "string")
    return a2;
  switch (a2) {
    case w$2:
      return "Fragment";
    case t$2:
      return "Portal";
    case A$4:
      return "Profiler";
    case x$3:
      return "StrictMode";
    case E$3:
      return "Suspense";
    case ca$2:
      return "SuspenseList";
    case ja$2:
      return "Cache";
  }
  if (typeof a2 === "object")
    switch (a2.$$typeof) {
      case D$3:
        return (a2.displayName || "Context") + ".Consumer";
      case B$2:
        return (a2._context.displayName || "Context") + ".Provider";
      case ba$2:
        var b2 = a2.render;
        a2 = a2.displayName;
        a2 || (a2 = b2.displayName || b2.name || "", a2 = a2 !== "" ? "ForwardRef(" + a2 + ")" : "ForwardRef");
        return a2;
      case da$2:
        return b2 = a2.displayName || null, b2 !== null ? b2 : H$3(a2.type) || "Memo";
      case ea$2:
        b2 = a2._payload;
        a2 = a2._init;
        try {
          return H$3(a2(b2));
        } catch (c2) {
        }
    }
  return null;
}
var ka$2 = l$3.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, la$1 = Object.prototype.hasOwnProperty, ma$2 = {};
function I$2(a2, b2) {
  for (var c2 = a2._threadCount | 0; c2 <= b2; c2++)
    a2[c2] = a2._currentValue2, a2._threadCount = c2 + 1;
}
function na$2(a2, b2, c2, d2) {
  if (d2 && (d2 = a2.contextType, typeof d2 === "object" && d2 !== null))
    return I$2(d2, c2), d2[c2];
  if (a2 = a2.contextTypes) {
    c2 = {};
    for (var f2 in a2)
      c2[f2] = b2[f2];
    b2 = c2;
  } else
    b2 = ma$2;
  return b2;
}
for (var J$2 = new Uint16Array(16), K$3 = 0; 15 > K$3; K$3++)
  J$2[K$3] = K$3 + 1;
J$2[15] = 0;
var oa$2 = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, pa$2 = {}, qa$2 = {};
function ra$2(a2) {
  if (la$1.call(qa$2, a2))
    return true;
  if (la$1.call(pa$2, a2))
    return false;
  if (oa$2.test(a2))
    return qa$2[a2] = true;
  pa$2[a2] = true;
  return false;
}
function sa$1(a2, b2, c2, d2) {
  if (c2 !== null && c2.type === 0)
    return false;
  switch (typeof b2) {
    case "function":
    case "symbol":
      return true;
    case "boolean":
      if (d2)
        return false;
      if (c2 !== null)
        return !c2.acceptsBooleans;
      a2 = a2.toLowerCase().slice(0, 5);
      return a2 !== "data-" && a2 !== "aria-";
    default:
      return false;
  }
}
function ta$2(a2, b2, c2, d2) {
  if (b2 === null || typeof b2 === "undefined" || sa$1(a2, b2, c2, d2))
    return true;
  if (d2)
    return false;
  if (c2 !== null)
    switch (c2.type) {
      case 3:
        return !b2;
      case 4:
        return b2 === false;
      case 5:
        return isNaN(b2);
      case 6:
        return isNaN(b2) || 1 > b2;
    }
  return false;
}
function L$2(a2, b2, c2, d2, f2, h2, p2) {
  this.acceptsBooleans = b2 === 2 || b2 === 3 || b2 === 4;
  this.attributeName = d2;
  this.attributeNamespace = f2;
  this.mustUseProperty = c2;
  this.propertyName = a2;
  this.type = b2;
  this.sanitizeURL = h2;
  this.removeEmptyString = p2;
}
var M$3 = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a2) {
  M$3[a2] = new L$2(a2, 0, false, a2, null, false, false);
});
[["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(a2) {
  var b2 = a2[0];
  M$3[b2] = new L$2(b2, 1, false, a2[1], null, false, false);
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function(a2) {
  M$3[a2] = new L$2(a2, 2, false, a2.toLowerCase(), null, false, false);
});
["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(a2) {
  M$3[a2] = new L$2(a2, 2, false, a2, null, false, false);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a2) {
  M$3[a2] = new L$2(a2, 3, false, a2.toLowerCase(), null, false, false);
});
["checked", "multiple", "muted", "selected"].forEach(function(a2) {
  M$3[a2] = new L$2(a2, 3, true, a2, null, false, false);
});
["capture", "download"].forEach(function(a2) {
  M$3[a2] = new L$2(a2, 4, false, a2, null, false, false);
});
["cols", "rows", "size", "span"].forEach(function(a2) {
  M$3[a2] = new L$2(a2, 6, false, a2, null, false, false);
});
["rowSpan", "start"].forEach(function(a2) {
  M$3[a2] = new L$2(a2, 5, false, a2.toLowerCase(), null, false, false);
});
var ua$1 = /[\-:]([a-z])/g;
function va$2(a2) {
  return a2[1].toUpperCase();
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a2) {
  var b2 = a2.replace(ua$1, va$2);
  M$3[b2] = new L$2(b2, 1, false, a2, null, false, false);
});
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a2) {
  var b2 = a2.replace(ua$1, va$2);
  M$3[b2] = new L$2(b2, 1, false, a2, "http://www.w3.org/1999/xlink", false, false);
});
["xml:base", "xml:lang", "xml:space"].forEach(function(a2) {
  var b2 = a2.replace(ua$1, va$2);
  M$3[b2] = new L$2(b2, 1, false, a2, "http://www.w3.org/XML/1998/namespace", false, false);
});
["tabIndex", "crossOrigin"].forEach(function(a2) {
  M$3[a2] = new L$2(a2, 1, false, a2.toLowerCase(), null, false, false);
});
M$3.xlinkHref = new L$2("xlinkHref", 1, false, "xlink:href", "http://www.w3.org/1999/xlink", true, false);
["src", "href", "action", "formAction"].forEach(function(a2) {
  M$3[a2] = new L$2(a2, 1, false, a2.toLowerCase(), null, true, true);
});
var wa$2 = /["'&<>]/;
function N$3(a2) {
  if (typeof a2 === "boolean" || typeof a2 === "number")
    return "" + a2;
  a2 = "" + a2;
  var b2 = wa$2.exec(a2);
  if (b2) {
    var c2 = "", d2, f2 = 0;
    for (d2 = b2.index; d2 < a2.length; d2++) {
      switch (a2.charCodeAt(d2)) {
        case 34:
          b2 = "&quot;";
          break;
        case 38:
          b2 = "&amp;";
          break;
        case 39:
          b2 = "&#x27;";
          break;
        case 60:
          b2 = "&lt;";
          break;
        case 62:
          b2 = "&gt;";
          break;
        default:
          continue;
      }
      f2 !== d2 && (c2 += a2.substring(f2, d2));
      f2 = d2 + 1;
      c2 += b2;
    }
    a2 = f2 !== d2 ? c2 + a2.substring(f2, d2) : c2;
  }
  return a2;
}
function xa$2(a2, b2) {
  var c2 = M$3.hasOwnProperty(a2) ? M$3[a2] : null;
  var d2;
  if (d2 = a2 !== "style")
    d2 = c2 !== null ? c2.type === 0 : !(2 < a2.length) || a2[0] !== "o" && a2[0] !== "O" || a2[1] !== "n" && a2[1] !== "N" ? false : true;
  if (d2 || ta$2(a2, b2, c2, false))
    return "";
  if (c2 !== null) {
    a2 = c2.attributeName;
    d2 = c2.type;
    if (d2 === 3 || d2 === 4 && b2 === true)
      return a2 + '=""';
    c2.sanitizeURL && (b2 = "" + b2);
    return a2 + '="' + (N$3(b2) + '"');
  }
  return ra$2(a2) ? a2 + '="' + (N$3(b2) + '"') : "";
}
function ya$2(a2, b2) {
  return a2 === b2 && (a2 !== 0 || 1 / a2 === 1 / b2) || a2 !== a2 && b2 !== b2;
}
var za$1 = typeof Object.is === "function" ? Object.is : ya$2, P$3 = null, Q$2 = null, R$3 = null, S$2 = false, T$3 = false, U$3 = null, V$2 = 0;
function W$1() {
  if (P$3 === null)
    throw Error(q$4(321));
  return P$3;
}
function Aa$1() {
  if (0 < V$2)
    throw Error(q$4(312));
  return { memoizedState: null, queue: null, next: null };
}
function Ba$2() {
  R$3 === null ? Q$2 === null ? (S$2 = false, Q$2 = R$3 = Aa$1()) : (S$2 = true, R$3 = Q$2) : R$3.next === null ? (S$2 = false, R$3 = R$3.next = Aa$1()) : (S$2 = true, R$3 = R$3.next);
  return R$3;
}
function Ca$2(a2, b2, c2, d2) {
  for (; T$3; )
    T$3 = false, V$2 += 1, R$3 = null, c2 = a2(b2, d2);
  Da$2();
  return c2;
}
function Da$2() {
  P$3 = null;
  T$3 = false;
  Q$2 = null;
  V$2 = 0;
  R$3 = U$3 = null;
}
function Ea$2(a2, b2) {
  return typeof b2 === "function" ? b2(a2) : b2;
}
function Fa$2(a2, b2, c2) {
  P$3 = W$1();
  R$3 = Ba$2();
  if (S$2) {
    var d2 = R$3.queue;
    b2 = d2.dispatch;
    if (U$3 !== null && (c2 = U$3.get(d2), c2 !== void 0)) {
      U$3.delete(d2);
      d2 = R$3.memoizedState;
      do
        d2 = a2(d2, c2.action), c2 = c2.next;
      while (c2 !== null);
      R$3.memoizedState = d2;
      return [d2, b2];
    }
    return [R$3.memoizedState, b2];
  }
  a2 = a2 === Ea$2 ? typeof b2 === "function" ? b2() : b2 : c2 !== void 0 ? c2(b2) : b2;
  R$3.memoizedState = a2;
  a2 = R$3.queue = { last: null, dispatch: null };
  a2 = a2.dispatch = Ga$2.bind(null, P$3, a2);
  return [R$3.memoizedState, a2];
}
function Ha$2(a2, b2) {
  P$3 = W$1();
  R$3 = Ba$2();
  b2 = b2 === void 0 ? null : b2;
  if (R$3 !== null) {
    var c2 = R$3.memoizedState;
    if (c2 !== null && b2 !== null) {
      var d2 = c2[1];
      a:
        if (d2 === null)
          d2 = false;
        else {
          for (var f2 = 0; f2 < d2.length && f2 < b2.length; f2++)
            if (!za$1(b2[f2], d2[f2])) {
              d2 = false;
              break a;
            }
          d2 = true;
        }
      if (d2)
        return c2[0];
    }
  }
  a2 = a2();
  R$3.memoizedState = [a2, b2];
  return a2;
}
function Ga$2(a2, b2, c2) {
  if (!(25 > V$2))
    throw Error(q$4(301));
  if (a2 === P$3)
    if (T$3 = true, a2 = { action: c2, next: null }, U$3 === null && (U$3 = new Map()), c2 = U$3.get(b2), c2 === void 0)
      U$3.set(b2, a2);
    else {
      for (b2 = c2; b2.next !== null; )
        b2 = b2.next;
      b2.next = a2;
    }
}
function Ia$2() {
}
var X$1 = null, Ja$1 = { readContext: function(a2) {
  var b2 = X$1.threadID;
  I$2(a2, b2);
  return a2[b2];
}, useContext: function(a2) {
  W$1();
  var b2 = X$1.threadID;
  I$2(a2, b2);
  return a2[b2];
}, useMemo: Ha$2, useReducer: Fa$2, useRef: function(a2) {
  P$3 = W$1();
  R$3 = Ba$2();
  var b2 = R$3.memoizedState;
  return b2 === null ? (a2 = { current: a2 }, R$3.memoizedState = a2) : b2;
}, useState: function(a2) {
  return Fa$2(Ea$2, a2);
}, useLayoutEffect: function() {
}, useCallback: function(a2, b2) {
  return Ha$2(function() {
    return a2;
  }, b2);
}, useImperativeHandle: Ia$2, useEffect: Ia$2, useDebugValue: Ia$2, useDeferredValue: function(a2) {
  W$1();
  return a2;
}, useTransition: function() {
  W$1();
  return [false, function(a2) {
    a2();
  }];
}, useOpaqueIdentifier: function() {
  return (X$1.identifierPrefix || "") + "R:" + (X$1.uniqueID++).toString(36);
}, useMutableSource: function(a2, b2) {
  W$1();
  return b2(a2._source);
} };
function Ka$2(a2) {
  switch (a2) {
    case "svg":
      return "http://www.w3.org/2000/svg";
    case "math":
      return "http://www.w3.org/1998/Math/MathML";
    default:
      return "http://www.w3.org/1999/xhtml";
  }
}
var La$2 = { area: true, base: true, br: true, col: true, embed: true, hr: true, img: true, input: true, keygen: true, link: true, meta: true, param: true, source: true, track: true, wbr: true }, Ma$2 = k$3({ menuitem: true }, La$2), Y$3 = {
  animationIterationCount: true,
  aspectRatio: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridArea: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
}, Na$2 = ["Webkit", "ms", "Moz", "O"];
Object.keys(Y$3).forEach(function(a2) {
  Na$2.forEach(function(b2) {
    b2 = b2 + a2.charAt(0).toUpperCase() + a2.substring(1);
    Y$3[b2] = Y$3[a2];
  });
});
var Oa$2 = /([A-Z])/g, Pa$2 = /^ms-/, Z$2 = l$3.Children.toArray, Qa$2 = ka$2.ReactCurrentDispatcher, Ra$2 = { listing: true, pre: true, textarea: true }, Sa$2 = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/, Ta$2 = {}, Ua$1 = {};
function Va$1(a2) {
  if (a2 === void 0 || a2 === null)
    return a2;
  var b2 = "";
  l$3.Children.forEach(a2, function(a3) {
    a3 != null && (b2 += a3);
  });
  return b2;
}
var Wa$1 = { children: null, dangerouslySetInnerHTML: null, suppressContentEditableWarning: null, suppressHydrationWarning: null };
function Xa$1(a2, b2) {
  if (a2 === void 0)
    throw Error(q$4(152, H$3(b2) || "Component"));
}
function Ya$1(a2, b2, c2) {
  function d2(d3, h3) {
    var e2 = h3.prototype && h3.prototype.isReactComponent, f3 = na$2(h3, b2, c2, e2), p2 = [], g2 = false, n2 = { isMounted: function() {
      return false;
    }, enqueueForceUpdate: function() {
      if (p2 === null)
        return null;
    }, enqueueReplaceState: function(a3, c3) {
      g2 = true;
      p2 = [c3];
    }, enqueueSetState: function(a3, c3) {
      if (p2 === null)
        return null;
      p2.push(c3);
    } };
    if (e2) {
      if (e2 = new h3(d3.props, f3, n2), typeof h3.getDerivedStateFromProps === "function") {
        var r2 = h3.getDerivedStateFromProps.call(null, d3.props, e2.state);
        r2 != null && (e2.state = k$3({}, e2.state, r2));
      }
    } else if (P$3 = {}, e2 = h3(d3.props, f3, n2), e2 = Ca$2(h3, d3.props, e2, f3), e2 == null || e2.render == null) {
      a2 = e2;
      Xa$1(a2, h3);
      return;
    }
    e2.props = d3.props;
    e2.context = f3;
    e2.updater = n2;
    n2 = e2.state;
    n2 === void 0 && (e2.state = n2 = null);
    if (typeof e2.UNSAFE_componentWillMount === "function" || typeof e2.componentWillMount === "function")
      if (typeof e2.componentWillMount === "function" && typeof h3.getDerivedStateFromProps !== "function" && e2.componentWillMount(), typeof e2.UNSAFE_componentWillMount === "function" && typeof h3.getDerivedStateFromProps !== "function" && e2.UNSAFE_componentWillMount(), p2.length) {
        n2 = p2;
        var u2 = g2;
        p2 = null;
        g2 = false;
        if (u2 && n2.length === 1)
          e2.state = n2[0];
        else {
          r2 = u2 ? n2[0] : e2.state;
          var C2 = true;
          for (u2 = u2 ? 1 : 0; u2 < n2.length; u2++) {
            var v2 = n2[u2];
            v2 = typeof v2 === "function" ? v2.call(e2, r2, d3.props, f3) : v2;
            v2 != null && (C2 ? (C2 = false, r2 = k$3({}, r2, v2)) : k$3(r2, v2));
          }
          e2.state = r2;
        }
      } else
        p2 = null;
    a2 = e2.render();
    Xa$1(a2, h3);
    if (typeof e2.getChildContext === "function" && (d3 = h3.childContextTypes, typeof d3 === "object")) {
      var O2 = e2.getChildContext();
      for (var y2 in O2)
        if (!(y2 in d3))
          throw Error(q$4(108, H$3(h3) || "Unknown", y2));
    }
    O2 && (b2 = k$3({}, b2, O2));
  }
  for (; l$3.isValidElement(a2); ) {
    var f2 = a2, h2 = f2.type;
    if (typeof h2 !== "function")
      break;
    d2(f2, h2);
  }
  return { child: a2, context: b2 };
}
var Za$1 = function() {
  function a2(a3, b3, f2) {
    l$3.isValidElement(a3) ? a3.type !== w$2 ? a3 = [a3] : (a3 = a3.props.children, a3 = l$3.isValidElement(a3) ? [a3] : Z$2(a3)) : a3 = Z$2(a3);
    a3 = { type: null, domNamespace: "http://www.w3.org/1999/xhtml", children: a3, childIndex: 0, context: ma$2, footer: "" };
    var c2 = J$2[0];
    if (c2 === 0) {
      var d2 = J$2;
      c2 = d2.length;
      var g2 = 2 * c2;
      if (!(65536 >= g2))
        throw Error(q$4(304));
      var e2 = new Uint16Array(g2);
      e2.set(d2);
      J$2 = e2;
      J$2[0] = c2 + 1;
      for (d2 = c2; d2 < g2 - 1; d2++)
        J$2[d2] = d2 + 1;
      J$2[g2 - 1] = 0;
    } else
      J$2[0] = J$2[c2];
    this.threadID = c2;
    this.stack = [a3];
    this.exhausted = false;
    this.currentSelectValue = null;
    this.previousWasTextNode = false;
    this.makeStaticMarkup = b3;
    this.suspenseDepth = 0;
    this.contextIndex = -1;
    this.contextStack = [];
    this.contextValueStack = [];
    this.uniqueID = 0;
    this.identifierPrefix = f2 && f2.identifierPrefix || "";
  }
  var b2 = a2.prototype;
  b2.destroy = function() {
    if (!this.exhausted) {
      this.exhausted = true;
      this.clearProviders();
      var a3 = this.threadID;
      J$2[a3] = J$2[0];
      J$2[0] = a3;
    }
  };
  b2.pushProvider = function(a3) {
    var c2 = ++this.contextIndex, b3 = a3.type._context, h2 = this.threadID;
    I$2(b3, h2);
    var p2 = b3[h2];
    this.contextStack[c2] = b3;
    this.contextValueStack[c2] = p2;
    b3[h2] = a3.props.value;
  };
  b2.popProvider = function() {
    var a3 = this.contextIndex, b3 = this.contextStack[a3], f2 = this.contextValueStack[a3];
    this.contextStack[a3] = null;
    this.contextValueStack[a3] = null;
    this.contextIndex--;
    b3[this.threadID] = f2;
  };
  b2.clearProviders = function() {
    for (var a3 = this.contextIndex; 0 <= a3; a3--)
      this.contextStack[a3][this.threadID] = this.contextValueStack[a3];
  };
  b2.read = function(a3) {
    if (this.exhausted)
      return null;
    var b3 = X$1;
    X$1 = this;
    var c2 = Qa$2.current;
    Qa$2.current = Ja$1;
    try {
      for (var h2 = [""], p2 = false; h2[0].length < a3; ) {
        if (this.stack.length === 0) {
          this.exhausted = true;
          var g2 = this.threadID;
          J$2[g2] = J$2[0];
          J$2[0] = g2;
          break;
        }
        var e2 = this.stack[this.stack.length - 1];
        if (p2 || e2.childIndex >= e2.children.length) {
          var F2 = e2.footer;
          F2 !== "" && (this.previousWasTextNode = false);
          this.stack.pop();
          if (e2.type === "select")
            this.currentSelectValue = null;
          else if (e2.type != null && e2.type.type != null && e2.type.type.$$typeof === B$2)
            this.popProvider(e2.type);
          else if (e2.type === E$3) {
            this.suspenseDepth--;
            var m2 = h2.pop();
            if (p2) {
              p2 = false;
              var z2 = e2.fallbackFrame;
              if (!z2)
                throw Error(q$4(303));
              this.stack.push(z2);
              h2[this.suspenseDepth] += "<!--$!-->";
              continue;
            } else
              h2[this.suspenseDepth] += m2;
          }
          h2[this.suspenseDepth] += F2;
        } else {
          var n2 = e2.children[e2.childIndex++], r2 = "";
          try {
            r2 += this.render(n2, e2.context, e2.domNamespace);
          } catch (u2) {
            if (u2 != null && typeof u2.then === "function") {
              if (!(0 < this.suspenseDepth))
                throw Error(q$4(342));
              p2 = true;
            } else
              throw u2;
          } finally {
          }
          h2.length <= this.suspenseDepth && h2.push("");
          h2[this.suspenseDepth] += r2;
        }
      }
      return h2[0];
    } finally {
      Qa$2.current = c2, X$1 = b3, Da$2();
    }
  };
  b2.render = function(a3, b3, f2) {
    if (typeof a3 === "string" || typeof a3 === "number") {
      f2 = "" + a3;
      if (f2 === "")
        return "";
      if (this.makeStaticMarkup)
        return N$3(f2);
      if (this.previousWasTextNode)
        return "<!-- -->" + N$3(f2);
      this.previousWasTextNode = true;
      return N$3(f2);
    }
    b3 = Ya$1(a3, b3, this.threadID);
    a3 = b3.child;
    b3 = b3.context;
    if (a3 === null || a3 === false)
      return "";
    if (!l$3.isValidElement(a3)) {
      if (a3 != null && a3.$$typeof != null) {
        f2 = a3.$$typeof;
        if (f2 === t$2)
          throw Error(q$4(257));
        throw Error(q$4(258, f2.toString()));
      }
      a3 = Z$2(a3);
      this.stack.push({ type: null, domNamespace: f2, children: a3, childIndex: 0, context: b3, footer: "" });
      return "";
    }
    var c2 = a3.type;
    if (typeof c2 === "string")
      return this.renderDOM(a3, b3, f2);
    switch (c2) {
      case ia$2:
      case ha$1:
      case x$3:
      case A$4:
      case ca$2:
      case w$2:
        return a3 = Z$2(a3.props.children), this.stack.push({ type: null, domNamespace: f2, children: a3, childIndex: 0, context: b3, footer: "" }), "";
      case E$3:
        c2 = a3.props.fallback;
        if (c2 === void 0)
          return a3 = Z$2(a3.props.children), this.stack.push({ type: null, domNamespace: f2, children: a3, childIndex: 0, context: b3, footer: "" }), "";
        c2 = Z$2(c2);
        a3 = Z$2(a3.props.children);
        this.stack.push({ fallbackFrame: { type: null, domNamespace: f2, children: c2, childIndex: 0, context: b3, footer: "<!--/$-->" }, type: E$3, domNamespace: f2, children: a3, childIndex: 0, context: b3, footer: "<!--/$-->" });
        this.suspenseDepth++;
        return "<!--$-->";
      case fa$2:
        throw Error(q$4(343));
    }
    if (typeof c2 === "object" && c2 !== null)
      switch (c2.$$typeof) {
        case ba$2:
          P$3 = {};
          var d2 = c2.render(a3.props, a3.ref);
          d2 = Ca$2(c2.render, a3.props, d2, a3.ref);
          d2 = Z$2(d2);
          this.stack.push({ type: null, domNamespace: f2, children: d2, childIndex: 0, context: b3, footer: "" });
          return "";
        case da$2:
          return a3 = [l$3.createElement(c2.type, k$3({ ref: a3.ref }, a3.props))], this.stack.push({ type: null, domNamespace: f2, children: a3, childIndex: 0, context: b3, footer: "" }), "";
        case B$2:
          return c2 = Z$2(a3.props.children), f2 = {
            type: a3,
            domNamespace: f2,
            children: c2,
            childIndex: 0,
            context: b3,
            footer: ""
          }, this.pushProvider(a3), this.stack.push(f2), "";
        case D$3:
          c2 = a3.type;
          d2 = a3.props;
          var g2 = this.threadID;
          I$2(c2, g2);
          c2 = Z$2(d2.children(c2[g2]));
          this.stack.push({ type: a3, domNamespace: f2, children: c2, childIndex: 0, context: b3, footer: "" });
          return "";
        case ea$2:
          return c2 = a3.type, d2 = c2._init, c2 = d2(c2._payload), a3 = [l$3.createElement(c2, k$3({ ref: a3.ref }, a3.props))], this.stack.push({ type: null, domNamespace: f2, children: a3, childIndex: 0, context: b3, footer: "" }), "";
      }
    throw Error(q$4(130, c2 == null ? c2 : typeof c2, ""));
  };
  b2.renderDOM = function(a3, b3, f2) {
    var c2 = a3.type;
    var d2 = a3.props;
    if (!Ta$2.hasOwnProperty(c2)) {
      if (!Sa$2.test(c2))
        throw Error(q$4(65, c2));
      Ta$2[c2] = true;
    }
    if (c2 === "input")
      d2 = k$3({ type: void 0 }, d2, { defaultChecked: void 0, defaultValue: void 0, value: d2.value != null ? d2.value : d2.defaultValue, checked: d2.checked != null ? d2.checked : d2.defaultChecked });
    else if (c2 === "textarea") {
      var g2 = d2.value;
      if (g2 == null) {
        g2 = d2.defaultValue;
        var e2 = d2.children;
        if (e2 != null) {
          if (g2 != null)
            throw Error(q$4(92));
          if (aa$2(e2)) {
            if (!(1 >= e2.length))
              throw Error(q$4(93));
            e2 = e2[0];
          }
          g2 = "" + e2;
        }
        g2 == null && (g2 = "");
      }
      d2 = k$3({}, d2, { value: void 0, children: "" + g2 });
    } else if (c2 === "select")
      this.currentSelectValue = d2.value != null ? d2.value : d2.defaultValue, d2 = k$3({}, d2, { value: void 0 });
    else if (c2 === "option" && (e2 = this.currentSelectValue, e2 != null)) {
      var F2 = d2.value != null ? d2.value + "" : Va$1(d2.children);
      g2 = false;
      if (aa$2(e2))
        for (var m2 = 0; m2 < e2.length; m2++) {
          if ("" + e2[m2] === F2) {
            g2 = true;
            break;
          }
        }
      else
        g2 = "" + e2 === F2;
      d2 = k$3({ selected: void 0 }, d2, { selected: g2 });
    }
    if (g2 = d2) {
      if (Ma$2[c2] && (g2.children != null || g2.dangerouslySetInnerHTML != null))
        throw Error(q$4(137, c2));
      if (g2.dangerouslySetInnerHTML != null) {
        if (g2.children != null)
          throw Error(q$4(60));
        if (!(typeof g2.dangerouslySetInnerHTML === "object" && "__html" in g2.dangerouslySetInnerHTML))
          throw Error(q$4(61));
      }
      if (g2.style != null && typeof g2.style !== "object")
        throw Error(q$4(62));
    }
    g2 = d2;
    e2 = "<" + a3.type;
    a:
      if (c2.indexOf("-") === -1)
        F2 = typeof g2.is === "string";
      else
        switch (c2) {
          case "annotation-xml":
          case "color-profile":
          case "font-face":
          case "font-face-src":
          case "font-face-uri":
          case "font-face-format":
          case "font-face-name":
          case "missing-glyph":
            F2 = false;
            break a;
          default:
            F2 = true;
        }
    for (y2 in g2)
      if (la$1.call(g2, y2)) {
        var z2 = g2[y2];
        if (z2 != null) {
          if (y2 === "style") {
            m2 = void 0;
            var n2 = "", r2 = "";
            for (m2 in z2)
              if (z2.hasOwnProperty(m2)) {
                var u2 = m2.indexOf("--") === 0, C2 = z2[m2];
                if (C2 != null) {
                  if (u2)
                    var v2 = m2;
                  else if (v2 = m2, Ua$1.hasOwnProperty(v2))
                    v2 = Ua$1[v2];
                  else {
                    var O2 = v2.replace(Oa$2, "-$1").toLowerCase().replace(Pa$2, "-ms-");
                    v2 = Ua$1[v2] = O2;
                  }
                  n2 += r2 + v2 + ":";
                  r2 = m2;
                  u2 = C2 == null || typeof C2 === "boolean" || C2 === "" ? "" : u2 || typeof C2 !== "number" || C2 === 0 || Y$3.hasOwnProperty(r2) && Y$3[r2] ? ("" + C2).trim() : C2 + "px";
                  n2 += u2;
                  r2 = ";";
                }
              }
            z2 = n2 || null;
          }
          m2 = null;
          F2 ? Wa$1.hasOwnProperty(y2) || (m2 = y2, m2 = ra$2(m2) && z2 != null && typeof z2 !== "function" && typeof z2 !== "symbol" ? m2 + '="' + (N$3(z2) + '"') : "") : m2 = xa$2(y2, z2);
          m2 && (e2 += " " + m2);
        }
      }
    var y2 = e2;
    g2 = "";
    La$2.hasOwnProperty(c2) ? y2 += "/>" : (y2 += ">", g2 = "</" + a3.type + ">");
    a: {
      e2 = d2.dangerouslySetInnerHTML;
      if (e2 != null) {
        if (e2.__html != null) {
          e2 = e2.__html;
          break a;
        }
      } else if (e2 = d2.children, typeof e2 === "string" || typeof e2 === "number") {
        e2 = N$3(e2);
        break a;
      }
      e2 = null;
    }
    e2 != null ? (d2 = [], Ra$2.hasOwnProperty(c2) && e2.charAt(0) === "\n" && (y2 += "\n"), y2 += e2) : d2 = Z$2(d2.children);
    a3 = a3.type;
    f2 = f2 == null || f2 === "http://www.w3.org/1999/xhtml" ? Ka$2(a3) : f2 === "http://www.w3.org/2000/svg" && a3 === "foreignObject" ? "http://www.w3.org/1999/xhtml" : f2;
    this.stack.push({ domNamespace: f2, type: c2, children: d2, childIndex: 0, context: b3, footer: g2 });
    this.previousWasTextNode = false;
    return y2;
  };
  return a2;
}();
reactDomServer_browser_production_min.renderToNodeStream = function() {
  throw Error(q$4(207));
};
reactDomServer_browser_production_min.renderToStaticMarkup = function(a2, b2) {
  a2 = new Za$1(a2, true, b2);
  try {
    return a2.read(Infinity);
  } finally {
    a2.destroy();
  }
};
reactDomServer_browser_production_min.renderToStaticNodeStream = function() {
  throw Error(q$4(208));
};
reactDomServer_browser_production_min.renderToString = function(a2, b2) {
  a2 = new Za$1(a2, false, b2);
  try {
    return a2.read(Infinity);
  } finally {
    a2.destroy();
  }
};
reactDomServer_browser_production_min.version = "18.0.0-e6be2d531";
{
  server_browser.exports = reactDomServer_browser_production_min;
}
function getErrorMarkup(error) {
  return `<script>
    import('/@vite/client')
        .then(() => {
            const err = new Error(\`${error.message}\`);
            err.stack = \`${error.stack}\`;
            const ErrorOverlay = customElements.get('vite-error-overlay')
            // don't open outside vite environment
            if (!ErrorOverlay) {return}
            console.log(err)
            const overlay = new ErrorOverlay(err)
            document.body.appendChild(overlay)
        })
<\/script>`;
}
function f$3() {
  return (f$3 = Object.assign || function(a2) {
    for (var b2 = 1; b2 < arguments.length; b2++) {
      var c2, d2 = arguments[b2];
      for (c2 in d2) {
        Object.prototype.hasOwnProperty.call(d2, c2) && (a2[c2] = d2[c2]);
      }
    }
    return a2;
  }).apply(this, arguments);
}
var Element$3 = 60103, h$3 = 60106, k$2 = 60107, aa$1 = 60108, ba$1 = 60114, ca$1 = 60109, da$1 = 60110, ea$1 = 60111, fa$1 = 60112, ha = 60113, ia$1 = 60115, ja$1 = 60116;
if (typeof Symbol == "function" && Symbol.for) {
  var l$2 = Symbol.for;
  Element$3 = l$2("react.element");
  h$3 = l$2("react.portal");
  k$2 = l$2("react.fragment");
  aa$1 = l$2("react.strict_mode");
  ba$1 = l$2("react.profiler");
  ca$1 = l$2("react.provider");
  da$1 = l$2("react.context");
  ea$1 = Symbol.for("react.concurrent_mode");
  fa$1 = l$2("react.forward_ref");
  ha = l$2("react.suspense");
  ia$1 = l$2("react.memo");
  ja$1 = l$2("react.lazy");
}
var n$2 = Element$3, ka$1 = h$3, q$3 = k$2, r$2 = aa$1, t$1 = ba$1, u$1 = ca$1, v$3 = da$1, x$2 = ea$1, z$2 = fa$1, A$3 = ha, B$1 = ia$1, C$2 = ja$1;
var ma$1 = react.exports.Children.toArray;
function na$1(a2) {
  return a2 !== null && typeof a2 == "object";
}
function D$2(a2) {
  return ma$1(a2).filter(na$1);
}
function E$2(a2, b2) {
  return typeof b2 == "object" ? f$3({}, b2, a2) : a2;
}
var F$1 = new Map(), G$1 = {}, H$2 = void 0, I$1 = void 0;
function oa$1() {
  var a2 = H$2;
  H$2 = void 0;
  return a2;
}
function pa$1() {
  var a2 = I$1;
  I$1 = void 0;
  return a2;
}
function J$1(a2) {
  H$2 = void 0;
  G$1 = a2;
}
function K$2(a2) {
  I$1 = void 0;
  F$1 = a2;
}
function L$1(a2) {
  var b2 = F$1.get(a2);
  return b2 !== void 0 ? b2 : a2._currentValue;
}
var qa$1 = {};
function ra$1(a2) {
  var b2 = a2.contextType;
  a2 = a2.contextTypes;
  if (b2) {
    return L$1(b2);
  }
  if (!a2) {
    return qa$1;
  }
  b2 = {};
  for (var d2 in a2) {
    b2[d2] = G$1[d2];
  }
  return b2;
}
var M$2 = null, N$2 = {
  current: {
    uniqueID: 0
  }
};
var ta$1 = typeof Object.is == "function" ? Object.is : function sa2(a2, b2) {
  return a2 === b2 && (a2 !== 0 || 1 / a2 == 1 / b2) || a2 != a2 && b2 != b2;
}, O$2 = null;
function P$2() {
  if (O$2 === null) {
    throw Error("[react-ssr-prepass] Hooks can only be called inside the body of a function component. (https://fb.me/react-invalid-hook-call)");
  }
  return O$2;
}
var Q$1 = null, R$2 = null, S$1 = false, T$2 = null, U$2 = 0;
function V$1() {
  return R$2 === null ? Q$1 === null ? Q$1 = R$2 = {
    memoizedState: null,
    queue: null,
    next: null
  } : R$2 = Q$1 : R$2.next === null ? R$2 = R$2.next = {
    memoizedState: null,
    queue: null,
    next: null
  } : R$2 = R$2.next;
}
function va$1(a2, b2) {
  return typeof b2 == "function" ? b2(a2) : b2;
}
function wa$1(a2, b2, d2) {
  var c2 = P$2();
  (R$2 = V$1()).queue === null && (b2 = a2 === va$1 ? typeof b2 == "function" ? b2() : b2 : d2 !== void 0 ? d2(b2) : b2, R$2.memoizedState = b2);
  c2 = (b2 = R$2.queue || (R$2.queue = {
    last: null,
    dispatch: null
  })).dispatch || (b2.dispatch = xa$1.bind(null, c2, b2));
  if (T$2 !== null && (d2 = T$2.get(b2)) !== void 0) {
    T$2.delete(b2);
    b2 = R$2.memoizedState;
    do {
      b2 = a2(b2, d2.action), d2 = d2.next;
    } while (d2 !== null);
    R$2.memoizedState = b2;
  }
  return [R$2.memoizedState, c2];
}
function ya$1(a2, b2) {
  P$2();
  b2 = b2 === void 0 ? null : b2;
  var d2 = (R$2 = V$1()).memoizedState;
  if (d2 !== null && b2 !== null) {
    a: {
      var c2 = d2[1];
      if (c2 === null) {
        c2 = false;
      } else {
        for (var e2 = 0; e2 < c2.length && e2 < b2.length; e2++) {
          if (!ta$1(b2[e2], c2[e2])) {
            c2 = false;
            break a;
          }
        }
        c2 = true;
      }
    }
    if (c2) {
      return d2[0];
    }
  }
  a2 = a2();
  R$2.memoizedState = [a2, b2];
  return a2;
}
function xa$1(a2, b2, d2) {
  if (a2 === O$2) {
    if (S$1 = true, a2 = {
      action: d2,
      next: null
    }, T$2 === null && (T$2 = new Map()), (d2 = T$2.get(b2)) === void 0) {
      T$2.set(b2, a2);
    } else {
      for (b2 = d2; b2.next !== null; ) {
        b2 = b2.next;
      }
      b2.next = a2;
    }
  }
}
function W() {
}
function Ba$1(a2) {
  a2();
}
var Ca$1 = {
  readContext: function(a2) {
    return L$1(a2);
  },
  useContext: function(a2) {
    P$2();
    return L$1(a2);
  },
  useMemo: ya$1,
  useReducer: wa$1,
  useRef: function(a2) {
    P$2();
    var b2 = (R$2 = V$1()).memoizedState;
    return b2 === null ? R$2.memoizedState = a2 = {
      current: a2
    } : b2;
  },
  useState: function(a2) {
    return wa$1(va$1, a2);
  },
  useCallback: function(a2, b2) {
    return ya$1(function() {
      return a2;
    }, b2);
  },
  useMutableSource: function(a2, b2) {
    P$2();
    return b2(a2._source);
  },
  useTransition: function() {
    return [Ba$1, false];
  },
  useDeferredValue: function(a2) {
    return a2;
  },
  useOpaqueIdentifier: function() {
    P$2();
    (R$2 = V$1()).memoizedState || (R$2.memoizedState = "R:" + (N$2.current.uniqueID++).toString(36));
    return R$2.memoizedState;
  },
  useLayoutEffect: W,
  useImperativeHandle: W,
  useEffect: W,
  useDebugValue: W
};
function Da$1(a2) {
  var b2 = a2._payload || a2;
  if (b2._status === 0) {
    return b2._result;
  }
  if (b2._status === 1) {
    return Promise.resolve(b2._result);
  }
  if (b2._status === 2) {
    return Promise.reject(b2._result);
  }
  b2._status = 0;
  return b2._result = (b2._ctor || b2._result)().then(function(a3) {
    b2._result = a3;
    typeof a3 == "function" ? b2._status = 1 : a3 !== null && typeof a3 == "object" && typeof a3.default == "function" ? (b2._result = a3.default, b2._status = 1) : b2._status = 2;
  }).catch(function(a3) {
    b2._status = 2;
    b2._result = a3;
    return Promise.reject(a3);
  });
}
function Ea$1(a2, b2) {
  return (a2 = a2._payload || a2)._status === 1 ? react.exports.createElement(a2._result, b2) : null;
}
function Fa$1(a2, b2, d2) {
  return {
    contextMap: f$3({}, G$1),
    contextStore: new Map(F$1),
    id: P$2(),
    hook: Q$1,
    kind: "frame.hooks",
    errorFrame: M$2,
    thenable: d2,
    props: b2,
    type: a2
  };
}
function Ga$1(a2, b2, d2) {
  try {
    var c2 = E$2(b2, a2.defaultProps), e2 = ra$1(a2);
    R$2 = null;
    for (var g2 = a2(c2, e2); 25 > U$2 && S$1; ) {
      S$1 = false, U$2 += 1, R$2 = null, g2 = a2(c2, e2);
    }
    U$2 = 0;
    R$2 = T$2 = null;
    return g2;
  } catch (p2) {
    if (typeof p2.then != "function") {
      throw p2;
    }
    d2.push(Fa$1(a2, b2, p2));
    return null;
  }
}
function Ha$1() {
  return false;
}
function Ia$1() {
  return null;
}
function Y$2(a2, b2, d2) {
  return {
    contextMap: f$3({}, G$1),
    contextStore: new Map(F$1),
    errorFrame: M$2,
    thenable: d2,
    kind: "frame.class",
    error: null,
    instance: b2,
    type: a2
  };
}
function Ka$1(a2, b2, d2) {
  var c2 = b2.updater.queue;
  if (0 < c2.length) {
    for (var e2 = f$3({}, b2.state), g2 = 0, p2 = c2.length; g2 < p2; g2++) {
      var m2 = c2[g2];
      (m2 = typeof m2 == "function" ? m2.call(b2, e2, b2.props, b2.context) : m2) !== null && f$3(e2, m2);
    }
    b2.state = e2;
    c2.length = 0;
  }
  c2 = null;
  try {
    c2 = b2.render();
  } catch (y2) {
    if (typeof y2.then != "function") {
      throw y2;
    }
    d2.push(Y$2(a2, b2, y2));
    return null;
  }
  if (a2.childContextTypes !== void 0 && typeof b2.getChildContext == "function" && ((a2 = b2.getChildContext()) !== null && typeof a2 == "object")) {
    H$2 = {};
    for (var w2 in a2) {
      H$2[w2] = G$1[w2], G$1[w2] = a2[w2];
    }
  }
  if (typeof b2.getDerivedStateFromProps != "function" && (typeof b2.componentWillMount == "function" || typeof b2.UNSAFE_componentWillMount == "function") && typeof b2.componentWillUnmount == "function") {
    try {
      b2.componentWillUnmount();
    } catch (y2) {
    }
  }
  b2._isMounted = false;
  return c2;
}
var Z$1 = React$2.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentDispatcher, La$1 = typeof setImmediate == "function";
function Ma$1(a2, b2, d2) {
  switch (function la2(a3) {
    switch (a3.$$typeof) {
      case ka$1:
        return ka$1;
      case n$2:
        switch (a3.type) {
          case x$2:
            return x$2;
          case q$3:
            return q$3;
          case t$1:
            return t$1;
          case r$2:
            return r$2;
          case A$3:
            return A$3;
          default:
            switch (a3.type && a3.type.$$typeof) {
              case C$2:
                return C$2;
              case B$1:
                return B$1;
              case v$3:
                return v$3;
              case u$1:
                return u$1;
              case z$2:
                return z$2;
              default:
                return n$2;
            }
        }
    }
  }(a2)) {
    case A$3:
    case r$2:
    case x$2:
    case t$1:
    case q$3:
      return D$2(a2.props.children);
    case u$1:
      var c2 = a2.props;
      b2 = c2.children;
      c2 = c2.value;
      I$1 = [a2 = a2.type._context, F$1.get(a2)];
      F$1.set(a2, c2);
      return D$2(b2);
    case v$3:
      return typeof (b2 = a2.props.children) == "function" ? D$2(b2(a2 = L$1(typeof (a2 = a2.type)._context == "object" ? a2._context : a2))) : [];
    case C$2:
      return c2 = a2.type, a2 = a2.props, 0 >= (c2._payload || c2)._status ? (b2.push({
        kind: "frame.lazy",
        contextMap: f$3({}, G$1),
        contextStore: new Map(F$1),
        errorFrame: M$2,
        thenable: Da$1(c2),
        props: a2,
        type: c2
      }), a2 = null) : a2 = Ea$1(c2, a2), D$2(a2);
    case B$1:
      return D$2(a2 = react.exports.createElement(a2.type.type, a2.props));
    case z$2:
      return b2 = (c2 = a2.type).render, a2 = E$2(a2.props, c2.defaultProps), D$2(a2 = react.exports.createElement(b2, a2));
    case n$2:
      if (typeof a2.type == "string") {
        return D$2(a2.props.children);
      }
      var e2 = a2.props;
      if ((c2 = a2.type).prototype && c2.prototype.isReactComponent) {
        O$2 = null;
        var g2 = function Ja2() {
          var a3 = [];
          return {
            _thrown: 0,
            queue: a3,
            isMounted: Ha$1,
            enqueueForceUpdate: Ia$1,
            enqueueReplaceState: function(b3, d3) {
              b3._isMounted && (a3.length = 0, a3.push(d3));
            },
            enqueueSetState: function(b3, d3) {
              b3._isMounted && a3.push(d3);
            }
          };
        }(), p2 = E$2(e2, c2.defaultProps), m2 = ra$1(c2);
        (e2 = new c2(p2, m2, g2)).props = p2;
        e2.context = m2;
        e2.updater = g2;
        e2._isMounted = true;
        e2.state === void 0 && (e2.state = null);
        if (typeof e2.componentDidCatch == "function" || typeof c2.getDerivedStateFromError == "function") {
          g2 = Y$2(c2, e2, null), M$2 = (g2.errorFrame = g2) || null;
        }
        typeof c2.getDerivedStateFromProps == "function" ? (g2 = (g2 = c2.getDerivedStateFromProps)(e2.props, e2.state)) != null && (e2.state = f$3({}, e2.state, g2)) : typeof e2.componentWillMount == "function" ? e2.componentWillMount() : typeof e2.UNSAFE_componentWillMount == "function" && e2.UNSAFE_componentWillMount();
        (a2 = d2(a2, e2)) ? (b2.push(Y$2(c2, e2, a2)), a2 = null) : a2 = Ka$1(c2, e2, b2);
      } else {
        Q$1 = null, O$2 = {}, (a2 = d2(a2)) ? (b2.push(Fa$1(c2, e2, a2)), a2 = null) : a2 = Ga$1(c2, e2, b2);
      }
      return D$2(a2);
    default:
      return [];
  }
}
function Na$1(a2, b2, d2, c2, e2, g2) {
  var p2 = Z$1.current, m2 = Date.now();
  try {
    for (Z$1.current = Ca$1; 0 < a2.length; ) {
      var w2 = a2[a2.length - 1].shift();
      if (w2 !== void 0) {
        var y2 = Ma$1(w2, e2, g2);
        a2.push(y2);
        b2.push(oa$1());
        d2.push(pa$1());
        c2.push(M$2);
      } else {
        a2.pop();
        var za2 = b2.pop();
        za2 !== void 0 && f$3(G$1, za2);
        var X2 = d2.pop();
        X2 !== void 0 && F$1.set(X2[0], X2[1]);
        M$2 = c2.pop() || null;
      }
      if (La$1 && 5 < Date.now() - m2) {
        return true;
      }
    }
    return false;
  } catch (Aa2) {
    if (!(a2 = M$2)) {
      throw Aa2;
    }
    a2.error = Aa2;
    e2.unshift(a2);
    return false;
  } finally {
    Z$1.current = p2;
  }
}
function Oa$1(a2, b2, d2, c2) {
  return {
    contextMap: f$3({}, G$1),
    contextStore: new Map(F$1),
    errorFrame: M$2,
    thenable: null,
    kind: "frame.yield",
    traversalChildren: a2,
    traversalMap: b2,
    traversalStore: d2,
    traversalErrorFrame: c2
  };
}
function Pa$1(a2, b2, d2) {
  a2 = [a2];
  var c2 = [oa$1()], e2 = [pa$1()], g2 = [M$2];
  Na$1(a2, c2, e2, g2, b2, d2) && b2.unshift(Oa$1(a2, c2, e2, g2));
}
function Qa$1(a2, b2, d2) {
  if (a2.kind === "frame.yield") {
    O$2 = null, J$1(a2.contextMap), K$2(a2.contextStore), M$2 = a2.errorFrame || null, Na$1(a2.traversalChildren, a2.traversalMap, a2.traversalStore, a2.traversalErrorFrame, b2, d2) && b2.unshift(Oa$1(a2.traversalChildren, a2.traversalMap, a2.traversalStore, a2.traversalErrorFrame));
  } else {
    var c2 = Z$1.current, e2 = null;
    Z$1.current = Ca$1;
    try {
      if (a2.kind === "frame.class") {
        a: {
          O$2 = null;
          J$1(a2.contextMap);
          K$2(a2.contextStore);
          M$2 = a2.errorFrame || null;
          if (a2.error) {
            if (25 <= ++a2.instance.updater._thrown) {
              e2 = null;
              break a;
            }
            a2.instance._isMounted = true;
            typeof a2.instance.componentDidCatch == "function" && a2.instance.componentDidCatch(a2.error);
            typeof a2.type.getDerivedStateFromError == "function" && a2.instance.updater.enqueueSetState(a2.instance, a2.type.getDerivedStateFromError(a2.error));
          }
          e2 = Ka$1(a2.type, a2.instance, b2);
        }
      } else {
        a2.kind === "frame.hooks" ? (Q$1 = a2.hook, O$2 = a2.id, J$1(a2.contextMap), K$2(a2.contextStore), M$2 = a2.errorFrame || null, e2 = Ga$1(a2.type, a2.props, b2)) : a2.kind === "frame.lazy" && (O$2 = null, J$1(a2.contextMap), K$2(a2.contextStore), M$2 = a2.errorFrame || null, e2 = Ea$1(a2.type, a2.props));
      }
    } catch (g2) {
      if (!(a2 = M$2)) {
        throw g2;
      }
      a2.error = g2;
      b2.unshift(a2);
      e2 = null;
    } finally {
      Z$1.current = c2;
    }
    Pa$1(D$2(e2), b2, d2);
  }
}
function Ra$1(a2) {
  setImmediate(a2);
}
function Sa$1(a2, b2, d2) {
  var c2 = a2.shift();
  if (!c2) {
    return Promise.resolve();
  }
  La$1 && c2.kind === "frame.yield" && (c2.thenable = new Promise(Ra$1));
  return Promise.resolve(c2.thenable).then(function() {
    N$2.current = d2;
    Qa$1(c2, a2, b2);
    return Sa$1(a2, b2, d2);
  }, function(d3) {
    if (!c2.errorFrame) {
      throw d3;
    }
    c2.errorFrame.error = d3;
    Qa$1(c2.errorFrame, a2, b2);
  });
}
function Ta$1() {
}
function ssrPrepass(a2, b2) {
  b2 || (b2 = Ta$1);
  var d2 = [], c2 = N$2.current = {
    uniqueID: 0
  };
  J$1({});
  K$2(new Map());
  M$2 = null;
  try {
    Pa$1(D$2(a2), d2, b2);
  } catch (e2) {
    return Promise.reject(e2);
  }
  return Sa$1(d2, b2, c2);
}
function _setPrototypeOf$1(o, p2) {
  _setPrototypeOf$1 = Object.setPrototypeOf || function _setPrototypeOf2(o2, p3) {
    o2.__proto__ = p3;
    return o2;
  };
  return _setPrototypeOf$1(o, p2);
}
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf$1(subClass, superClass);
}
var propTypes = { exports: {} };
var ReactPropTypesSecret$1 = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
var ReactPropTypesSecret_1 = ReactPropTypesSecret$1;
var ReactPropTypesSecret = ReactPropTypesSecret_1;
function emptyFunction() {
}
function emptyFunctionWithReset() {
}
emptyFunctionWithReset.resetWarningCache = emptyFunction;
var factoryWithThrowingShims = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      return;
    }
    var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
    err.name = "Invariant Violation";
    throw err;
  }
  shim.isRequired = shim;
  function getShim() {
    return shim;
  }
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,
    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,
    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };
  ReactPropTypes.PropTypes = ReactPropTypes;
  return ReactPropTypes;
};
{
  propTypes.exports = factoryWithThrowingShims();
}
var r$1 = propTypes.exports;
function _extends$1() {
  _extends$1 = Object.assign || function(target2) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target2[key] = source[key];
        }
      }
    }
    return target2;
  };
  return _extends$1.apply(this, arguments);
}
function isAbsolute(pathname) {
  return pathname.charAt(0) === "/";
}
function spliceOne(list, index2) {
  for (var i = index2, k2 = i + 1, n2 = list.length; k2 < n2; i += 1, k2 += 1) {
    list[i] = list[k2];
  }
  list.pop();
}
function resolvePathname(to, from) {
  if (from === void 0)
    from = "";
  var toParts = to && to.split("/") || [];
  var fromParts = from && from.split("/") || [];
  var isToAbs = to && isAbsolute(to);
  var isFromAbs = from && isAbsolute(from);
  var mustEndAbs = isToAbs || isFromAbs;
  if (to && isAbsolute(to)) {
    fromParts = toParts;
  } else if (toParts.length) {
    fromParts.pop();
    fromParts = fromParts.concat(toParts);
  }
  if (!fromParts.length)
    return "/";
  var hasTrailingSlash;
  if (fromParts.length) {
    var last = fromParts[fromParts.length - 1];
    hasTrailingSlash = last === "." || last === ".." || last === "";
  } else {
    hasTrailingSlash = false;
  }
  var up = 0;
  for (var i = fromParts.length; i >= 0; i--) {
    var part2 = fromParts[i];
    if (part2 === ".") {
      spliceOne(fromParts, i);
    } else if (part2 === "..") {
      spliceOne(fromParts, i);
      up++;
    } else if (up) {
      spliceOne(fromParts, i);
      up--;
    }
  }
  if (!mustEndAbs)
    for (; up--; up)
      fromParts.unshift("..");
  if (mustEndAbs && fromParts[0] !== "" && (!fromParts[0] || !isAbsolute(fromParts[0])))
    fromParts.unshift("");
  var result = fromParts.join("/");
  if (hasTrailingSlash && result.substr(-1) !== "/")
    result += "/";
  return result;
}
var isProduction = true;
var prefix = "Invariant failed";
function invariant$2(condition, message) {
  if (condition) {
    return;
  }
  if (isProduction) {
    throw new Error(prefix);
  }
  var provided = typeof message === "function" ? message() : message;
  var value = provided ? prefix + ": " + provided : prefix;
  throw new Error(value);
}
function addLeadingSlash$1(path) {
  return path.charAt(0) === "/" ? path : "/" + path;
}
function stripLeadingSlash(path) {
  return path.charAt(0) === "/" ? path.substr(1) : path;
}
function hasBasename(path, prefix2) {
  return path.toLowerCase().indexOf(prefix2.toLowerCase()) === 0 && "/?#".indexOf(path.charAt(prefix2.length)) !== -1;
}
function stripBasename$1(path, prefix2) {
  return hasBasename(path, prefix2) ? path.substr(prefix2.length) : path;
}
function stripTrailingSlash(path) {
  return path.charAt(path.length - 1) === "/" ? path.slice(0, -1) : path;
}
function parsePath(path) {
  var pathname = path || "/";
  var search = "";
  var hash = "";
  var hashIndex = pathname.indexOf("#");
  if (hashIndex !== -1) {
    hash = pathname.substr(hashIndex);
    pathname = pathname.substr(0, hashIndex);
  }
  var searchIndex = pathname.indexOf("?");
  if (searchIndex !== -1) {
    search = pathname.substr(searchIndex);
    pathname = pathname.substr(0, searchIndex);
  }
  return {
    pathname,
    search: search === "?" ? "" : search,
    hash: hash === "#" ? "" : hash
  };
}
function createPath(location) {
  var pathname = location.pathname, search = location.search, hash = location.hash;
  var path = pathname || "/";
  if (search && search !== "?")
    path += search.charAt(0) === "?" ? search : "?" + search;
  if (hash && hash !== "#")
    path += hash.charAt(0) === "#" ? hash : "#" + hash;
  return path;
}
function createLocation(path, state2, key, currentLocation) {
  var location;
  if (typeof path === "string") {
    location = parsePath(path);
    location.state = state2;
  } else {
    location = _extends$1({}, path);
    if (location.pathname === void 0)
      location.pathname = "";
    if (location.search) {
      if (location.search.charAt(0) !== "?")
        location.search = "?" + location.search;
    } else {
      location.search = "";
    }
    if (location.hash) {
      if (location.hash.charAt(0) !== "#")
        location.hash = "#" + location.hash;
    } else {
      location.hash = "";
    }
    if (state2 !== void 0 && location.state === void 0)
      location.state = state2;
  }
  try {
    location.pathname = decodeURI(location.pathname);
  } catch (e2) {
    if (e2 instanceof URIError) {
      throw new URIError('Pathname "' + location.pathname + '" could not be decoded. This is likely caused by an invalid percent-encoding.');
    } else {
      throw e2;
    }
  }
  if (key)
    location.key = key;
  if (currentLocation) {
    if (!location.pathname) {
      location.pathname = currentLocation.pathname;
    } else if (location.pathname.charAt(0) !== "/") {
      location.pathname = resolvePathname(location.pathname, currentLocation.pathname);
    }
  } else {
    if (!location.pathname) {
      location.pathname = "/";
    }
  }
  return location;
}
function createTransitionManager() {
  var prompt = null;
  function setPrompt(nextPrompt) {
    prompt = nextPrompt;
    return function() {
      if (prompt === nextPrompt)
        prompt = null;
    };
  }
  function confirmTransitionTo(location, action, getUserConfirmation, callback) {
    if (prompt != null) {
      var result = typeof prompt === "function" ? prompt(location, action) : prompt;
      if (typeof result === "string") {
        if (typeof getUserConfirmation === "function") {
          getUserConfirmation(result, callback);
        } else {
          callback(true);
        }
      } else {
        callback(result !== false);
      }
    } else {
      callback(true);
    }
  }
  var listeners = [];
  function appendListener(fn) {
    var isActive = true;
    function listener() {
      if (isActive)
        fn.apply(void 0, arguments);
    }
    listeners.push(listener);
    return function() {
      isActive = false;
      listeners = listeners.filter(function(item) {
        return item !== listener;
      });
    };
  }
  function notifyListeners() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    listeners.forEach(function(listener) {
      return listener.apply(void 0, args);
    });
  }
  return {
    setPrompt,
    confirmTransitionTo,
    appendListener,
    notifyListeners
  };
}
var canUseDOM = !!(typeof window !== "undefined" && window.document && window.document.createElement);
function getConfirmation(message, callback) {
  callback(window.confirm(message));
}
function supportsHistory() {
  var ua2 = window.navigator.userAgent;
  if ((ua2.indexOf("Android 2.") !== -1 || ua2.indexOf("Android 4.0") !== -1) && ua2.indexOf("Mobile Safari") !== -1 && ua2.indexOf("Chrome") === -1 && ua2.indexOf("Windows Phone") === -1)
    return false;
  return window.history && "pushState" in window.history;
}
function supportsPopStateOnHashChange() {
  return window.navigator.userAgent.indexOf("Trident") === -1;
}
function supportsGoWithoutReloadUsingHash() {
  return window.navigator.userAgent.indexOf("Firefox") === -1;
}
function isExtraneousPopstateEvent(event) {
  return event.state === void 0 && navigator.userAgent.indexOf("CriOS") === -1;
}
var PopStateEvent = "popstate";
var HashChangeEvent = "hashchange";
function getHistoryState() {
  try {
    return window.history.state || {};
  } catch (e2) {
    return {};
  }
}
function createBrowserHistory(props) {
  if (props === void 0) {
    props = {};
  }
  !canUseDOM ? invariant$2(false) : void 0;
  var globalHistory = window.history;
  var canUseHistory = supportsHistory();
  var needsHashChangeListener = !supportsPopStateOnHashChange();
  var _props = props, _props$forceRefresh = _props.forceRefresh, forceRefresh = _props$forceRefresh === void 0 ? false : _props$forceRefresh, _props$getUserConfirm = _props.getUserConfirmation, getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm, _props$keyLength = _props.keyLength, keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;
  var basename = props.basename ? stripTrailingSlash(addLeadingSlash$1(props.basename)) : "";
  function getDOMLocation(historyState) {
    var _ref = historyState || {}, key = _ref.key, state2 = _ref.state;
    var _window$location = window.location, pathname = _window$location.pathname, search = _window$location.search, hash = _window$location.hash;
    var path = pathname + search + hash;
    if (basename)
      path = stripBasename$1(path, basename);
    return createLocation(path, state2, key);
  }
  function createKey() {
    return Math.random().toString(36).substr(2, keyLength);
  }
  var transitionManager = createTransitionManager();
  function setState(nextState) {
    _extends$1(history, nextState);
    history.length = globalHistory.length;
    transitionManager.notifyListeners(history.location, history.action);
  }
  function handlePopState(event) {
    if (isExtraneousPopstateEvent(event))
      return;
    handlePop(getDOMLocation(event.state));
  }
  function handleHashChange() {
    handlePop(getDOMLocation(getHistoryState()));
  }
  var forceNextPop = false;
  function handlePop(location) {
    if (forceNextPop) {
      forceNextPop = false;
      setState();
    } else {
      var action = "POP";
      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function(ok2) {
        if (ok2) {
          setState({
            action,
            location
          });
        } else {
          revertPop(location);
        }
      });
    }
  }
  function revertPop(fromLocation) {
    var toLocation = history.location;
    var toIndex = allKeys.indexOf(toLocation.key);
    if (toIndex === -1)
      toIndex = 0;
    var fromIndex = allKeys.indexOf(fromLocation.key);
    if (fromIndex === -1)
      fromIndex = 0;
    var delta2 = toIndex - fromIndex;
    if (delta2) {
      forceNextPop = true;
      go(delta2);
    }
  }
  var initialLocation = getDOMLocation(getHistoryState());
  var allKeys = [initialLocation.key];
  function createHref(location) {
    return basename + createPath(location);
  }
  function push(path, state2) {
    var action = "PUSH";
    var location = createLocation(path, state2, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function(ok2) {
      if (!ok2)
        return;
      var href = createHref(location);
      var key = location.key, state3 = location.state;
      if (canUseHistory) {
        globalHistory.pushState({
          key,
          state: state3
        }, null, href);
        if (forceRefresh) {
          window.location.href = href;
        } else {
          var prevIndex = allKeys.indexOf(history.location.key);
          var nextKeys = allKeys.slice(0, prevIndex + 1);
          nextKeys.push(location.key);
          allKeys = nextKeys;
          setState({
            action,
            location
          });
        }
      } else {
        window.location.href = href;
      }
    });
  }
  function replace(path, state2) {
    var action = "REPLACE";
    var location = createLocation(path, state2, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function(ok2) {
      if (!ok2)
        return;
      var href = createHref(location);
      var key = location.key, state3 = location.state;
      if (canUseHistory) {
        globalHistory.replaceState({
          key,
          state: state3
        }, null, href);
        if (forceRefresh) {
          window.location.replace(href);
        } else {
          var prevIndex = allKeys.indexOf(history.location.key);
          if (prevIndex !== -1)
            allKeys[prevIndex] = location.key;
          setState({
            action,
            location
          });
        }
      } else {
        window.location.replace(href);
      }
    });
  }
  function go(n2) {
    globalHistory.go(n2);
  }
  function goBack() {
    go(-1);
  }
  function goForward() {
    go(1);
  }
  var listenerCount = 0;
  function checkDOMListeners(delta2) {
    listenerCount += delta2;
    if (listenerCount === 1 && delta2 === 1) {
      window.addEventListener(PopStateEvent, handlePopState);
      if (needsHashChangeListener)
        window.addEventListener(HashChangeEvent, handleHashChange);
    } else if (listenerCount === 0) {
      window.removeEventListener(PopStateEvent, handlePopState);
      if (needsHashChangeListener)
        window.removeEventListener(HashChangeEvent, handleHashChange);
    }
  }
  var isBlocked = false;
  function block2(prompt) {
    if (prompt === void 0) {
      prompt = false;
    }
    var unblock = transitionManager.setPrompt(prompt);
    if (!isBlocked) {
      checkDOMListeners(1);
      isBlocked = true;
    }
    return function() {
      if (isBlocked) {
        isBlocked = false;
        checkDOMListeners(-1);
      }
      return unblock();
    };
  }
  function listen(listener) {
    var unlisten = transitionManager.appendListener(listener);
    checkDOMListeners(1);
    return function() {
      checkDOMListeners(-1);
      unlisten();
    };
  }
  var history = {
    length: globalHistory.length,
    action: "POP",
    location: initialLocation,
    createHref,
    push,
    replace,
    go,
    goBack,
    goForward,
    block: block2,
    listen
  };
  return history;
}
var HashChangeEvent$1 = "hashchange";
var HashPathCoders = {
  hashbang: {
    encodePath: function encodePath(path) {
      return path.charAt(0) === "!" ? path : "!/" + stripLeadingSlash(path);
    },
    decodePath: function decodePath(path) {
      return path.charAt(0) === "!" ? path.substr(1) : path;
    }
  },
  noslash: {
    encodePath: stripLeadingSlash,
    decodePath: addLeadingSlash$1
  },
  slash: {
    encodePath: addLeadingSlash$1,
    decodePath: addLeadingSlash$1
  }
};
function stripHash(url) {
  var hashIndex = url.indexOf("#");
  return hashIndex === -1 ? url : url.slice(0, hashIndex);
}
function getHashPath() {
  var href = window.location.href;
  var hashIndex = href.indexOf("#");
  return hashIndex === -1 ? "" : href.substring(hashIndex + 1);
}
function pushHashPath(path) {
  window.location.hash = path;
}
function replaceHashPath(path) {
  window.location.replace(stripHash(window.location.href) + "#" + path);
}
function createHashHistory(props) {
  if (props === void 0) {
    props = {};
  }
  !canUseDOM ? invariant$2(false) : void 0;
  var globalHistory = window.history;
  supportsGoWithoutReloadUsingHash();
  var _props = props, _props$getUserConfirm = _props.getUserConfirmation, getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm, _props$hashType = _props.hashType, hashType = _props$hashType === void 0 ? "slash" : _props$hashType;
  var basename = props.basename ? stripTrailingSlash(addLeadingSlash$1(props.basename)) : "";
  var _HashPathCoders$hashT = HashPathCoders[hashType], encodePath2 = _HashPathCoders$hashT.encodePath, decodePath2 = _HashPathCoders$hashT.decodePath;
  function getDOMLocation() {
    var path2 = decodePath2(getHashPath());
    if (basename)
      path2 = stripBasename$1(path2, basename);
    return createLocation(path2);
  }
  var transitionManager = createTransitionManager();
  function setState(nextState) {
    _extends$1(history, nextState);
    history.length = globalHistory.length;
    transitionManager.notifyListeners(history.location, history.action);
  }
  var forceNextPop = false;
  var ignorePath = null;
  function locationsAreEqual$$1(a2, b2) {
    return a2.pathname === b2.pathname && a2.search === b2.search && a2.hash === b2.hash;
  }
  function handleHashChange() {
    var path2 = getHashPath();
    var encodedPath2 = encodePath2(path2);
    if (path2 !== encodedPath2) {
      replaceHashPath(encodedPath2);
    } else {
      var location = getDOMLocation();
      var prevLocation = history.location;
      if (!forceNextPop && locationsAreEqual$$1(prevLocation, location))
        return;
      if (ignorePath === createPath(location))
        return;
      ignorePath = null;
      handlePop(location);
    }
  }
  function handlePop(location) {
    if (forceNextPop) {
      forceNextPop = false;
      setState();
    } else {
      var action = "POP";
      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function(ok2) {
        if (ok2) {
          setState({
            action,
            location
          });
        } else {
          revertPop(location);
        }
      });
    }
  }
  function revertPop(fromLocation) {
    var toLocation = history.location;
    var toIndex = allPaths.lastIndexOf(createPath(toLocation));
    if (toIndex === -1)
      toIndex = 0;
    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));
    if (fromIndex === -1)
      fromIndex = 0;
    var delta2 = toIndex - fromIndex;
    if (delta2) {
      forceNextPop = true;
      go(delta2);
    }
  }
  var path = getHashPath();
  var encodedPath = encodePath2(path);
  if (path !== encodedPath)
    replaceHashPath(encodedPath);
  var initialLocation = getDOMLocation();
  var allPaths = [createPath(initialLocation)];
  function createHref(location) {
    var baseTag = document.querySelector("base");
    var href = "";
    if (baseTag && baseTag.getAttribute("href")) {
      href = stripHash(window.location.href);
    }
    return href + "#" + encodePath2(basename + createPath(location));
  }
  function push(path2, state2) {
    var action = "PUSH";
    var location = createLocation(path2, void 0, void 0, history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function(ok2) {
      if (!ok2)
        return;
      var path3 = createPath(location);
      var encodedPath2 = encodePath2(basename + path3);
      var hashChanged = getHashPath() !== encodedPath2;
      if (hashChanged) {
        ignorePath = path3;
        pushHashPath(encodedPath2);
        var prevIndex = allPaths.lastIndexOf(createPath(history.location));
        var nextPaths = allPaths.slice(0, prevIndex + 1);
        nextPaths.push(path3);
        allPaths = nextPaths;
        setState({
          action,
          location
        });
      } else {
        setState();
      }
    });
  }
  function replace(path2, state2) {
    var action = "REPLACE";
    var location = createLocation(path2, void 0, void 0, history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function(ok2) {
      if (!ok2)
        return;
      var path3 = createPath(location);
      var encodedPath2 = encodePath2(basename + path3);
      var hashChanged = getHashPath() !== encodedPath2;
      if (hashChanged) {
        ignorePath = path3;
        replaceHashPath(encodedPath2);
      }
      var prevIndex = allPaths.indexOf(createPath(history.location));
      if (prevIndex !== -1)
        allPaths[prevIndex] = path3;
      setState({
        action,
        location
      });
    });
  }
  function go(n2) {
    globalHistory.go(n2);
  }
  function goBack() {
    go(-1);
  }
  function goForward() {
    go(1);
  }
  var listenerCount = 0;
  function checkDOMListeners(delta2) {
    listenerCount += delta2;
    if (listenerCount === 1 && delta2 === 1) {
      window.addEventListener(HashChangeEvent$1, handleHashChange);
    } else if (listenerCount === 0) {
      window.removeEventListener(HashChangeEvent$1, handleHashChange);
    }
  }
  var isBlocked = false;
  function block2(prompt) {
    if (prompt === void 0) {
      prompt = false;
    }
    var unblock = transitionManager.setPrompt(prompt);
    if (!isBlocked) {
      checkDOMListeners(1);
      isBlocked = true;
    }
    return function() {
      if (isBlocked) {
        isBlocked = false;
        checkDOMListeners(-1);
      }
      return unblock();
    };
  }
  function listen(listener) {
    var unlisten = transitionManager.appendListener(listener);
    checkDOMListeners(1);
    return function() {
      checkDOMListeners(-1);
      unlisten();
    };
  }
  var history = {
    length: globalHistory.length,
    action: "POP",
    location: initialLocation,
    createHref,
    push,
    replace,
    go,
    goBack,
    goForward,
    block: block2,
    listen
  };
  return history;
}
function clamp(n2, lowerBound, upperBound) {
  return Math.min(Math.max(n2, lowerBound), upperBound);
}
function createMemoryHistory(props) {
  if (props === void 0) {
    props = {};
  }
  var _props = props, getUserConfirmation = _props.getUserConfirmation, _props$initialEntries = _props.initialEntries, initialEntries = _props$initialEntries === void 0 ? ["/"] : _props$initialEntries, _props$initialIndex = _props.initialIndex, initialIndex = _props$initialIndex === void 0 ? 0 : _props$initialIndex, _props$keyLength = _props.keyLength, keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;
  var transitionManager = createTransitionManager();
  function setState(nextState) {
    _extends$1(history, nextState);
    history.length = history.entries.length;
    transitionManager.notifyListeners(history.location, history.action);
  }
  function createKey() {
    return Math.random().toString(36).substr(2, keyLength);
  }
  var index2 = clamp(initialIndex, 0, initialEntries.length - 1);
  var entries = initialEntries.map(function(entry) {
    return typeof entry === "string" ? createLocation(entry, void 0, createKey()) : createLocation(entry, void 0, entry.key || createKey());
  });
  var createHref = createPath;
  function push(path, state2) {
    var action = "PUSH";
    var location = createLocation(path, state2, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function(ok2) {
      if (!ok2)
        return;
      var prevIndex = history.index;
      var nextIndex = prevIndex + 1;
      var nextEntries = history.entries.slice(0);
      if (nextEntries.length > nextIndex) {
        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);
      } else {
        nextEntries.push(location);
      }
      setState({
        action,
        location,
        index: nextIndex,
        entries: nextEntries
      });
    });
  }
  function replace(path, state2) {
    var action = "REPLACE";
    var location = createLocation(path, state2, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function(ok2) {
      if (!ok2)
        return;
      history.entries[history.index] = location;
      setState({
        action,
        location
      });
    });
  }
  function go(n2) {
    var nextIndex = clamp(history.index + n2, 0, history.entries.length - 1);
    var action = "POP";
    var location = history.entries[nextIndex];
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function(ok2) {
      if (ok2) {
        setState({
          action,
          location,
          index: nextIndex
        });
      } else {
        setState();
      }
    });
  }
  function goBack() {
    go(-1);
  }
  function goForward() {
    go(1);
  }
  function canGo(n2) {
    var nextIndex = history.index + n2;
    return nextIndex >= 0 && nextIndex < history.entries.length;
  }
  function block2(prompt) {
    if (prompt === void 0) {
      prompt = false;
    }
    return transitionManager.setPrompt(prompt);
  }
  function listen(listener) {
    return transitionManager.appendListener(listener);
  }
  var history = {
    length: entries.length,
    action: "POP",
    location: entries[index2],
    index: index2,
    entries,
    createHref,
    push,
    replace,
    go,
    goBack,
    goForward,
    canGo,
    block: block2,
    listen
  };
  return history;
}
var MAX_SIGNED_31_BIT_INT = 1073741823;
var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : {};
function getUniqueId() {
  var key = "__global_unique_id__";
  return commonjsGlobal[key] = (commonjsGlobal[key] || 0) + 1;
}
function objectIs(x2, y2) {
  if (x2 === y2) {
    return x2 !== 0 || 1 / x2 === 1 / y2;
  } else {
    return x2 !== x2 && y2 !== y2;
  }
}
function createEventEmitter(value) {
  var handlers = [];
  return {
    on: function on(handler) {
      handlers.push(handler);
    },
    off: function off(handler) {
      handlers = handlers.filter(function(h2) {
        return h2 !== handler;
      });
    },
    get: function get() {
      return value;
    },
    set: function set(newValue, changedBits) {
      value = newValue;
      handlers.forEach(function(handler) {
        return handler(value, changedBits);
      });
    }
  };
}
function onlyChild(children) {
  return Array.isArray(children) ? children[0] : children;
}
function createReactContext(defaultValue, calculateChangedBits) {
  var _Provider$childContex, _Consumer$contextType;
  var contextProp = "__create-react-context-" + getUniqueId() + "__";
  var Provider2 = /* @__PURE__ */ function(_Component) {
    _inheritsLoose(Provider3, _Component);
    function Provider3() {
      var _this;
      _this = _Component.apply(this, arguments) || this;
      _this.emitter = createEventEmitter(_this.props.value);
      return _this;
    }
    var _proto = Provider3.prototype;
    _proto.getChildContext = function getChildContext() {
      var _ref;
      return _ref = {}, _ref[contextProp] = this.emitter, _ref;
    };
    _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
      if (this.props.value !== nextProps.value) {
        var oldValue = this.props.value;
        var newValue = nextProps.value;
        var changedBits;
        if (objectIs(oldValue, newValue)) {
          changedBits = 0;
        } else {
          changedBits = typeof calculateChangedBits === "function" ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;
          changedBits |= 0;
          if (changedBits !== 0) {
            this.emitter.set(nextProps.value, changedBits);
          }
        }
      }
    };
    _proto.render = function render2() {
      return this.props.children;
    };
    return Provider3;
  }(react.exports.Component);
  Provider2.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = r$1.object.isRequired, _Provider$childContex);
  var Consumer = /* @__PURE__ */ function(_Component2) {
    _inheritsLoose(Consumer2, _Component2);
    function Consumer2() {
      var _this2;
      _this2 = _Component2.apply(this, arguments) || this;
      _this2.state = {
        value: _this2.getValue()
      };
      _this2.onUpdate = function(newValue, changedBits) {
        var observedBits = _this2.observedBits | 0;
        if ((observedBits & changedBits) !== 0) {
          _this2.setState({
            value: _this2.getValue()
          });
        }
      };
      return _this2;
    }
    var _proto2 = Consumer2.prototype;
    _proto2.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
      var observedBits = nextProps.observedBits;
      this.observedBits = observedBits === void 0 || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;
    };
    _proto2.componentDidMount = function componentDidMount() {
      if (this.context[contextProp]) {
        this.context[contextProp].on(this.onUpdate);
      }
      var observedBits = this.props.observedBits;
      this.observedBits = observedBits === void 0 || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;
    };
    _proto2.componentWillUnmount = function componentWillUnmount() {
      if (this.context[contextProp]) {
        this.context[contextProp].off(this.onUpdate);
      }
    };
    _proto2.getValue = function getValue() {
      if (this.context[contextProp]) {
        return this.context[contextProp].get();
      } else {
        return defaultValue;
      }
    };
    _proto2.render = function render2() {
      return onlyChild(this.props.children)(this.state.value);
    };
    return Consumer2;
  }(react.exports.Component);
  Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = r$1.object, _Consumer$contextType);
  return {
    Provider: Provider2,
    Consumer
  };
}
var index = React$2.createContext || createReactContext;
var pathToRegexp$2 = { exports: {} };
var isarray$1 = Array.isArray || function(arr) {
  return Object.prototype.toString.call(arr) == "[object Array]";
};
var isarray = isarray$1;
pathToRegexp$2.exports = pathToRegexp;
pathToRegexp$2.exports.parse = parse$2;
pathToRegexp$2.exports.compile = compile;
pathToRegexp$2.exports.tokensToFunction = tokensToFunction;
pathToRegexp$2.exports.tokensToRegExp = tokensToRegExp;
var PATH_REGEXP = new RegExp([
  "(\\\\.)",
  "([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"
].join("|"), "g");
function parse$2(str, options) {
  var tokens = [];
  var key = 0;
  var index2 = 0;
  var path = "";
  var defaultDelimiter = options && options.delimiter || "/";
  var res;
  while ((res = PATH_REGEXP.exec(str)) != null) {
    var m2 = res[0];
    var escaped = res[1];
    var offset = res.index;
    path += str.slice(index2, offset);
    index2 = offset + m2.length;
    if (escaped) {
      path += escaped[1];
      continue;
    }
    var next = str[index2];
    var prefix2 = res[2];
    var name = res[3];
    var capture = res[4];
    var group = res[5];
    var modifier = res[6];
    var asterisk = res[7];
    if (path) {
      tokens.push(path);
      path = "";
    }
    var partial = prefix2 != null && next != null && next !== prefix2;
    var repeat = modifier === "+" || modifier === "*";
    var optional = modifier === "?" || modifier === "*";
    var delimiter = res[2] || defaultDelimiter;
    var pattern = capture || group;
    tokens.push({
      name: name || key++,
      prefix: prefix2 || "",
      delimiter,
      optional,
      repeat,
      partial,
      asterisk: !!asterisk,
      pattern: pattern ? escapeGroup(pattern) : asterisk ? ".*" : "[^" + escapeString(delimiter) + "]+?"
    });
  }
  if (index2 < str.length) {
    path += str.substr(index2);
  }
  if (path) {
    tokens.push(path);
  }
  return tokens;
}
function compile(str, options) {
  return tokensToFunction(parse$2(str, options), options);
}
function encodeURIComponentPretty(str) {
  return encodeURI(str).replace(/[\/?#]/g, function(c2) {
    return "%" + c2.charCodeAt(0).toString(16).toUpperCase();
  });
}
function encodeAsterisk(str) {
  return encodeURI(str).replace(/[?#]/g, function(c2) {
    return "%" + c2.charCodeAt(0).toString(16).toUpperCase();
  });
}
function tokensToFunction(tokens, options) {
  var matches = new Array(tokens.length);
  for (var i = 0; i < tokens.length; i++) {
    if (typeof tokens[i] === "object") {
      matches[i] = new RegExp("^(?:" + tokens[i].pattern + ")$", flags(options));
    }
  }
  return function(obj, opts) {
    var path = "";
    var data = obj || {};
    var options2 = opts || {};
    var encode = options2.pretty ? encodeURIComponentPretty : encodeURIComponent;
    for (var i2 = 0; i2 < tokens.length; i2++) {
      var token = tokens[i2];
      if (typeof token === "string") {
        path += token;
        continue;
      }
      var value = data[token.name];
      var segment;
      if (value == null) {
        if (token.optional) {
          if (token.partial) {
            path += token.prefix;
          }
          continue;
        } else {
          throw new TypeError('Expected "' + token.name + '" to be defined');
        }
      }
      if (isarray(value)) {
        if (!token.repeat) {
          throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + "`");
        }
        if (value.length === 0) {
          if (token.optional) {
            continue;
          } else {
            throw new TypeError('Expected "' + token.name + '" to not be empty');
          }
        }
        for (var j2 = 0; j2 < value.length; j2++) {
          segment = encode(value[j2]);
          if (!matches[i2].test(segment)) {
            throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + "`");
          }
          path += (j2 === 0 ? token.prefix : token.delimiter) + segment;
        }
        continue;
      }
      segment = token.asterisk ? encodeAsterisk(value) : encode(value);
      if (!matches[i2].test(segment)) {
        throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"');
      }
      path += token.prefix + segment;
    }
    return path;
  };
}
function escapeString(str) {
  return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, "\\$1");
}
function escapeGroup(group) {
  return group.replace(/([=!:$\/()])/g, "\\$1");
}
function attachKeys(re2, keys) {
  re2.keys = keys;
  return re2;
}
function flags(options) {
  return options && options.sensitive ? "" : "i";
}
function regexpToRegexp(path, keys) {
  var groups = path.source.match(/\((?!\?)/g);
  if (groups) {
    for (var i = 0; i < groups.length; i++) {
      keys.push({
        name: i,
        prefix: null,
        delimiter: null,
        optional: false,
        repeat: false,
        partial: false,
        asterisk: false,
        pattern: null
      });
    }
  }
  return attachKeys(path, keys);
}
function arrayToRegexp(path, keys, options) {
  var parts = [];
  for (var i = 0; i < path.length; i++) {
    parts.push(pathToRegexp(path[i], keys, options).source);
  }
  var regexp = new RegExp("(?:" + parts.join("|") + ")", flags(options));
  return attachKeys(regexp, keys);
}
function stringToRegexp(path, keys, options) {
  return tokensToRegExp(parse$2(path, options), keys, options);
}
function tokensToRegExp(tokens, keys, options) {
  if (!isarray(keys)) {
    options = keys || options;
    keys = [];
  }
  options = options || {};
  var strict = options.strict;
  var end = options.end !== false;
  var route = "";
  for (var i = 0; i < tokens.length; i++) {
    var token = tokens[i];
    if (typeof token === "string") {
      route += escapeString(token);
    } else {
      var prefix2 = escapeString(token.prefix);
      var capture = "(?:" + token.pattern + ")";
      keys.push(token);
      if (token.repeat) {
        capture += "(?:" + prefix2 + capture + ")*";
      }
      if (token.optional) {
        if (!token.partial) {
          capture = "(?:" + prefix2 + "(" + capture + "))?";
        } else {
          capture = prefix2 + "(" + capture + ")?";
        }
      } else {
        capture = prefix2 + "(" + capture + ")";
      }
      route += capture;
    }
  }
  var delimiter = escapeString(options.delimiter || "/");
  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;
  if (!strict) {
    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + "(?:" + delimiter + "(?=$))?";
  }
  if (end) {
    route += "$";
  } else {
    route += strict && endsWithDelimiter ? "" : "(?=" + delimiter + "|$)";
  }
  return attachKeys(new RegExp("^" + route, flags(options)), keys);
}
function pathToRegexp(path, keys, options) {
  if (!isarray(keys)) {
    options = keys || options;
    keys = [];
  }
  options = options || {};
  if (path instanceof RegExp) {
    return regexpToRegexp(path, keys);
  }
  if (isarray(path)) {
    return arrayToRegexp(path, keys, options);
  }
  return stringToRegexp(path, keys, options);
}
var pathToRegexp$1 = pathToRegexp$2.exports;
var reactIs$1 = { exports: {} };
var reactIs_production_min = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var b$1 = typeof Symbol === "function" && Symbol.for, c$1 = b$1 ? Symbol.for("react.element") : 60103, d$1 = b$1 ? Symbol.for("react.portal") : 60106, e = b$1 ? Symbol.for("react.fragment") : 60107, f$2 = b$1 ? Symbol.for("react.strict_mode") : 60108, g$2 = b$1 ? Symbol.for("react.profiler") : 60114, h$2 = b$1 ? Symbol.for("react.provider") : 60109, k$1 = b$1 ? Symbol.for("react.context") : 60110, l$1 = b$1 ? Symbol.for("react.async_mode") : 60111, m$2 = b$1 ? Symbol.for("react.concurrent_mode") : 60111, n$1 = b$1 ? Symbol.for("react.forward_ref") : 60112, p$3 = b$1 ? Symbol.for("react.suspense") : 60113, q$2 = b$1 ? Symbol.for("react.suspense_list") : 60120, r = b$1 ? Symbol.for("react.memo") : 60115, t = b$1 ? Symbol.for("react.lazy") : 60116, v$2 = b$1 ? Symbol.for("react.block") : 60121, w$1 = b$1 ? Symbol.for("react.fundamental") : 60117, x$1 = b$1 ? Symbol.for("react.responder") : 60118, y$2 = b$1 ? Symbol.for("react.scope") : 60119;
function z$1(a2) {
  if (typeof a2 === "object" && a2 !== null) {
    var u2 = a2.$$typeof;
    switch (u2) {
      case c$1:
        switch (a2 = a2.type, a2) {
          case l$1:
          case m$2:
          case e:
          case g$2:
          case f$2:
          case p$3:
            return a2;
          default:
            switch (a2 = a2 && a2.$$typeof, a2) {
              case k$1:
              case n$1:
              case t:
              case r:
              case h$2:
                return a2;
              default:
                return u2;
            }
        }
      case d$1:
        return u2;
    }
  }
}
function A$2(a2) {
  return z$1(a2) === m$2;
}
reactIs_production_min.AsyncMode = l$1;
reactIs_production_min.ConcurrentMode = m$2;
reactIs_production_min.ContextConsumer = k$1;
reactIs_production_min.ContextProvider = h$2;
reactIs_production_min.Element = c$1;
reactIs_production_min.ForwardRef = n$1;
reactIs_production_min.Fragment = e;
reactIs_production_min.Lazy = t;
reactIs_production_min.Memo = r;
reactIs_production_min.Portal = d$1;
reactIs_production_min.Profiler = g$2;
reactIs_production_min.StrictMode = f$2;
reactIs_production_min.Suspense = p$3;
reactIs_production_min.isAsyncMode = function(a2) {
  return A$2(a2) || z$1(a2) === l$1;
};
reactIs_production_min.isConcurrentMode = A$2;
reactIs_production_min.isContextConsumer = function(a2) {
  return z$1(a2) === k$1;
};
reactIs_production_min.isContextProvider = function(a2) {
  return z$1(a2) === h$2;
};
reactIs_production_min.isElement = function(a2) {
  return typeof a2 === "object" && a2 !== null && a2.$$typeof === c$1;
};
reactIs_production_min.isForwardRef = function(a2) {
  return z$1(a2) === n$1;
};
reactIs_production_min.isFragment = function(a2) {
  return z$1(a2) === e;
};
reactIs_production_min.isLazy = function(a2) {
  return z$1(a2) === t;
};
reactIs_production_min.isMemo = function(a2) {
  return z$1(a2) === r;
};
reactIs_production_min.isPortal = function(a2) {
  return z$1(a2) === d$1;
};
reactIs_production_min.isProfiler = function(a2) {
  return z$1(a2) === g$2;
};
reactIs_production_min.isStrictMode = function(a2) {
  return z$1(a2) === f$2;
};
reactIs_production_min.isSuspense = function(a2) {
  return z$1(a2) === p$3;
};
reactIs_production_min.isValidElementType = function(a2) {
  return typeof a2 === "string" || typeof a2 === "function" || a2 === e || a2 === m$2 || a2 === g$2 || a2 === f$2 || a2 === p$3 || a2 === q$2 || typeof a2 === "object" && a2 !== null && (a2.$$typeof === t || a2.$$typeof === r || a2.$$typeof === h$2 || a2.$$typeof === k$1 || a2.$$typeof === n$1 || a2.$$typeof === w$1 || a2.$$typeof === x$1 || a2.$$typeof === y$2 || a2.$$typeof === v$2);
};
reactIs_production_min.typeOf = z$1;
{
  reactIs$1.exports = reactIs_production_min;
}
function _objectWithoutPropertiesLoose$1(source, excluded) {
  if (source == null)
    return {};
  var target2 = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target2[key] = source[key];
  }
  return target2;
}
var reactIs = reactIs$1.exports;
var FORWARD_REF_STATICS = {
  "$$typeof": true,
  render: true,
  defaultProps: true,
  displayName: true,
  propTypes: true
};
var MEMO_STATICS = {
  "$$typeof": true,
  compare: true,
  defaultProps: true,
  displayName: true,
  propTypes: true,
  type: true
};
var TYPE_STATICS = {};
TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;
var createNamedContext = function createNamedContext2(name) {
  var context2 = index();
  context2.displayName = name;
  return context2;
};
var historyContext = /* @__PURE__ */ createNamedContext("Router-History");
var context = /* @__PURE__ */ createNamedContext("Router");
var Router = /* @__PURE__ */ function(_React$Component) {
  _inheritsLoose(Router2, _React$Component);
  Router2.computeRootMatch = function computeRootMatch(pathname) {
    return {
      path: "/",
      url: "/",
      params: {},
      isExact: pathname === "/"
    };
  };
  function Router2(props) {
    var _this;
    _this = _React$Component.call(this, props) || this;
    _this.state = {
      location: props.history.location
    };
    _this._isMounted = false;
    _this._pendingLocation = null;
    if (!props.staticContext) {
      _this.unlisten = props.history.listen(function(location) {
        if (_this._isMounted) {
          _this.setState({
            location
          });
        } else {
          _this._pendingLocation = location;
        }
      });
    }
    return _this;
  }
  var _proto = Router2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this._isMounted = true;
    if (this._pendingLocation) {
      this.setState({
        location: this._pendingLocation
      });
    }
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    if (this.unlisten) {
      this.unlisten();
      this._isMounted = false;
      this._pendingLocation = null;
    }
  };
  _proto.render = function render2() {
    return /* @__PURE__ */ React$2.createElement(context.Provider, {
      value: {
        history: this.props.history,
        location: this.state.location,
        match: Router2.computeRootMatch(this.state.location.pathname),
        staticContext: this.props.staticContext
      }
    }, /* @__PURE__ */ React$2.createElement(historyContext.Provider, {
      children: this.props.children || null,
      value: this.props.history
    }));
  };
  return Router2;
}(React$2.Component);
/* @__PURE__ */ (function(_React$Component) {
  _inheritsLoose(MemoryRouter, _React$Component);
  function MemoryRouter() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.history = createMemoryHistory(_this.props);
    return _this;
  }
  var _proto = MemoryRouter.prototype;
  _proto.render = function render2() {
    return /* @__PURE__ */ React$2.createElement(Router, {
      history: this.history,
      children: this.props.children
    });
  };
  return MemoryRouter;
})(React$2.Component);
/* @__PURE__ */ (function(_React$Component) {
  _inheritsLoose(Lifecycle, _React$Component);
  function Lifecycle() {
    return _React$Component.apply(this, arguments) || this;
  }
  var _proto = Lifecycle.prototype;
  _proto.componentDidMount = function componentDidMount() {
    if (this.props.onMount)
      this.props.onMount.call(this, this);
  };
  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    if (this.props.onUpdate)
      this.props.onUpdate.call(this, this, prevProps);
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    if (this.props.onUnmount)
      this.props.onUnmount.call(this, this);
  };
  _proto.render = function render2() {
    return null;
  };
  return Lifecycle;
})(React$2.Component);
var cache$1 = {};
var cacheLimit$1 = 1e4;
var cacheCount$1 = 0;
function compilePath$1(path, options) {
  var cacheKey = "" + options.end + options.strict + options.sensitive;
  var pathCache = cache$1[cacheKey] || (cache$1[cacheKey] = {});
  if (pathCache[path])
    return pathCache[path];
  var keys = [];
  var regexp = pathToRegexp$1(path, keys, options);
  var result = {
    regexp,
    keys
  };
  if (cacheCount$1 < cacheLimit$1) {
    pathCache[path] = result;
    cacheCount$1++;
  }
  return result;
}
function matchPath(pathname, options) {
  if (options === void 0) {
    options = {};
  }
  if (typeof options === "string" || Array.isArray(options)) {
    options = {
      path: options
    };
  }
  var _options = options, path = _options.path, _options$exact = _options.exact, exact = _options$exact === void 0 ? false : _options$exact, _options$strict = _options.strict, strict = _options$strict === void 0 ? false : _options$strict, _options$sensitive = _options.sensitive, sensitive = _options$sensitive === void 0 ? false : _options$sensitive;
  var paths = [].concat(path);
  return paths.reduce(function(matched, path2) {
    if (!path2 && path2 !== "")
      return null;
    if (matched)
      return matched;
    var _compilePath = compilePath$1(path2, {
      end: exact,
      strict,
      sensitive
    }), regexp = _compilePath.regexp, keys = _compilePath.keys;
    var match2 = regexp.exec(pathname);
    if (!match2)
      return null;
    var url = match2[0], values = match2.slice(1);
    var isExact = pathname === url;
    if (exact && !isExact)
      return null;
    return {
      path: path2,
      url: path2 === "/" && url === "" ? "/" : url,
      isExact,
      params: keys.reduce(function(memo, key, index2) {
        memo[key.name] = values[index2];
        return memo;
      }, {})
    };
  }, null);
}
function isEmptyChildren(children) {
  return React$2.Children.count(children) === 0;
}
var Route = /* @__PURE__ */ function(_React$Component) {
  _inheritsLoose(Route2, _React$Component);
  function Route2() {
    return _React$Component.apply(this, arguments) || this;
  }
  var _proto = Route2.prototype;
  _proto.render = function render2() {
    var _this = this;
    return /* @__PURE__ */ React$2.createElement(context.Consumer, null, function(context$1) {
      !context$1 ? invariant$2(false) : void 0;
      var location = _this.props.location || context$1.location;
      var match2 = _this.props.computedMatch ? _this.props.computedMatch : _this.props.path ? matchPath(location.pathname, _this.props) : context$1.match;
      var props = _extends$1({}, context$1, {
        location,
        match: match2
      });
      var _this$props = _this.props, children = _this$props.children, component = _this$props.component, render3 = _this$props.render;
      if (Array.isArray(children) && isEmptyChildren(children)) {
        children = null;
      }
      return /* @__PURE__ */ React$2.createElement(context.Provider, {
        value: props
      }, props.match ? children ? typeof children === "function" ? children(props) : children : component ? /* @__PURE__ */ React$2.createElement(component, props) : render3 ? render3(props) : null : typeof children === "function" ? children(props) : null);
    });
  };
  return Route2;
}(React$2.Component);
function addLeadingSlash(path) {
  return path.charAt(0) === "/" ? path : "/" + path;
}
function addBasename(basename, location) {
  if (!basename)
    return location;
  return _extends$1({}, location, {
    pathname: addLeadingSlash(basename) + location.pathname
  });
}
function stripBasename(basename, location) {
  if (!basename)
    return location;
  var base = addLeadingSlash(basename);
  if (location.pathname.indexOf(base) !== 0)
    return location;
  return _extends$1({}, location, {
    pathname: location.pathname.substr(base.length)
  });
}
function createURL(location) {
  return typeof location === "string" ? location : createPath(location);
}
function staticHandler(methodName) {
  return function() {
    invariant$2(false);
  };
}
function noop$1() {
}
var StaticRouter = /* @__PURE__ */ function(_React$Component) {
  _inheritsLoose(StaticRouter2, _React$Component);
  function StaticRouter2() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.handlePush = function(location) {
      return _this.navigateTo(location, "PUSH");
    };
    _this.handleReplace = function(location) {
      return _this.navigateTo(location, "REPLACE");
    };
    _this.handleListen = function() {
      return noop$1;
    };
    _this.handleBlock = function() {
      return noop$1;
    };
    return _this;
  }
  var _proto = StaticRouter2.prototype;
  _proto.navigateTo = function navigateTo(location, action) {
    var _this$props = this.props, _this$props$basename = _this$props.basename, basename = _this$props$basename === void 0 ? "" : _this$props$basename, _this$props$context = _this$props.context, context2 = _this$props$context === void 0 ? {} : _this$props$context;
    context2.action = action;
    context2.location = addBasename(basename, createLocation(location));
    context2.url = createURL(context2.location);
  };
  _proto.render = function render2() {
    var _this$props2 = this.props, _this$props2$basename = _this$props2.basename, basename = _this$props2$basename === void 0 ? "" : _this$props2$basename, _this$props2$context = _this$props2.context, context2 = _this$props2$context === void 0 ? {} : _this$props2$context, _this$props2$location = _this$props2.location, location = _this$props2$location === void 0 ? "/" : _this$props2$location, rest = _objectWithoutPropertiesLoose$1(_this$props2, ["basename", "context", "location"]);
    var history = {
      createHref: function createHref(path) {
        return addLeadingSlash(basename + createURL(path));
      },
      action: "POP",
      location: stripBasename(basename, createLocation(location)),
      push: this.handlePush,
      replace: this.handleReplace,
      go: staticHandler(),
      goBack: staticHandler(),
      goForward: staticHandler(),
      listen: this.handleListen,
      block: this.handleBlock
    };
    return /* @__PURE__ */ React$2.createElement(Router, _extends$1({}, rest, {
      history,
      staticContext: context2
    }));
  };
  return StaticRouter2;
}(React$2.Component);
var Switch = /* @__PURE__ */ function(_React$Component) {
  _inheritsLoose(Switch2, _React$Component);
  function Switch2() {
    return _React$Component.apply(this, arguments) || this;
  }
  var _proto = Switch2.prototype;
  _proto.render = function render2() {
    var _this = this;
    return /* @__PURE__ */ React$2.createElement(context.Consumer, null, function(context2) {
      !context2 ? invariant$2(false) : void 0;
      var location = _this.props.location || context2.location;
      var element, match2;
      React$2.Children.forEach(_this.props.children, function(child) {
        if (match2 == null && /* @__PURE__ */ React$2.isValidElement(child)) {
          element = child;
          var path = child.props.path || child.props.from;
          match2 = path ? matchPath(location.pathname, _extends$1({}, child.props, {
            path
          })) : context2.match;
        }
      });
      return match2 ? /* @__PURE__ */ React$2.cloneElement(element, {
        location,
        computedMatch: match2
      }) : null;
    });
  };
  return Switch2;
}(React$2.Component);
var useContext = React$2.useContext;
function useLocation() {
  return useContext(context).location;
}
function useParams() {
  var match2 = useContext(context).match;
  return match2 ? match2.params : {};
}
function useRouteMatch(path) {
  var location = useLocation();
  var match2 = useContext(context).match;
  return path ? matchPath(location.pathname, path) : match2;
}
/* @__PURE__ */ (function(_React$Component) {
  _inheritsLoose(BrowserRouter, _React$Component);
  function BrowserRouter() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.history = createBrowserHistory(_this.props);
    return _this;
  }
  var _proto = BrowserRouter.prototype;
  _proto.render = function render2() {
    return /* @__PURE__ */ React$2.createElement(Router, {
      history: this.history,
      children: this.props.children
    });
  };
  return BrowserRouter;
})(React$2.Component);
/* @__PURE__ */ (function(_React$Component) {
  _inheritsLoose(HashRouter, _React$Component);
  function HashRouter() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.history = createHashHistory(_this.props);
    return _this;
  }
  var _proto = HashRouter.prototype;
  _proto.render = function render2() {
    return /* @__PURE__ */ React$2.createElement(Router, {
      history: this.history,
      children: this.props.children
    });
  };
  return HashRouter;
})(React$2.Component);
var resolveToLocation = function resolveToLocation2(to, currentLocation) {
  return typeof to === "function" ? to(currentLocation) : to;
};
var normalizeToLocation = function normalizeToLocation2(to, currentLocation) {
  return typeof to === "string" ? createLocation(to, null, null, currentLocation) : to;
};
var forwardRefShim = function forwardRefShim2(C2) {
  return C2;
};
var forwardRef = React$2.forwardRef;
if (typeof forwardRef === "undefined") {
  forwardRef = forwardRefShim;
}
function isModifiedEvent(event) {
  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}
var LinkAnchor = forwardRef(function(_ref, forwardedRef) {
  var innerRef = _ref.innerRef, navigate = _ref.navigate, _onClick = _ref.onClick, rest = _objectWithoutPropertiesLoose$1(_ref, ["innerRef", "navigate", "onClick"]);
  var target2 = rest.target;
  var props = _extends$1({}, rest, {
    onClick: function onClick(event) {
      try {
        if (_onClick)
          _onClick(event);
      } catch (ex) {
        event.preventDefault();
        throw ex;
      }
      if (!event.defaultPrevented && event.button === 0 && (!target2 || target2 === "_self") && !isModifiedEvent(event)) {
        event.preventDefault();
        navigate();
      }
    }
  });
  if (forwardRefShim !== forwardRef) {
    props.ref = forwardedRef || innerRef;
  } else {
    props.ref = innerRef;
  }
  return /* @__PURE__ */ React$2.createElement("a", props);
});
var Link$1 = forwardRef(function(_ref2, forwardedRef) {
  var _ref2$component = _ref2.component, component = _ref2$component === void 0 ? LinkAnchor : _ref2$component, replace = _ref2.replace, to = _ref2.to, innerRef = _ref2.innerRef, rest = _objectWithoutPropertiesLoose$1(_ref2, ["component", "replace", "to", "innerRef"]);
  return /* @__PURE__ */ React$2.createElement(context.Consumer, null, function(context2) {
    !context2 ? invariant$2(false) : void 0;
    var history = context2.history;
    var location = normalizeToLocation(resolveToLocation(to, context2.location), context2.location);
    var href = location ? history.createHref(location) : "";
    var props = _extends$1({}, rest, {
      href,
      navigate: function navigate() {
        var location2 = resolveToLocation(to, context2.location);
        var isDuplicateNavigation = createPath(context2.location) === createPath(normalizeToLocation(location2));
        var method = replace || isDuplicateNavigation ? history.replace : history.push;
        method(location2);
      }
    });
    if (forwardRefShim !== forwardRef) {
      props.ref = forwardedRef || innerRef;
    } else {
      props.innerRef = innerRef;
    }
    return /* @__PURE__ */ React$2.createElement(component, props);
  });
});
var forwardRefShim$1 = function forwardRefShim3(C2) {
  return C2;
};
var forwardRef$1 = React$2.forwardRef;
if (typeof forwardRef$1 === "undefined") {
  forwardRef$1 = forwardRefShim$1;
}
function joinClassnames() {
  for (var _len = arguments.length, classnames = new Array(_len), _key = 0; _key < _len; _key++) {
    classnames[_key] = arguments[_key];
  }
  return classnames.filter(function(i) {
    return i;
  }).join(" ");
}
forwardRef$1(function(_ref, forwardedRef) {
  var _ref$ariaCurrent = _ref["aria-current"], ariaCurrent = _ref$ariaCurrent === void 0 ? "page" : _ref$ariaCurrent, _ref$activeClassName = _ref.activeClassName, activeClassName = _ref$activeClassName === void 0 ? "active" : _ref$activeClassName, activeStyle = _ref.activeStyle, classNameProp = _ref.className, exact = _ref.exact, isActiveProp = _ref.isActive, locationProp = _ref.location, sensitive = _ref.sensitive, strict = _ref.strict, styleProp = _ref.style, to = _ref.to, innerRef = _ref.innerRef, rest = _objectWithoutPropertiesLoose$1(_ref, ["aria-current", "activeClassName", "activeStyle", "className", "exact", "isActive", "location", "sensitive", "strict", "style", "to", "innerRef"]);
  return /* @__PURE__ */ React$2.createElement(context.Consumer, null, function(context2) {
    !context2 ? invariant$2(false) : void 0;
    var currentLocation = locationProp || context2.location;
    var toLocation = normalizeToLocation(resolveToLocation(to, currentLocation), currentLocation);
    var path = toLocation.pathname;
    var escapedPath = path && path.replace(/([.+*?=^!:${}()[\]|/\\])/g, "\\$1");
    var match2 = escapedPath ? matchPath(currentLocation.pathname, {
      path: escapedPath,
      exact,
      sensitive,
      strict
    }) : null;
    var isActive = !!(isActiveProp ? isActiveProp(match2, currentLocation) : match2);
    var className = typeof classNameProp === "function" ? classNameProp(isActive) : classNameProp;
    var style = typeof styleProp === "function" ? styleProp(isActive) : styleProp;
    if (isActive) {
      className = joinClassnames(className, activeClassName);
      style = _extends$1({}, style, activeStyle);
    }
    var props = _extends$1({
      "aria-current": isActive && ariaCurrent || null,
      className,
      style,
      to: toLocation
    }, rest);
    if (forwardRefShim$1 !== forwardRef$1) {
      props.ref = forwardedRef || innerRef;
    } else {
      props.innerRef = innerRef;
    }
    return /* @__PURE__ */ React$2.createElement(Link$1, props);
  });
});
const HydrationContext = react.exports.createContext(false);
class ClientComponents {
  constructor() {
    this.modules = [];
  }
  add(module) {
    this.modules.push(JSON.stringify(module));
    return this.modules.length;
  }
  indexOf(module) {
    return this.modules.indexOf(JSON.stringify(module)) + 1;
  }
  all() {
    return this.modules.map((module) => JSON.parse(module));
  }
}
var lib$2 = {};
var possibleStandardNamesOptimized$1 = {};
var SAME$1 = 0;
possibleStandardNamesOptimized$1.SAME = SAME$1;
var CAMELCASE$1 = 1;
possibleStandardNamesOptimized$1.CAMELCASE = CAMELCASE$1;
possibleStandardNamesOptimized$1.possibleStandardNames = {
  accept: 0,
  acceptCharset: 1,
  "accept-charset": "acceptCharset",
  accessKey: 1,
  action: 0,
  allowFullScreen: 1,
  alt: 0,
  as: 0,
  async: 0,
  autoCapitalize: 1,
  autoComplete: 1,
  autoCorrect: 1,
  autoFocus: 1,
  autoPlay: 1,
  autoSave: 1,
  capture: 0,
  cellPadding: 1,
  cellSpacing: 1,
  challenge: 0,
  charSet: 1,
  checked: 0,
  children: 0,
  cite: 0,
  class: "className",
  classID: 1,
  className: 1,
  cols: 0,
  colSpan: 1,
  content: 0,
  contentEditable: 1,
  contextMenu: 1,
  controls: 0,
  controlsList: 1,
  coords: 0,
  crossOrigin: 1,
  dangerouslySetInnerHTML: 1,
  data: 0,
  dateTime: 1,
  default: 0,
  defaultChecked: 1,
  defaultValue: 1,
  defer: 0,
  dir: 0,
  disabled: 0,
  disablePictureInPicture: 1,
  disableRemotePlayback: 1,
  download: 0,
  draggable: 0,
  encType: 1,
  enterKeyHint: 1,
  for: "htmlFor",
  form: 0,
  formMethod: 1,
  formAction: 1,
  formEncType: 1,
  formNoValidate: 1,
  formTarget: 1,
  frameBorder: 1,
  headers: 0,
  height: 0,
  hidden: 0,
  high: 0,
  href: 0,
  hrefLang: 1,
  htmlFor: 1,
  httpEquiv: 1,
  "http-equiv": "httpEquiv",
  icon: 0,
  id: 0,
  innerHTML: 1,
  inputMode: 1,
  integrity: 0,
  is: 0,
  itemID: 1,
  itemProp: 1,
  itemRef: 1,
  itemScope: 1,
  itemType: 1,
  keyParams: 1,
  keyType: 1,
  kind: 0,
  label: 0,
  lang: 0,
  list: 0,
  loop: 0,
  low: 0,
  manifest: 0,
  marginWidth: 1,
  marginHeight: 1,
  max: 0,
  maxLength: 1,
  media: 0,
  mediaGroup: 1,
  method: 0,
  min: 0,
  minLength: 1,
  multiple: 0,
  muted: 0,
  name: 0,
  noModule: 1,
  nonce: 0,
  noValidate: 1,
  open: 0,
  optimum: 0,
  pattern: 0,
  placeholder: 0,
  playsInline: 1,
  poster: 0,
  preload: 0,
  profile: 0,
  radioGroup: 1,
  readOnly: 1,
  referrerPolicy: 1,
  rel: 0,
  required: 0,
  reversed: 0,
  role: 0,
  rows: 0,
  rowSpan: 1,
  sandbox: 0,
  scope: 0,
  scoped: 0,
  scrolling: 0,
  seamless: 0,
  selected: 0,
  shape: 0,
  size: 0,
  sizes: 0,
  span: 0,
  spellCheck: 1,
  src: 0,
  srcDoc: 1,
  srcLang: 1,
  srcSet: 1,
  start: 0,
  step: 0,
  style: 0,
  summary: 0,
  tabIndex: 1,
  target: 0,
  title: 0,
  type: 0,
  useMap: 1,
  value: 0,
  width: 0,
  wmode: 0,
  wrap: 0,
  about: 0,
  accentHeight: 1,
  "accent-height": "accentHeight",
  accumulate: 0,
  additive: 0,
  alignmentBaseline: 1,
  "alignment-baseline": "alignmentBaseline",
  allowReorder: 1,
  alphabetic: 0,
  amplitude: 0,
  arabicForm: 1,
  "arabic-form": "arabicForm",
  ascent: 0,
  attributeName: 1,
  attributeType: 1,
  autoReverse: 1,
  azimuth: 0,
  baseFrequency: 1,
  baselineShift: 1,
  "baseline-shift": "baselineShift",
  baseProfile: 1,
  bbox: 0,
  begin: 0,
  bias: 0,
  by: 0,
  calcMode: 1,
  capHeight: 1,
  "cap-height": "capHeight",
  clip: 0,
  clipPath: 1,
  "clip-path": "clipPath",
  clipPathUnits: 1,
  clipRule: 1,
  "clip-rule": "clipRule",
  color: 0,
  colorInterpolation: 1,
  "color-interpolation": "colorInterpolation",
  colorInterpolationFilters: 1,
  "color-interpolation-filters": "colorInterpolationFilters",
  colorProfile: 1,
  "color-profile": "colorProfile",
  colorRendering: 1,
  "color-rendering": "colorRendering",
  contentScriptType: 1,
  contentStyleType: 1,
  cursor: 0,
  cx: 0,
  cy: 0,
  d: 0,
  datatype: 0,
  decelerate: 0,
  descent: 0,
  diffuseConstant: 1,
  direction: 0,
  display: 0,
  divisor: 0,
  dominantBaseline: 1,
  "dominant-baseline": "dominantBaseline",
  dur: 0,
  dx: 0,
  dy: 0,
  edgeMode: 1,
  elevation: 0,
  enableBackground: 1,
  "enable-background": "enableBackground",
  end: 0,
  exponent: 0,
  externalResourcesRequired: 1,
  fill: 0,
  fillOpacity: 1,
  "fill-opacity": "fillOpacity",
  fillRule: 1,
  "fill-rule": "fillRule",
  filter: 0,
  filterRes: 1,
  filterUnits: 1,
  floodOpacity: 1,
  "flood-opacity": "floodOpacity",
  floodColor: 1,
  "flood-color": "floodColor",
  focusable: 0,
  fontFamily: 1,
  "font-family": "fontFamily",
  fontSize: 1,
  "font-size": "fontSize",
  fontSizeAdjust: 1,
  "font-size-adjust": "fontSizeAdjust",
  fontStretch: 1,
  "font-stretch": "fontStretch",
  fontStyle: 1,
  "font-style": "fontStyle",
  fontVariant: 1,
  "font-variant": "fontVariant",
  fontWeight: 1,
  "font-weight": "fontWeight",
  format: 0,
  from: 0,
  fx: 0,
  fy: 0,
  g1: 0,
  g2: 0,
  glyphName: 1,
  "glyph-name": "glyphName",
  glyphOrientationHorizontal: 1,
  "glyph-orientation-horizontal": "glyphOrientationHorizontal",
  glyphOrientationVertical: 1,
  "glyph-orientation-vertical": "glyphOrientationVertical",
  glyphRef: 1,
  gradientTransform: 1,
  gradientUnits: 1,
  hanging: 0,
  horizAdvX: 1,
  "horiz-adv-x": "horizAdvX",
  horizOriginX: 1,
  "horiz-origin-x": "horizOriginX",
  ideographic: 0,
  imageRendering: 1,
  "image-rendering": "imageRendering",
  in2: 0,
  in: 0,
  inlist: 0,
  intercept: 0,
  k1: 0,
  k2: 0,
  k3: 0,
  k4: 0,
  k: 0,
  kernelMatrix: 1,
  kernelUnitLength: 1,
  kerning: 0,
  keyPoints: 1,
  keySplines: 1,
  keyTimes: 1,
  lengthAdjust: 1,
  letterSpacing: 1,
  "letter-spacing": "letterSpacing",
  lightingColor: 1,
  "lighting-color": "lightingColor",
  limitingConeAngle: 1,
  local: 0,
  markerEnd: 1,
  "marker-end": "markerEnd",
  markerHeight: 1,
  markerMid: 1,
  "marker-mid": "markerMid",
  markerStart: 1,
  "marker-start": "markerStart",
  markerUnits: 1,
  markerWidth: 1,
  mask: 0,
  maskContentUnits: 1,
  maskUnits: 1,
  mathematical: 0,
  mode: 0,
  numOctaves: 1,
  offset: 0,
  opacity: 0,
  operator: 0,
  order: 0,
  orient: 0,
  orientation: 0,
  origin: 0,
  overflow: 0,
  overlinePosition: 1,
  "overline-position": "overlinePosition",
  overlineThickness: 1,
  "overline-thickness": "overlineThickness",
  paintOrder: 1,
  "paint-order": "paintOrder",
  panose1: 0,
  "panose-1": "panose1",
  pathLength: 1,
  patternContentUnits: 1,
  patternTransform: 1,
  patternUnits: 1,
  pointerEvents: 1,
  "pointer-events": "pointerEvents",
  points: 0,
  pointsAtX: 1,
  pointsAtY: 1,
  pointsAtZ: 1,
  prefix: 0,
  preserveAlpha: 1,
  preserveAspectRatio: 1,
  primitiveUnits: 1,
  property: 0,
  r: 0,
  radius: 0,
  refX: 1,
  refY: 1,
  renderingIntent: 1,
  "rendering-intent": "renderingIntent",
  repeatCount: 1,
  repeatDur: 1,
  requiredExtensions: 1,
  requiredFeatures: 1,
  resource: 0,
  restart: 0,
  result: 0,
  results: 0,
  rotate: 0,
  rx: 0,
  ry: 0,
  scale: 0,
  security: 0,
  seed: 0,
  shapeRendering: 1,
  "shape-rendering": "shapeRendering",
  slope: 0,
  spacing: 0,
  specularConstant: 1,
  specularExponent: 1,
  speed: 0,
  spreadMethod: 1,
  startOffset: 1,
  stdDeviation: 1,
  stemh: 0,
  stemv: 0,
  stitchTiles: 1,
  stopColor: 1,
  "stop-color": "stopColor",
  stopOpacity: 1,
  "stop-opacity": "stopOpacity",
  strikethroughPosition: 1,
  "strikethrough-position": "strikethroughPosition",
  strikethroughThickness: 1,
  "strikethrough-thickness": "strikethroughThickness",
  string: 0,
  stroke: 0,
  strokeDasharray: 1,
  "stroke-dasharray": "strokeDasharray",
  strokeDashoffset: 1,
  "stroke-dashoffset": "strokeDashoffset",
  strokeLinecap: 1,
  "stroke-linecap": "strokeLinecap",
  strokeLinejoin: 1,
  "stroke-linejoin": "strokeLinejoin",
  strokeMiterlimit: 1,
  "stroke-miterlimit": "strokeMiterlimit",
  strokeWidth: 1,
  "stroke-width": "strokeWidth",
  strokeOpacity: 1,
  "stroke-opacity": "strokeOpacity",
  suppressContentEditableWarning: 1,
  suppressHydrationWarning: 1,
  surfaceScale: 1,
  systemLanguage: 1,
  tableValues: 1,
  targetX: 1,
  targetY: 1,
  textAnchor: 1,
  "text-anchor": "textAnchor",
  textDecoration: 1,
  "text-decoration": "textDecoration",
  textLength: 1,
  textRendering: 1,
  "text-rendering": "textRendering",
  to: 0,
  transform: 0,
  typeof: 0,
  u1: 0,
  u2: 0,
  underlinePosition: 1,
  "underline-position": "underlinePosition",
  underlineThickness: 1,
  "underline-thickness": "underlineThickness",
  unicode: 0,
  unicodeBidi: 1,
  "unicode-bidi": "unicodeBidi",
  unicodeRange: 1,
  "unicode-range": "unicodeRange",
  unitsPerEm: 1,
  "units-per-em": "unitsPerEm",
  unselectable: 0,
  vAlphabetic: 1,
  "v-alphabetic": "vAlphabetic",
  values: 0,
  vectorEffect: 1,
  "vector-effect": "vectorEffect",
  version: 0,
  vertAdvY: 1,
  "vert-adv-y": "vertAdvY",
  vertOriginX: 1,
  "vert-origin-x": "vertOriginX",
  vertOriginY: 1,
  "vert-origin-y": "vertOriginY",
  vHanging: 1,
  "v-hanging": "vHanging",
  vIdeographic: 1,
  "v-ideographic": "vIdeographic",
  viewBox: 1,
  viewTarget: 1,
  visibility: 0,
  vMathematical: 1,
  "v-mathematical": "vMathematical",
  vocab: 0,
  widths: 0,
  wordSpacing: 1,
  "word-spacing": "wordSpacing",
  writingMode: 1,
  "writing-mode": "writingMode",
  x1: 0,
  x2: 0,
  x: 0,
  xChannelSelector: 1,
  xHeight: 1,
  "x-height": "xHeight",
  xlinkActuate: 1,
  "xlink:actuate": "xlinkActuate",
  xlinkArcrole: 1,
  "xlink:arcrole": "xlinkArcrole",
  xlinkHref: 1,
  "xlink:href": "xlinkHref",
  xlinkRole: 1,
  "xlink:role": "xlinkRole",
  xlinkShow: 1,
  "xlink:show": "xlinkShow",
  xlinkTitle: 1,
  "xlink:title": "xlinkTitle",
  xlinkType: 1,
  "xlink:type": "xlinkType",
  xmlBase: 1,
  "xml:base": "xmlBase",
  xmlLang: 1,
  "xml:lang": "xmlLang",
  xmlns: 0,
  "xml:space": "xmlSpace",
  xmlnsXlink: 1,
  "xmlns:xlink": "xmlnsXlink",
  xmlSpace: 1,
  y1: 0,
  y2: 0,
  y: 0,
  yChannelSelector: 1,
  z: 0,
  zoomAndPan: 1
};
Object.defineProperty(lib$2, "__esModule", { value: true });
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray$1(arr, i) || _nonIterableRest();
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _unsupportedIterableToArray$1(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray$1(o, minLen);
  var n2 = Object.prototype.toString.call(o).slice(8, -1);
  if (n2 === "Object" && o.constructor)
    n2 = o.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray$1(o, minLen);
}
function _arrayLikeToArray$1(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
var RESERVED = 0;
var STRING = 1;
var BOOLEANISH_STRING = 2;
var BOOLEAN = 3;
var OVERLOADED_BOOLEAN = 4;
var NUMERIC = 5;
var POSITIVE_NUMERIC = 6;
function getPropertyInfo(name) {
  return properties.hasOwnProperty(name) ? properties[name] : null;
}
function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL, removeEmptyString) {
  this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
  this.attributeName = attributeName;
  this.attributeNamespace = attributeNamespace;
  this.mustUseProperty = mustUseProperty;
  this.propertyName = name;
  this.type = type;
  this.sanitizeURL = sanitizeURL;
  this.removeEmptyString = removeEmptyString;
}
var properties = {};
var reservedProps = [
  "children",
  "dangerouslySetInnerHTML",
  "defaultValue",
  "defaultChecked",
  "innerHTML",
  "suppressContentEditableWarning",
  "suppressHydrationWarning",
  "style"
];
reservedProps.forEach(function(name) {
  properties[name] = new PropertyInfoRecord(name, RESERVED, false, name, null, false, false);
});
[["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(_ref) {
  var _ref2 = _slicedToArray(_ref, 2), name = _ref2[0], attributeName = _ref2[1];
  properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, null, false, false);
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function(name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, name.toLowerCase(), null, false, false);
});
["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, name, null, false, false);
});
[
  "allowFullScreen",
  "async",
  "autoFocus",
  "autoPlay",
  "controls",
  "default",
  "defer",
  "disabled",
  "disablePictureInPicture",
  "disableRemotePlayback",
  "formNoValidate",
  "hidden",
  "loop",
  "noModule",
  "noValidate",
  "open",
  "playsInline",
  "readOnly",
  "required",
  "reversed",
  "scoped",
  "seamless",
  "itemScope"
].forEach(function(name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, name.toLowerCase(), null, false, false);
});
[
  "checked",
  "multiple",
  "muted",
  "selected"
].forEach(function(name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, name, null, false, false);
});
[
  "capture",
  "download"
].forEach(function(name) {
  properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, name, null, false, false);
});
[
  "cols",
  "rows",
  "size",
  "span"
].forEach(function(name) {
  properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, name, null, false, false);
});
["rowSpan", "start"].forEach(function(name) {
  properties[name] = new PropertyInfoRecord(name, NUMERIC, false, name.toLowerCase(), null, false, false);
});
var CAMELIZE = /[\-\:]([a-z])/g;
var capitalize$1 = function capitalize2(token) {
  return token[1].toUpperCase();
};
[
  "accent-height",
  "alignment-baseline",
  "arabic-form",
  "baseline-shift",
  "cap-height",
  "clip-path",
  "clip-rule",
  "color-interpolation",
  "color-interpolation-filters",
  "color-profile",
  "color-rendering",
  "dominant-baseline",
  "enable-background",
  "fill-opacity",
  "fill-rule",
  "flood-color",
  "flood-opacity",
  "font-family",
  "font-size",
  "font-size-adjust",
  "font-stretch",
  "font-style",
  "font-variant",
  "font-weight",
  "glyph-name",
  "glyph-orientation-horizontal",
  "glyph-orientation-vertical",
  "horiz-adv-x",
  "horiz-origin-x",
  "image-rendering",
  "letter-spacing",
  "lighting-color",
  "marker-end",
  "marker-mid",
  "marker-start",
  "overline-position",
  "overline-thickness",
  "paint-order",
  "panose-1",
  "pointer-events",
  "rendering-intent",
  "shape-rendering",
  "stop-color",
  "stop-opacity",
  "strikethrough-position",
  "strikethrough-thickness",
  "stroke-dasharray",
  "stroke-dashoffset",
  "stroke-linecap",
  "stroke-linejoin",
  "stroke-miterlimit",
  "stroke-opacity",
  "stroke-width",
  "text-anchor",
  "text-decoration",
  "text-rendering",
  "underline-position",
  "underline-thickness",
  "unicode-bidi",
  "unicode-range",
  "units-per-em",
  "v-alphabetic",
  "v-hanging",
  "v-ideographic",
  "v-mathematical",
  "vector-effect",
  "vert-adv-y",
  "vert-origin-x",
  "vert-origin-y",
  "word-spacing",
  "writing-mode",
  "xmlns:xlink",
  "x-height"
].forEach(function(attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize$1);
  properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, null, false, false);
});
[
  "xlink:actuate",
  "xlink:arcrole",
  "xlink:role",
  "xlink:show",
  "xlink:title",
  "xlink:type"
].forEach(function(attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize$1);
  properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, "http://www.w3.org/1999/xlink", false, false);
});
[
  "xml:base",
  "xml:lang",
  "xml:space"
].forEach(function(attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize$1);
  properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, "http://www.w3.org/XML/1998/namespace", false, false);
});
["tabIndex", "crossOrigin"].forEach(function(attributeName) {
  properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, attributeName.toLowerCase(), null, false, false);
});
var xlinkHref = "xlinkHref";
properties[xlinkHref] = new PropertyInfoRecord("xlinkHref", STRING, false, "xlink:href", "http://www.w3.org/1999/xlink", true, false);
["src", "href", "action", "formAction"].forEach(function(attributeName) {
  properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, attributeName.toLowerCase(), null, true, true);
});
var _require = possibleStandardNamesOptimized$1, CAMELCASE = _require.CAMELCASE, SAME = _require.SAME, possibleStandardNamesOptimized = _require.possibleStandardNames;
var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
var isCustomAttribute = RegExp.prototype.test.bind(new RegExp("^(data|aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$"));
var possibleStandardNames = Object.keys(possibleStandardNamesOptimized).reduce(function(accumulator, standardName) {
  var propName = possibleStandardNamesOptimized[standardName];
  if (propName === SAME) {
    accumulator[standardName] = standardName;
  } else if (propName === CAMELCASE) {
    accumulator[standardName.toLowerCase()] = standardName;
  } else {
    accumulator[standardName] = propName;
  }
  return accumulator;
}, {});
lib$2.BOOLEAN = BOOLEAN;
lib$2.BOOLEANISH_STRING = BOOLEANISH_STRING;
lib$2.NUMERIC = NUMERIC;
lib$2.OVERLOADED_BOOLEAN = OVERLOADED_BOOLEAN;
lib$2.POSITIVE_NUMERIC = POSITIVE_NUMERIC;
lib$2.RESERVED = RESERVED;
lib$2.STRING = STRING;
lib$2.getPropertyInfo = getPropertyInfo;
lib$2.isCustomAttribute = isCustomAttribute;
lib$2.possibleStandardNames = possibleStandardNames;
var cjs = {};
var COMMENT_REGEX = /\/\*[^*]*\*+([^/*][^*]*\*+)*\//g;
var NEWLINE_REGEX = /\n/g;
var WHITESPACE_REGEX = /^\s*/;
var PROPERTY_REGEX = /^(\*?[-#/*\\\w]+(\[[0-9a-z_-]+\])?)\s*/;
var COLON_REGEX = /^:\s*/;
var VALUE_REGEX = /^((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^)]*?\)|[^};])+)/;
var SEMICOLON_REGEX = /^[;\s]*/;
var TRIM_REGEX = /^\s+|\s+$/g;
var NEWLINE = "\n";
var FORWARD_SLASH = "/";
var ASTERISK = "*";
var EMPTY_STRING = "";
var TYPE_COMMENT = "comment";
var TYPE_DECLARATION = "declaration";
var inlineStyleParser = function(style, options) {
  if (typeof style !== "string") {
    throw new TypeError("First argument must be a string");
  }
  if (!style)
    return [];
  options = options || {};
  var lineno = 1;
  var column = 1;
  function updatePosition(str) {
    var lines = str.match(NEWLINE_REGEX);
    if (lines)
      lineno += lines.length;
    var i = str.lastIndexOf(NEWLINE);
    column = ~i ? str.length - i : column + str.length;
  }
  function position() {
    var start = { line: lineno, column };
    return function(node2) {
      node2.position = new Position(start);
      whitespace2();
      return node2;
    };
  }
  function Position(start) {
    this.start = start;
    this.end = { line: lineno, column };
    this.source = options.source;
  }
  Position.prototype.content = style;
  function error(msg) {
    var err = new Error(options.source + ":" + lineno + ":" + column + ": " + msg);
    err.reason = msg;
    err.filename = options.source;
    err.line = lineno;
    err.column = column;
    err.source = style;
    if (options.silent)
      ;
    else {
      throw err;
    }
  }
  function match2(re2) {
    var m2 = re2.exec(style);
    if (!m2)
      return;
    var str = m2[0];
    updatePosition(str);
    style = style.slice(str.length);
    return m2;
  }
  function whitespace2() {
    match2(WHITESPACE_REGEX);
  }
  function comments(rules) {
    var c2;
    rules = rules || [];
    while (c2 = comment()) {
      if (c2 !== false) {
        rules.push(c2);
      }
    }
    return rules;
  }
  function comment() {
    var pos = position();
    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1))
      return;
    var i = 2;
    while (EMPTY_STRING != style.charAt(i) && (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))) {
      ++i;
    }
    i += 2;
    if (EMPTY_STRING === style.charAt(i - 1)) {
      return error("End of comment missing");
    }
    var str = style.slice(2, i - 2);
    column += 2;
    updatePosition(str);
    style = style.slice(i);
    column += 2;
    return pos({
      type: TYPE_COMMENT,
      comment: str
    });
  }
  function declaration() {
    var pos = position();
    var prop2 = match2(PROPERTY_REGEX);
    if (!prop2)
      return;
    comment();
    if (!match2(COLON_REGEX))
      return error("property missing ':'");
    var val = match2(VALUE_REGEX);
    var ret = pos({
      type: TYPE_DECLARATION,
      property: trim(prop2[0].replace(COMMENT_REGEX, EMPTY_STRING)),
      value: val ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING)) : EMPTY_STRING
    });
    match2(SEMICOLON_REGEX);
    return ret;
  }
  function declarations() {
    var decls = [];
    comments(decls);
    var decl;
    while (decl = declaration()) {
      if (decl !== false) {
        decls.push(decl);
        comments(decls);
      }
    }
    return decls;
  }
  whitespace2();
  return declarations();
};
function trim(str) {
  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;
}
var parse$1 = inlineStyleParser;
function StyleToObject(style, iterator) {
  var output = null;
  if (!style || typeof style !== "string") {
    return output;
  }
  var declaration;
  var declarations = parse$1(style);
  var hasIterator = typeof iterator === "function";
  var property;
  var value;
  for (var i = 0, len = declarations.length; i < len; i++) {
    declaration = declarations[i];
    property = declaration.property;
    value = declaration.value;
    if (hasIterator) {
      iterator(property, value, declaration);
    } else if (value) {
      output || (output = {});
      output[property] = value;
    }
  }
  return output;
}
var styleToObject = StyleToObject;
var utilities$4 = {};
utilities$4.__esModule = true;
utilities$4.camelCase = void 0;
var CUSTOM_PROPERTY_REGEX = /^--[a-zA-Z0-9-]+$/;
var HYPHEN_REGEX = /-([a-z])/g;
var NO_HYPHEN_REGEX = /^[^-]+$/;
var VENDOR_PREFIX_REGEX = /^-(webkit|moz|ms|o|khtml)-/;
var skipCamelCase = function(property) {
  return !property || NO_HYPHEN_REGEX.test(property) || CUSTOM_PROPERTY_REGEX.test(property);
};
var capitalize = function(match2, character) {
  return character.toUpperCase();
};
var trimHyphen = function(match2, prefix2) {
  return prefix2 + "-";
};
var camelCase = function(property, options) {
  if (options === void 0) {
    options = {};
  }
  if (skipCamelCase(property)) {
    return property;
  }
  property = property.toLowerCase();
  if (!options.reactCompat) {
    property = property.replace(VENDOR_PREFIX_REGEX, trimHyphen);
  }
  return property.replace(HYPHEN_REGEX, capitalize);
};
utilities$4.camelCase = camelCase;
(function(exports) {
  var __importDefault2 = commonjsGlobal$1 && commonjsGlobal$1.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : { "default": mod };
  };
  exports.__esModule = true;
  var style_to_object_1 = __importDefault2(styleToObject);
  var utilities_1 = utilities$4;
  function StyleToJS(style, options) {
    var output = {};
    if (!style || typeof style !== "string") {
      return output;
    }
    style_to_object_1["default"](style, function(property, value) {
      if (property && value) {
        output[utilities_1.camelCase(property, options)] = value;
      }
    });
    return output;
  }
  exports["default"] = StyleToJS;
})(cjs);
var React$1 = react.exports;
var styleToJS = cjs.default;
function invertObject(obj, override) {
  if (!obj || typeof obj !== "object") {
    throw new TypeError("First argument must be an object");
  }
  var key;
  var value;
  var isOverridePresent = typeof override === "function";
  var overrides = {};
  var result = {};
  for (key in obj) {
    value = obj[key];
    if (isOverridePresent) {
      overrides = override(key, value);
      if (overrides && overrides.length === 2) {
        result[overrides[0]] = overrides[1];
        continue;
      }
    }
    if (typeof value === "string") {
      result[value] = key;
    }
  }
  return result;
}
function isCustomComponent(tagName, props) {
  if (tagName.indexOf("-") === -1) {
    return props && typeof props.is === "string";
  }
  switch (tagName) {
    case "annotation-xml":
    case "color-profile":
    case "font-face":
    case "font-face-src":
    case "font-face-uri":
    case "font-face-format":
    case "font-face-name":
    case "missing-glyph":
      return false;
    default:
      return true;
  }
}
var styleToJSOptions = { reactCompat: true };
function setStyleProp$1(style, props) {
  if (style === null || style === void 0) {
    return;
  }
  try {
    props.style = styleToJS(style, styleToJSOptions);
  } catch (err) {
    props.style = {};
  }
}
var PRESERVE_CUSTOM_ATTRIBUTES = React$1.version.split(".")[0] >= 16;
var utilities$3 = {
  PRESERVE_CUSTOM_ATTRIBUTES,
  invertObject,
  isCustomComponent,
  setStyleProp: setStyleProp$1
};
var reactProperty = lib$2;
var utilities$2 = utilities$3;
var attributesToProps$1 = function attributesToProps2(attributes) {
  attributes = attributes || {};
  var attributeName;
  var attributeNameLowerCased;
  var attributeValue;
  var propName;
  var propertyInfo;
  var props = {};
  for (attributeName in attributes) {
    attributeValue = attributes[attributeName];
    if (reactProperty.isCustomAttribute(attributeName)) {
      props[attributeName] = attributeValue;
      continue;
    }
    attributeNameLowerCased = attributeName.toLowerCase();
    propName = reactProperty.possibleStandardNames[attributeNameLowerCased];
    if (propName) {
      props[propName] = attributeValue;
      propertyInfo = reactProperty.getPropertyInfo(propName);
      switch (propertyInfo && propertyInfo.type) {
        case reactProperty.BOOLEAN:
          props[propName] = true;
          break;
        case reactProperty.OVERLOADED_BOOLEAN:
          if (attributeValue === "") {
            props[propName] = true;
          }
          break;
      }
      continue;
    }
    if (utilities$2.PRESERVE_CUSTOM_ATTRIBUTES) {
      props[attributeName] = attributeValue;
    }
  }
  utilities$2.setStyleProp(attributes.style, props);
  return props;
};
var React = react.exports;
var attributesToProps = attributesToProps$1;
var utilities$1 = utilities$3;
var setStyleProp = utilities$1.setStyleProp;
function domToReact(nodes, options) {
  options = options || {};
  var library = options.library || React;
  var cloneElement = library.cloneElement;
  var createElement = library.createElement;
  var isValidElement = library.isValidElement;
  var result = [];
  var node2;
  var hasReplace = typeof options.replace === "function";
  var replaceElement;
  var props;
  var children;
  var data;
  var trim2 = options.trim;
  for (var i = 0, len = nodes.length; i < len; i++) {
    node2 = nodes[i];
    if (hasReplace) {
      replaceElement = options.replace(node2);
      if (isValidElement(replaceElement)) {
        if (len > 1) {
          replaceElement = cloneElement(replaceElement, {
            key: replaceElement.key || i
          });
        }
        result.push(replaceElement);
        continue;
      }
    }
    if (node2.type === "text") {
      if (trim2) {
        data = node2.data.trim();
        if (data) {
          result.push(node2.data);
        }
      } else {
        result.push(node2.data);
      }
      continue;
    }
    props = node2.attribs;
    if (skipAttributesToProps(node2)) {
      setStyleProp(props.style, props);
    } else if (props) {
      props = attributesToProps(props);
    }
    children = null;
    switch (node2.type) {
      case "script":
      case "style":
        if (node2.children[0]) {
          props.dangerouslySetInnerHTML = {
            __html: node2.children[0].data
          };
        }
        break;
      case "tag":
        if (node2.name === "textarea" && node2.children[0]) {
          props.defaultValue = node2.children[0].data;
        } else if (node2.children && node2.children.length) {
          children = domToReact(node2.children, options);
        }
        break;
      default:
        continue;
    }
    if (len > 1) {
      props.key = i;
    }
    result.push(createElement(node2.name, props, children));
  }
  return result.length === 1 ? result[0] : result;
}
function skipAttributesToProps(node2) {
  return utilities$1.PRESERVE_CUSTOM_ATTRIBUTES && node2.type === "tag" && utilities$1.isCustomComponent(node2.name, node2.attribs);
}
var domToReact_1 = domToReact;
var Parser$3 = {};
var Tokenizer$1 = {};
var decode_codepoint = {};
var require$$0 = {
  "0": 65533,
  "128": 8364,
  "130": 8218,
  "131": 402,
  "132": 8222,
  "133": 8230,
  "134": 8224,
  "135": 8225,
  "136": 710,
  "137": 8240,
  "138": 352,
  "139": 8249,
  "140": 338,
  "142": 381,
  "145": 8216,
  "146": 8217,
  "147": 8220,
  "148": 8221,
  "149": 8226,
  "150": 8211,
  "151": 8212,
  "152": 732,
  "153": 8482,
  "154": 353,
  "155": 8250,
  "156": 339,
  "158": 382,
  "159": 376
};
var __importDefault$2 = commonjsGlobal$1 && commonjsGlobal$1.__importDefault || function(mod) {
  return mod && mod.__esModule ? mod : { "default": mod };
};
Object.defineProperty(decode_codepoint, "__esModule", { value: true });
var decode_json_1 = __importDefault$2(require$$0);
var fromCodePoint = String.fromCodePoint || function(codePoint) {
  var output = "";
  if (codePoint > 65535) {
    codePoint -= 65536;
    output += String.fromCharCode(codePoint >>> 10 & 1023 | 55296);
    codePoint = 56320 | codePoint & 1023;
  }
  output += String.fromCharCode(codePoint);
  return output;
};
function decodeCodePoint(codePoint) {
  if (codePoint >= 55296 && codePoint <= 57343 || codePoint > 1114111) {
    return "\uFFFD";
  }
  if (codePoint in decode_json_1.default) {
    codePoint = decode_json_1.default[codePoint];
  }
  return fromCodePoint(codePoint);
}
decode_codepoint.default = decodeCodePoint;
const Aacute$1 = "\xC1";
const aacute$1 = "\xE1";
const Abreve = "\u0102";
const abreve = "\u0103";
const ac$1 = "\u223E";
const acd = "\u223F";
const acE = "\u223E\u0333";
const Acirc$1 = "\xC2";
const acirc$1 = "\xE2";
const acute$1 = "\xB4";
const Acy = "\u0410";
const acy = "\u0430";
const AElig$1 = "\xC6";
const aelig$1 = "\xE6";
const af$1 = "\u2061";
const Afr = "\u{1D504}";
const afr = "\u{1D51E}";
const Agrave$1 = "\xC0";
const agrave$1 = "\xE0";
const alefsym = "\u2135";
const aleph = "\u2135";
const Alpha = "\u0391";
const alpha = "\u03B1";
const Amacr = "\u0100";
const amacr = "\u0101";
const amalg = "\u2A3F";
const amp$2 = "&";
const AMP$1 = "&";
const andand = "\u2A55";
const And = "\u2A53";
const and = "\u2227";
const andd = "\u2A5C";
const andslope = "\u2A58";
const andv = "\u2A5A";
const ang = "\u2220";
const ange = "\u29A4";
const angle = "\u2220";
const angmsdaa = "\u29A8";
const angmsdab = "\u29A9";
const angmsdac = "\u29AA";
const angmsdad = "\u29AB";
const angmsdae = "\u29AC";
const angmsdaf = "\u29AD";
const angmsdag = "\u29AE";
const angmsdah = "\u29AF";
const angmsd = "\u2221";
const angrt = "\u221F";
const angrtvb = "\u22BE";
const angrtvbd = "\u299D";
const angsph = "\u2222";
const angst = "\xC5";
const angzarr = "\u237C";
const Aogon = "\u0104";
const aogon = "\u0105";
const Aopf = "\u{1D538}";
const aopf = "\u{1D552}";
const apacir = "\u2A6F";
const ap = "\u2248";
const apE = "\u2A70";
const ape = "\u224A";
const apid = "\u224B";
const apos$1 = "'";
const ApplyFunction = "\u2061";
const approx = "\u2248";
const approxeq = "\u224A";
const Aring$1 = "\xC5";
const aring$1 = "\xE5";
const Ascr = "\u{1D49C}";
const ascr = "\u{1D4B6}";
const Assign = "\u2254";
const ast = "*";
const asymp = "\u2248";
const asympeq = "\u224D";
const Atilde$1 = "\xC3";
const atilde$1 = "\xE3";
const Auml$1 = "\xC4";
const auml$1 = "\xE4";
const awconint = "\u2233";
const awint = "\u2A11";
const backcong = "\u224C";
const backepsilon = "\u03F6";
const backprime = "\u2035";
const backsim = "\u223D";
const backsimeq = "\u22CD";
const Backslash = "\u2216";
const Barv = "\u2AE7";
const barvee = "\u22BD";
const barwed = "\u2305";
const Barwed = "\u2306";
const barwedge = "\u2305";
const bbrk = "\u23B5";
const bbrktbrk = "\u23B6";
const bcong = "\u224C";
const Bcy = "\u0411";
const bcy = "\u0431";
const bdquo = "\u201E";
const becaus = "\u2235";
const because = "\u2235";
const Because = "\u2235";
const bemptyv = "\u29B0";
const bepsi = "\u03F6";
const bernou = "\u212C";
const Bernoullis = "\u212C";
const Beta = "\u0392";
const beta = "\u03B2";
const beth = "\u2136";
const between = "\u226C";
const Bfr = "\u{1D505}";
const bfr = "\u{1D51F}";
const bigcap = "\u22C2";
const bigcirc = "\u25EF";
const bigcup = "\u22C3";
const bigodot = "\u2A00";
const bigoplus = "\u2A01";
const bigotimes = "\u2A02";
const bigsqcup = "\u2A06";
const bigstar = "\u2605";
const bigtriangledown = "\u25BD";
const bigtriangleup = "\u25B3";
const biguplus = "\u2A04";
const bigvee = "\u22C1";
const bigwedge = "\u22C0";
const bkarow = "\u290D";
const blacklozenge = "\u29EB";
const blacksquare = "\u25AA";
const blacktriangle = "\u25B4";
const blacktriangledown = "\u25BE";
const blacktriangleleft = "\u25C2";
const blacktriangleright = "\u25B8";
const blank = "\u2423";
const blk12 = "\u2592";
const blk14 = "\u2591";
const blk34 = "\u2593";
const block$1 = "\u2588";
const bne = "=\u20E5";
const bnequiv = "\u2261\u20E5";
const bNot = "\u2AED";
const bnot = "\u2310";
const Bopf = "\u{1D539}";
const bopf = "\u{1D553}";
const bot = "\u22A5";
const bottom = "\u22A5";
const bowtie = "\u22C8";
const boxbox = "\u29C9";
const boxdl = "\u2510";
const boxdL = "\u2555";
const boxDl = "\u2556";
const boxDL = "\u2557";
const boxdr = "\u250C";
const boxdR = "\u2552";
const boxDr = "\u2553";
const boxDR = "\u2554";
const boxh = "\u2500";
const boxH = "\u2550";
const boxhd = "\u252C";
const boxHd = "\u2564";
const boxhD = "\u2565";
const boxHD = "\u2566";
const boxhu = "\u2534";
const boxHu = "\u2567";
const boxhU = "\u2568";
const boxHU = "\u2569";
const boxminus = "\u229F";
const boxplus = "\u229E";
const boxtimes = "\u22A0";
const boxul = "\u2518";
const boxuL = "\u255B";
const boxUl = "\u255C";
const boxUL = "\u255D";
const boxur = "\u2514";
const boxuR = "\u2558";
const boxUr = "\u2559";
const boxUR = "\u255A";
const boxv = "\u2502";
const boxV = "\u2551";
const boxvh = "\u253C";
const boxvH = "\u256A";
const boxVh = "\u256B";
const boxVH = "\u256C";
const boxvl = "\u2524";
const boxvL = "\u2561";
const boxVl = "\u2562";
const boxVL = "\u2563";
const boxvr = "\u251C";
const boxvR = "\u255E";
const boxVr = "\u255F";
const boxVR = "\u2560";
const bprime = "\u2035";
const breve = "\u02D8";
const Breve = "\u02D8";
const brvbar$1 = "\xA6";
const bscr = "\u{1D4B7}";
const Bscr = "\u212C";
const bsemi = "\u204F";
const bsim = "\u223D";
const bsime = "\u22CD";
const bsolb = "\u29C5";
const bsol = "\\";
const bsolhsub = "\u27C8";
const bull = "\u2022";
const bullet = "\u2022";
const bump = "\u224E";
const bumpE = "\u2AAE";
const bumpe = "\u224F";
const Bumpeq = "\u224E";
const bumpeq = "\u224F";
const Cacute = "\u0106";
const cacute = "\u0107";
const capand = "\u2A44";
const capbrcup = "\u2A49";
const capcap = "\u2A4B";
const cap = "\u2229";
const Cap = "\u22D2";
const capcup = "\u2A47";
const capdot = "\u2A40";
const CapitalDifferentialD = "\u2145";
const caps = "\u2229\uFE00";
const caret = "\u2041";
const caron = "\u02C7";
const Cayleys = "\u212D";
const ccaps = "\u2A4D";
const Ccaron = "\u010C";
const ccaron = "\u010D";
const Ccedil$1 = "\xC7";
const ccedil$1 = "\xE7";
const Ccirc = "\u0108";
const ccirc = "\u0109";
const Cconint = "\u2230";
const ccups = "\u2A4C";
const ccupssm = "\u2A50";
const Cdot = "\u010A";
const cdot = "\u010B";
const cedil$1 = "\xB8";
const Cedilla = "\xB8";
const cemptyv = "\u29B2";
const cent$1 = "\xA2";
const centerdot = "\xB7";
const CenterDot = "\xB7";
const cfr = "\u{1D520}";
const Cfr = "\u212D";
const CHcy = "\u0427";
const chcy = "\u0447";
const check = "\u2713";
const checkmark = "\u2713";
const Chi = "\u03A7";
const chi = "\u03C7";
const circ = "\u02C6";
const circeq = "\u2257";
const circlearrowleft = "\u21BA";
const circlearrowright = "\u21BB";
const circledast = "\u229B";
const circledcirc = "\u229A";
const circleddash = "\u229D";
const CircleDot = "\u2299";
const circledR = "\xAE";
const circledS = "\u24C8";
const CircleMinus = "\u2296";
const CirclePlus = "\u2295";
const CircleTimes = "\u2297";
const cir = "\u25CB";
const cirE = "\u29C3";
const cire = "\u2257";
const cirfnint = "\u2A10";
const cirmid = "\u2AEF";
const cirscir = "\u29C2";
const ClockwiseContourIntegral = "\u2232";
const CloseCurlyDoubleQuote = "\u201D";
const CloseCurlyQuote = "\u2019";
const clubs = "\u2663";
const clubsuit = "\u2663";
const colon = ":";
const Colon = "\u2237";
const Colone = "\u2A74";
const colone = "\u2254";
const coloneq = "\u2254";
const comma = ",";
const commat = "@";
const comp = "\u2201";
const compfn = "\u2218";
const complement = "\u2201";
const complexes = "\u2102";
const cong = "\u2245";
const congdot = "\u2A6D";
const Congruent = "\u2261";
const conint = "\u222E";
const Conint = "\u222F";
const ContourIntegral = "\u222E";
const copf = "\u{1D554}";
const Copf = "\u2102";
const coprod = "\u2210";
const Coproduct = "\u2210";
const copy$1 = "\xA9";
const COPY$1 = "\xA9";
const copysr = "\u2117";
const CounterClockwiseContourIntegral = "\u2233";
const crarr = "\u21B5";
const cross = "\u2717";
const Cross = "\u2A2F";
const Cscr = "\u{1D49E}";
const cscr = "\u{1D4B8}";
const csub = "\u2ACF";
const csube = "\u2AD1";
const csup = "\u2AD0";
const csupe = "\u2AD2";
const ctdot = "\u22EF";
const cudarrl = "\u2938";
const cudarrr = "\u2935";
const cuepr = "\u22DE";
const cuesc = "\u22DF";
const cularr = "\u21B6";
const cularrp = "\u293D";
const cupbrcap = "\u2A48";
const cupcap = "\u2A46";
const CupCap = "\u224D";
const cup = "\u222A";
const Cup = "\u22D3";
const cupcup = "\u2A4A";
const cupdot = "\u228D";
const cupor = "\u2A45";
const cups = "\u222A\uFE00";
const curarr = "\u21B7";
const curarrm = "\u293C";
const curlyeqprec = "\u22DE";
const curlyeqsucc = "\u22DF";
const curlyvee = "\u22CE";
const curlywedge = "\u22CF";
const curren$1 = "\xA4";
const curvearrowleft = "\u21B6";
const curvearrowright = "\u21B7";
const cuvee = "\u22CE";
const cuwed = "\u22CF";
const cwconint = "\u2232";
const cwint = "\u2231";
const cylcty = "\u232D";
const dagger = "\u2020";
const Dagger = "\u2021";
const daleth = "\u2138";
const darr = "\u2193";
const Darr = "\u21A1";
const dArr = "\u21D3";
const dash = "\u2010";
const Dashv = "\u2AE4";
const dashv = "\u22A3";
const dbkarow = "\u290F";
const dblac = "\u02DD";
const Dcaron = "\u010E";
const dcaron = "\u010F";
const Dcy = "\u0414";
const dcy = "\u0434";
const ddagger = "\u2021";
const ddarr = "\u21CA";
const DD = "\u2145";
const dd$1 = "\u2146";
const DDotrahd = "\u2911";
const ddotseq = "\u2A77";
const deg$1 = "\xB0";
const Del = "\u2207";
const Delta = "\u0394";
const delta = "\u03B4";
const demptyv = "\u29B1";
const dfisht = "\u297F";
const Dfr = "\u{1D507}";
const dfr = "\u{1D521}";
const dHar = "\u2965";
const dharl = "\u21C3";
const dharr = "\u21C2";
const DiacriticalAcute = "\xB4";
const DiacriticalDot = "\u02D9";
const DiacriticalDoubleAcute = "\u02DD";
const DiacriticalGrave = "`";
const DiacriticalTilde = "\u02DC";
const diam = "\u22C4";
const diamond = "\u22C4";
const Diamond = "\u22C4";
const diamondsuit = "\u2666";
const diams = "\u2666";
const die = "\xA8";
const DifferentialD = "\u2146";
const digamma = "\u03DD";
const disin = "\u22F2";
const div = "\xF7";
const divide$1 = "\xF7";
const divideontimes = "\u22C7";
const divonx = "\u22C7";
const DJcy = "\u0402";
const djcy = "\u0452";
const dlcorn = "\u231E";
const dlcrop = "\u230D";
const dollar = "$";
const Dopf = "\u{1D53B}";
const dopf = "\u{1D555}";
const Dot = "\xA8";
const dot = "\u02D9";
const DotDot = "\u20DC";
const doteq = "\u2250";
const doteqdot = "\u2251";
const DotEqual = "\u2250";
const dotminus = "\u2238";
const dotplus = "\u2214";
const dotsquare = "\u22A1";
const doublebarwedge = "\u2306";
const DoubleContourIntegral = "\u222F";
const DoubleDot = "\xA8";
const DoubleDownArrow = "\u21D3";
const DoubleLeftArrow = "\u21D0";
const DoubleLeftRightArrow = "\u21D4";
const DoubleLeftTee = "\u2AE4";
const DoubleLongLeftArrow = "\u27F8";
const DoubleLongLeftRightArrow = "\u27FA";
const DoubleLongRightArrow = "\u27F9";
const DoubleRightArrow = "\u21D2";
const DoubleRightTee = "\u22A8";
const DoubleUpArrow = "\u21D1";
const DoubleUpDownArrow = "\u21D5";
const DoubleVerticalBar = "\u2225";
const DownArrowBar = "\u2913";
const downarrow = "\u2193";
const DownArrow = "\u2193";
const Downarrow = "\u21D3";
const DownArrowUpArrow = "\u21F5";
const DownBreve = "\u0311";
const downdownarrows = "\u21CA";
const downharpoonleft = "\u21C3";
const downharpoonright = "\u21C2";
const DownLeftRightVector = "\u2950";
const DownLeftTeeVector = "\u295E";
const DownLeftVectorBar = "\u2956";
const DownLeftVector = "\u21BD";
const DownRightTeeVector = "\u295F";
const DownRightVectorBar = "\u2957";
const DownRightVector = "\u21C1";
const DownTeeArrow = "\u21A7";
const DownTee = "\u22A4";
const drbkarow = "\u2910";
const drcorn = "\u231F";
const drcrop = "\u230C";
const Dscr = "\u{1D49F}";
const dscr = "\u{1D4B9}";
const DScy = "\u0405";
const dscy = "\u0455";
const dsol = "\u29F6";
const Dstrok = "\u0110";
const dstrok = "\u0111";
const dtdot = "\u22F1";
const dtri = "\u25BF";
const dtrif = "\u25BE";
const duarr = "\u21F5";
const duhar = "\u296F";
const dwangle = "\u29A6";
const DZcy = "\u040F";
const dzcy = "\u045F";
const dzigrarr = "\u27FF";
const Eacute$1 = "\xC9";
const eacute$1 = "\xE9";
const easter = "\u2A6E";
const Ecaron = "\u011A";
const ecaron = "\u011B";
const Ecirc$1 = "\xCA";
const ecirc$1 = "\xEA";
const ecir = "\u2256";
const ecolon = "\u2255";
const Ecy = "\u042D";
const ecy = "\u044D";
const eDDot = "\u2A77";
const Edot = "\u0116";
const edot = "\u0117";
const eDot = "\u2251";
const ee$1 = "\u2147";
const efDot = "\u2252";
const Efr = "\u{1D508}";
const efr = "\u{1D522}";
const eg$1 = "\u2A9A";
const Egrave$1 = "\xC8";
const egrave$1 = "\xE8";
const egs = "\u2A96";
const egsdot = "\u2A98";
const el = "\u2A99";
const Element$2 = "\u2208";
const elinters = "\u23E7";
const ell = "\u2113";
const els = "\u2A95";
const elsdot = "\u2A97";
const Emacr = "\u0112";
const emacr = "\u0113";
const empty = "\u2205";
const emptyset = "\u2205";
const EmptySmallSquare = "\u25FB";
const emptyv = "\u2205";
const EmptyVerySmallSquare = "\u25AB";
const emsp13 = "\u2004";
const emsp14 = "\u2005";
const emsp = "\u2003";
const ENG = "\u014A";
const eng = "\u014B";
const ensp = "\u2002";
const Eogon = "\u0118";
const eogon = "\u0119";
const Eopf = "\u{1D53C}";
const eopf = "\u{1D556}";
const epar = "\u22D5";
const eparsl = "\u29E3";
const eplus = "\u2A71";
const epsi = "\u03B5";
const Epsilon = "\u0395";
const epsilon = "\u03B5";
const epsiv = "\u03F5";
const eqcirc = "\u2256";
const eqcolon = "\u2255";
const eqsim = "\u2242";
const eqslantgtr = "\u2A96";
const eqslantless = "\u2A95";
const Equal = "\u2A75";
const equals = "=";
const EqualTilde = "\u2242";
const equest = "\u225F";
const Equilibrium = "\u21CC";
const equiv = "\u2261";
const equivDD = "\u2A78";
const eqvparsl = "\u29E5";
const erarr = "\u2971";
const erDot = "\u2253";
const escr = "\u212F";
const Escr = "\u2130";
const esdot = "\u2250";
const Esim = "\u2A73";
const esim = "\u2242";
const Eta = "\u0397";
const eta = "\u03B7";
const ETH$1 = "\xD0";
const eth$1 = "\xF0";
const Euml$1 = "\xCB";
const euml$1 = "\xEB";
const euro = "\u20AC";
const excl = "!";
const exist = "\u2203";
const Exists = "\u2203";
const expectation = "\u2130";
const exponentiale = "\u2147";
const ExponentialE = "\u2147";
const fallingdotseq = "\u2252";
const Fcy = "\u0424";
const fcy = "\u0444";
const female = "\u2640";
const ffilig = "\uFB03";
const fflig = "\uFB00";
const ffllig = "\uFB04";
const Ffr = "\u{1D509}";
const ffr = "\u{1D523}";
const filig = "\uFB01";
const FilledSmallSquare = "\u25FC";
const FilledVerySmallSquare = "\u25AA";
const fjlig = "fj";
const flat = "\u266D";
const fllig = "\uFB02";
const fltns = "\u25B1";
const fnof = "\u0192";
const Fopf = "\u{1D53D}";
const fopf = "\u{1D557}";
const forall = "\u2200";
const ForAll = "\u2200";
const fork = "\u22D4";
const forkv = "\u2AD9";
const Fouriertrf = "\u2131";
const fpartint = "\u2A0D";
const frac12$1 = "\xBD";
const frac13 = "\u2153";
const frac14$1 = "\xBC";
const frac15 = "\u2155";
const frac16 = "\u2159";
const frac18 = "\u215B";
const frac23 = "\u2154";
const frac25 = "\u2156";
const frac34$1 = "\xBE";
const frac35 = "\u2157";
const frac38 = "\u215C";
const frac45 = "\u2158";
const frac56 = "\u215A";
const frac58 = "\u215D";
const frac78 = "\u215E";
const frasl = "\u2044";
const frown = "\u2322";
const fscr = "\u{1D4BB}";
const Fscr = "\u2131";
const gacute = "\u01F5";
const Gamma = "\u0393";
const gamma = "\u03B3";
const Gammad = "\u03DC";
const gammad = "\u03DD";
const gap = "\u2A86";
const Gbreve = "\u011E";
const gbreve = "\u011F";
const Gcedil = "\u0122";
const Gcirc = "\u011C";
const gcirc = "\u011D";
const Gcy = "\u0413";
const gcy = "\u0433";
const Gdot = "\u0120";
const gdot = "\u0121";
const ge$1 = "\u2265";
const gE = "\u2267";
const gEl = "\u2A8C";
const gel = "\u22DB";
const geq = "\u2265";
const geqq = "\u2267";
const geqslant = "\u2A7E";
const gescc = "\u2AA9";
const ges = "\u2A7E";
const gesdot = "\u2A80";
const gesdoto = "\u2A82";
const gesdotol = "\u2A84";
const gesl = "\u22DB\uFE00";
const gesles = "\u2A94";
const Gfr = "\u{1D50A}";
const gfr = "\u{1D524}";
const gg$1 = "\u226B";
const Gg$1 = "\u22D9";
const ggg = "\u22D9";
const gimel = "\u2137";
const GJcy = "\u0403";
const gjcy = "\u0453";
const gla = "\u2AA5";
const gl = "\u2277";
const glE = "\u2A92";
const glj = "\u2AA4";
const gnap = "\u2A8A";
const gnapprox = "\u2A8A";
const gne = "\u2A88";
const gnE = "\u2269";
const gneq = "\u2A88";
const gneqq = "\u2269";
const gnsim = "\u22E7";
const Gopf = "\u{1D53E}";
const gopf = "\u{1D558}";
const grave = "`";
const GreaterEqual = "\u2265";
const GreaterEqualLess = "\u22DB";
const GreaterFullEqual = "\u2267";
const GreaterGreater = "\u2AA2";
const GreaterLess = "\u2277";
const GreaterSlantEqual = "\u2A7E";
const GreaterTilde = "\u2273";
const Gscr = "\u{1D4A2}";
const gscr = "\u210A";
const gsim = "\u2273";
const gsime = "\u2A8E";
const gsiml = "\u2A90";
const gtcc = "\u2AA7";
const gtcir = "\u2A7A";
const gt$2 = ">";
const GT$1 = ">";
const Gt = "\u226B";
const gtdot = "\u22D7";
const gtlPar = "\u2995";
const gtquest = "\u2A7C";
const gtrapprox = "\u2A86";
const gtrarr = "\u2978";
const gtrdot = "\u22D7";
const gtreqless = "\u22DB";
const gtreqqless = "\u2A8C";
const gtrless = "\u2277";
const gtrsim = "\u2273";
const gvertneqq = "\u2269\uFE00";
const gvnE = "\u2269\uFE00";
const Hacek = "\u02C7";
const hairsp = "\u200A";
const half = "\xBD";
const hamilt = "\u210B";
const HARDcy = "\u042A";
const hardcy = "\u044A";
const harrcir = "\u2948";
const harr = "\u2194";
const hArr = "\u21D4";
const harrw = "\u21AD";
const Hat = "^";
const hbar = "\u210F";
const Hcirc = "\u0124";
const hcirc = "\u0125";
const hearts = "\u2665";
const heartsuit = "\u2665";
const hellip = "\u2026";
const hercon = "\u22B9";
const hfr = "\u{1D525}";
const Hfr = "\u210C";
const HilbertSpace = "\u210B";
const hksearow = "\u2925";
const hkswarow = "\u2926";
const hoarr = "\u21FF";
const homtht = "\u223B";
const hookleftarrow = "\u21A9";
const hookrightarrow = "\u21AA";
const hopf = "\u{1D559}";
const Hopf = "\u210D";
const horbar = "\u2015";
const HorizontalLine = "\u2500";
const hscr = "\u{1D4BD}";
const Hscr = "\u210B";
const hslash = "\u210F";
const Hstrok = "\u0126";
const hstrok = "\u0127";
const HumpDownHump = "\u224E";
const HumpEqual = "\u224F";
const hybull = "\u2043";
const hyphen = "\u2010";
const Iacute$1 = "\xCD";
const iacute$1 = "\xED";
const ic$1 = "\u2063";
const Icirc$1 = "\xCE";
const icirc$1 = "\xEE";
const Icy = "\u0418";
const icy = "\u0438";
const Idot = "\u0130";
const IEcy = "\u0415";
const iecy = "\u0435";
const iexcl$1 = "\xA1";
const iff = "\u21D4";
const ifr = "\u{1D526}";
const Ifr = "\u2111";
const Igrave$1 = "\xCC";
const igrave$1 = "\xEC";
const ii$1 = "\u2148";
const iiiint = "\u2A0C";
const iiint = "\u222D";
const iinfin = "\u29DC";
const iiota = "\u2129";
const IJlig = "\u0132";
const ijlig = "\u0133";
const Imacr = "\u012A";
const imacr = "\u012B";
const image = "\u2111";
const ImaginaryI = "\u2148";
const imagline = "\u2110";
const imagpart = "\u2111";
const imath = "\u0131";
const Im = "\u2111";
const imof = "\u22B7";
const imped = "\u01B5";
const Implies = "\u21D2";
const incare = "\u2105";
const infin = "\u221E";
const infintie = "\u29DD";
const inodot = "\u0131";
const intcal = "\u22BA";
const int = "\u222B";
const Int = "\u222C";
const integers = "\u2124";
const Integral = "\u222B";
const intercal = "\u22BA";
const Intersection = "\u22C2";
const intlarhk = "\u2A17";
const intprod = "\u2A3C";
const InvisibleComma = "\u2063";
const InvisibleTimes = "\u2062";
const IOcy = "\u0401";
const iocy = "\u0451";
const Iogon = "\u012E";
const iogon = "\u012F";
const Iopf = "\u{1D540}";
const iopf = "\u{1D55A}";
const Iota = "\u0399";
const iota = "\u03B9";
const iprod = "\u2A3C";
const iquest$1 = "\xBF";
const iscr = "\u{1D4BE}";
const Iscr = "\u2110";
const isin = "\u2208";
const isindot = "\u22F5";
const isinE = "\u22F9";
const isins = "\u22F4";
const isinsv = "\u22F3";
const isinv = "\u2208";
const it = "\u2062";
const Itilde = "\u0128";
const itilde = "\u0129";
const Iukcy = "\u0406";
const iukcy = "\u0456";
const Iuml$1 = "\xCF";
const iuml$1 = "\xEF";
const Jcirc = "\u0134";
const jcirc = "\u0135";
const Jcy = "\u0419";
const jcy = "\u0439";
const Jfr = "\u{1D50D}";
const jfr = "\u{1D527}";
const jmath = "\u0237";
const Jopf = "\u{1D541}";
const jopf = "\u{1D55B}";
const Jscr = "\u{1D4A5}";
const jscr = "\u{1D4BF}";
const Jsercy = "\u0408";
const jsercy = "\u0458";
const Jukcy = "\u0404";
const jukcy = "\u0454";
const Kappa = "\u039A";
const kappa = "\u03BA";
const kappav = "\u03F0";
const Kcedil = "\u0136";
const kcedil = "\u0137";
const Kcy = "\u041A";
const kcy = "\u043A";
const Kfr = "\u{1D50E}";
const kfr = "\u{1D528}";
const kgreen = "\u0138";
const KHcy = "\u0425";
const khcy = "\u0445";
const KJcy = "\u040C";
const kjcy = "\u045C";
const Kopf = "\u{1D542}";
const kopf = "\u{1D55C}";
const Kscr = "\u{1D4A6}";
const kscr = "\u{1D4C0}";
const lAarr = "\u21DA";
const Lacute = "\u0139";
const lacute = "\u013A";
const laemptyv = "\u29B4";
const lagran = "\u2112";
const Lambda = "\u039B";
const lambda = "\u03BB";
const lang = "\u27E8";
const Lang = "\u27EA";
const langd = "\u2991";
const langle = "\u27E8";
const lap = "\u2A85";
const Laplacetrf = "\u2112";
const laquo$1 = "\xAB";
const larrb = "\u21E4";
const larrbfs = "\u291F";
const larr = "\u2190";
const Larr = "\u219E";
const lArr = "\u21D0";
const larrfs = "\u291D";
const larrhk = "\u21A9";
const larrlp = "\u21AB";
const larrpl = "\u2939";
const larrsim = "\u2973";
const larrtl = "\u21A2";
const latail = "\u2919";
const lAtail = "\u291B";
const lat = "\u2AAB";
const late = "\u2AAD";
const lates = "\u2AAD\uFE00";
const lbarr = "\u290C";
const lBarr = "\u290E";
const lbbrk = "\u2772";
const lbrace = "{";
const lbrack = "[";
const lbrke = "\u298B";
const lbrksld = "\u298F";
const lbrkslu = "\u298D";
const Lcaron = "\u013D";
const lcaron = "\u013E";
const Lcedil = "\u013B";
const lcedil = "\u013C";
const lceil = "\u2308";
const lcub = "{";
const Lcy = "\u041B";
const lcy = "\u043B";
const ldca = "\u2936";
const ldquo = "\u201C";
const ldquor = "\u201E";
const ldrdhar = "\u2967";
const ldrushar = "\u294B";
const ldsh = "\u21B2";
const le$1 = "\u2264";
const lE = "\u2266";
const LeftAngleBracket = "\u27E8";
const LeftArrowBar = "\u21E4";
const leftarrow = "\u2190";
const LeftArrow = "\u2190";
const Leftarrow = "\u21D0";
const LeftArrowRightArrow = "\u21C6";
const leftarrowtail = "\u21A2";
const LeftCeiling = "\u2308";
const LeftDoubleBracket = "\u27E6";
const LeftDownTeeVector = "\u2961";
const LeftDownVectorBar = "\u2959";
const LeftDownVector = "\u21C3";
const LeftFloor = "\u230A";
const leftharpoondown = "\u21BD";
const leftharpoonup = "\u21BC";
const leftleftarrows = "\u21C7";
const leftrightarrow = "\u2194";
const LeftRightArrow = "\u2194";
const Leftrightarrow = "\u21D4";
const leftrightarrows = "\u21C6";
const leftrightharpoons = "\u21CB";
const leftrightsquigarrow = "\u21AD";
const LeftRightVector = "\u294E";
const LeftTeeArrow = "\u21A4";
const LeftTee = "\u22A3";
const LeftTeeVector = "\u295A";
const leftthreetimes = "\u22CB";
const LeftTriangleBar = "\u29CF";
const LeftTriangle = "\u22B2";
const LeftTriangleEqual = "\u22B4";
const LeftUpDownVector = "\u2951";
const LeftUpTeeVector = "\u2960";
const LeftUpVectorBar = "\u2958";
const LeftUpVector = "\u21BF";
const LeftVectorBar = "\u2952";
const LeftVector = "\u21BC";
const lEg = "\u2A8B";
const leg = "\u22DA";
const leq = "\u2264";
const leqq = "\u2266";
const leqslant = "\u2A7D";
const lescc = "\u2AA8";
const les = "\u2A7D";
const lesdot = "\u2A7F";
const lesdoto = "\u2A81";
const lesdotor = "\u2A83";
const lesg = "\u22DA\uFE00";
const lesges = "\u2A93";
const lessapprox = "\u2A85";
const lessdot = "\u22D6";
const lesseqgtr = "\u22DA";
const lesseqqgtr = "\u2A8B";
const LessEqualGreater = "\u22DA";
const LessFullEqual = "\u2266";
const LessGreater = "\u2276";
const lessgtr = "\u2276";
const LessLess = "\u2AA1";
const lesssim = "\u2272";
const LessSlantEqual = "\u2A7D";
const LessTilde = "\u2272";
const lfisht = "\u297C";
const lfloor = "\u230A";
const Lfr = "\u{1D50F}";
const lfr = "\u{1D529}";
const lg$1 = "\u2276";
const lgE = "\u2A91";
const lHar = "\u2962";
const lhard = "\u21BD";
const lharu = "\u21BC";
const lharul = "\u296A";
const lhblk = "\u2584";
const LJcy = "\u0409";
const ljcy = "\u0459";
const llarr = "\u21C7";
const ll = "\u226A";
const Ll = "\u22D8";
const llcorner = "\u231E";
const Lleftarrow = "\u21DA";
const llhard = "\u296B";
const lltri = "\u25FA";
const Lmidot = "\u013F";
const lmidot = "\u0140";
const lmoustache = "\u23B0";
const lmoust = "\u23B0";
const lnap = "\u2A89";
const lnapprox = "\u2A89";
const lne = "\u2A87";
const lnE = "\u2268";
const lneq = "\u2A87";
const lneqq = "\u2268";
const lnsim = "\u22E6";
const loang = "\u27EC";
const loarr = "\u21FD";
const lobrk = "\u27E6";
const longleftarrow = "\u27F5";
const LongLeftArrow = "\u27F5";
const Longleftarrow = "\u27F8";
const longleftrightarrow = "\u27F7";
const LongLeftRightArrow = "\u27F7";
const Longleftrightarrow = "\u27FA";
const longmapsto = "\u27FC";
const longrightarrow = "\u27F6";
const LongRightArrow = "\u27F6";
const Longrightarrow = "\u27F9";
const looparrowleft = "\u21AB";
const looparrowright = "\u21AC";
const lopar = "\u2985";
const Lopf = "\u{1D543}";
const lopf = "\u{1D55D}";
const loplus = "\u2A2D";
const lotimes = "\u2A34";
const lowast = "\u2217";
const lowbar = "_";
const LowerLeftArrow = "\u2199";
const LowerRightArrow = "\u2198";
const loz = "\u25CA";
const lozenge = "\u25CA";
const lozf = "\u29EB";
const lpar = "(";
const lparlt = "\u2993";
const lrarr = "\u21C6";
const lrcorner = "\u231F";
const lrhar = "\u21CB";
const lrhard = "\u296D";
const lrm = "\u200E";
const lrtri = "\u22BF";
const lsaquo = "\u2039";
const lscr = "\u{1D4C1}";
const Lscr = "\u2112";
const lsh = "\u21B0";
const Lsh = "\u21B0";
const lsim = "\u2272";
const lsime = "\u2A8D";
const lsimg = "\u2A8F";
const lsqb = "[";
const lsquo = "\u2018";
const lsquor = "\u201A";
const Lstrok = "\u0141";
const lstrok = "\u0142";
const ltcc = "\u2AA6";
const ltcir = "\u2A79";
const lt$2 = "<";
const LT$1 = "<";
const Lt = "\u226A";
const ltdot = "\u22D6";
const lthree = "\u22CB";
const ltimes = "\u22C9";
const ltlarr = "\u2976";
const ltquest = "\u2A7B";
const ltri = "\u25C3";
const ltrie = "\u22B4";
const ltrif = "\u25C2";
const ltrPar = "\u2996";
const lurdshar = "\u294A";
const luruhar = "\u2966";
const lvertneqq = "\u2268\uFE00";
const lvnE = "\u2268\uFE00";
const macr$1 = "\xAF";
const male = "\u2642";
const malt = "\u2720";
const maltese = "\u2720";
const map = "\u21A6";
const mapsto = "\u21A6";
const mapstodown = "\u21A7";
const mapstoleft = "\u21A4";
const mapstoup = "\u21A5";
const marker = "\u25AE";
const mcomma = "\u2A29";
const Mcy = "\u041C";
const mcy = "\u043C";
const mdash = "\u2014";
const mDDot = "\u223A";
const measuredangle = "\u2221";
const MediumSpace = "\u205F";
const Mellintrf = "\u2133";
const Mfr = "\u{1D510}";
const mfr = "\u{1D52A}";
const mho = "\u2127";
const micro$1 = "\xB5";
const midast = "*";
const midcir = "\u2AF0";
const mid = "\u2223";
const middot$1 = "\xB7";
const minusb = "\u229F";
const minus = "\u2212";
const minusd = "\u2238";
const minusdu = "\u2A2A";
const MinusPlus = "\u2213";
const mlcp = "\u2ADB";
const mldr = "\u2026";
const mnplus = "\u2213";
const models = "\u22A7";
const Mopf = "\u{1D544}";
const mopf = "\u{1D55E}";
const mp = "\u2213";
const mscr = "\u{1D4C2}";
const Mscr = "\u2133";
const mstpos = "\u223E";
const Mu = "\u039C";
const mu = "\u03BC";
const multimap = "\u22B8";
const mumap = "\u22B8";
const nabla = "\u2207";
const Nacute = "\u0143";
const nacute = "\u0144";
const nang = "\u2220\u20D2";
const nap = "\u2249";
const napE = "\u2A70\u0338";
const napid = "\u224B\u0338";
const napos = "\u0149";
const napprox = "\u2249";
const natural = "\u266E";
const naturals = "\u2115";
const natur = "\u266E";
const nbsp$1 = "\xA0";
const nbump = "\u224E\u0338";
const nbumpe = "\u224F\u0338";
const ncap = "\u2A43";
const Ncaron = "\u0147";
const ncaron = "\u0148";
const Ncedil = "\u0145";
const ncedil = "\u0146";
const ncong = "\u2247";
const ncongdot = "\u2A6D\u0338";
const ncup = "\u2A42";
const Ncy = "\u041D";
const ncy = "\u043D";
const ndash = "\u2013";
const nearhk = "\u2924";
const nearr = "\u2197";
const neArr = "\u21D7";
const nearrow = "\u2197";
const ne$1 = "\u2260";
const nedot = "\u2250\u0338";
const NegativeMediumSpace = "\u200B";
const NegativeThickSpace = "\u200B";
const NegativeThinSpace = "\u200B";
const NegativeVeryThinSpace = "\u200B";
const nequiv = "\u2262";
const nesear = "\u2928";
const nesim = "\u2242\u0338";
const NestedGreaterGreater = "\u226B";
const NestedLessLess = "\u226A";
const NewLine = "\n";
const nexist = "\u2204";
const nexists = "\u2204";
const Nfr = "\u{1D511}";
const nfr = "\u{1D52B}";
const ngE = "\u2267\u0338";
const nge = "\u2271";
const ngeq = "\u2271";
const ngeqq = "\u2267\u0338";
const ngeqslant = "\u2A7E\u0338";
const nges = "\u2A7E\u0338";
const nGg = "\u22D9\u0338";
const ngsim = "\u2275";
const nGt = "\u226B\u20D2";
const ngt = "\u226F";
const ngtr = "\u226F";
const nGtv = "\u226B\u0338";
const nharr = "\u21AE";
const nhArr = "\u21CE";
const nhpar = "\u2AF2";
const ni$1 = "\u220B";
const nis = "\u22FC";
const nisd = "\u22FA";
const niv = "\u220B";
const NJcy = "\u040A";
const njcy = "\u045A";
const nlarr = "\u219A";
const nlArr = "\u21CD";
const nldr = "\u2025";
const nlE = "\u2266\u0338";
const nle = "\u2270";
const nleftarrow = "\u219A";
const nLeftarrow = "\u21CD";
const nleftrightarrow = "\u21AE";
const nLeftrightarrow = "\u21CE";
const nleq = "\u2270";
const nleqq = "\u2266\u0338";
const nleqslant = "\u2A7D\u0338";
const nles = "\u2A7D\u0338";
const nless = "\u226E";
const nLl = "\u22D8\u0338";
const nlsim = "\u2274";
const nLt = "\u226A\u20D2";
const nlt = "\u226E";
const nltri = "\u22EA";
const nltrie = "\u22EC";
const nLtv = "\u226A\u0338";
const nmid = "\u2224";
const NoBreak = "\u2060";
const NonBreakingSpace = "\xA0";
const nopf = "\u{1D55F}";
const Nopf = "\u2115";
const Not = "\u2AEC";
const not$1 = "\xAC";
const NotCongruent = "\u2262";
const NotCupCap = "\u226D";
const NotDoubleVerticalBar = "\u2226";
const NotElement = "\u2209";
const NotEqual = "\u2260";
const NotEqualTilde = "\u2242\u0338";
const NotExists = "\u2204";
const NotGreater = "\u226F";
const NotGreaterEqual = "\u2271";
const NotGreaterFullEqual = "\u2267\u0338";
const NotGreaterGreater = "\u226B\u0338";
const NotGreaterLess = "\u2279";
const NotGreaterSlantEqual = "\u2A7E\u0338";
const NotGreaterTilde = "\u2275";
const NotHumpDownHump = "\u224E\u0338";
const NotHumpEqual = "\u224F\u0338";
const notin = "\u2209";
const notindot = "\u22F5\u0338";
const notinE = "\u22F9\u0338";
const notinva = "\u2209";
const notinvb = "\u22F7";
const notinvc = "\u22F6";
const NotLeftTriangleBar = "\u29CF\u0338";
const NotLeftTriangle = "\u22EA";
const NotLeftTriangleEqual = "\u22EC";
const NotLess = "\u226E";
const NotLessEqual = "\u2270";
const NotLessGreater = "\u2278";
const NotLessLess = "\u226A\u0338";
const NotLessSlantEqual = "\u2A7D\u0338";
const NotLessTilde = "\u2274";
const NotNestedGreaterGreater = "\u2AA2\u0338";
const NotNestedLessLess = "\u2AA1\u0338";
const notni = "\u220C";
const notniva = "\u220C";
const notnivb = "\u22FE";
const notnivc = "\u22FD";
const NotPrecedes = "\u2280";
const NotPrecedesEqual = "\u2AAF\u0338";
const NotPrecedesSlantEqual = "\u22E0";
const NotReverseElement = "\u220C";
const NotRightTriangleBar = "\u29D0\u0338";
const NotRightTriangle = "\u22EB";
const NotRightTriangleEqual = "\u22ED";
const NotSquareSubset = "\u228F\u0338";
const NotSquareSubsetEqual = "\u22E2";
const NotSquareSuperset = "\u2290\u0338";
const NotSquareSupersetEqual = "\u22E3";
const NotSubset = "\u2282\u20D2";
const NotSubsetEqual = "\u2288";
const NotSucceeds = "\u2281";
const NotSucceedsEqual = "\u2AB0\u0338";
const NotSucceedsSlantEqual = "\u22E1";
const NotSucceedsTilde = "\u227F\u0338";
const NotSuperset = "\u2283\u20D2";
const NotSupersetEqual = "\u2289";
const NotTilde = "\u2241";
const NotTildeEqual = "\u2244";
const NotTildeFullEqual = "\u2247";
const NotTildeTilde = "\u2249";
const NotVerticalBar = "\u2224";
const nparallel = "\u2226";
const npar = "\u2226";
const nparsl = "\u2AFD\u20E5";
const npart = "\u2202\u0338";
const npolint = "\u2A14";
const npr = "\u2280";
const nprcue = "\u22E0";
const nprec = "\u2280";
const npreceq = "\u2AAF\u0338";
const npre = "\u2AAF\u0338";
const nrarrc = "\u2933\u0338";
const nrarr = "\u219B";
const nrArr = "\u21CF";
const nrarrw = "\u219D\u0338";
const nrightarrow = "\u219B";
const nRightarrow = "\u21CF";
const nrtri = "\u22EB";
const nrtrie = "\u22ED";
const nsc = "\u2281";
const nsccue = "\u22E1";
const nsce = "\u2AB0\u0338";
const Nscr = "\u{1D4A9}";
const nscr = "\u{1D4C3}";
const nshortmid = "\u2224";
const nshortparallel = "\u2226";
const nsim = "\u2241";
const nsime = "\u2244";
const nsimeq = "\u2244";
const nsmid = "\u2224";
const nspar = "\u2226";
const nsqsube = "\u22E2";
const nsqsupe = "\u22E3";
const nsub = "\u2284";
const nsubE = "\u2AC5\u0338";
const nsube = "\u2288";
const nsubset = "\u2282\u20D2";
const nsubseteq = "\u2288";
const nsubseteqq = "\u2AC5\u0338";
const nsucc = "\u2281";
const nsucceq = "\u2AB0\u0338";
const nsup = "\u2285";
const nsupE = "\u2AC6\u0338";
const nsupe = "\u2289";
const nsupset = "\u2283\u20D2";
const nsupseteq = "\u2289";
const nsupseteqq = "\u2AC6\u0338";
const ntgl = "\u2279";
const Ntilde$1 = "\xD1";
const ntilde$1 = "\xF1";
const ntlg = "\u2278";
const ntriangleleft = "\u22EA";
const ntrianglelefteq = "\u22EC";
const ntriangleright = "\u22EB";
const ntrianglerighteq = "\u22ED";
const Nu = "\u039D";
const nu = "\u03BD";
const num = "#";
const numero = "\u2116";
const numsp = "\u2007";
const nvap = "\u224D\u20D2";
const nvdash = "\u22AC";
const nvDash = "\u22AD";
const nVdash = "\u22AE";
const nVDash = "\u22AF";
const nvge = "\u2265\u20D2";
const nvgt = ">\u20D2";
const nvHarr = "\u2904";
const nvinfin = "\u29DE";
const nvlArr = "\u2902";
const nvle = "\u2264\u20D2";
const nvlt = "<\u20D2";
const nvltrie = "\u22B4\u20D2";
const nvrArr = "\u2903";
const nvrtrie = "\u22B5\u20D2";
const nvsim = "\u223C\u20D2";
const nwarhk = "\u2923";
const nwarr = "\u2196";
const nwArr = "\u21D6";
const nwarrow = "\u2196";
const nwnear = "\u2927";
const Oacute$1 = "\xD3";
const oacute$1 = "\xF3";
const oast = "\u229B";
const Ocirc$1 = "\xD4";
const ocirc$1 = "\xF4";
const ocir = "\u229A";
const Ocy = "\u041E";
const ocy = "\u043E";
const odash = "\u229D";
const Odblac = "\u0150";
const odblac = "\u0151";
const odiv = "\u2A38";
const odot = "\u2299";
const odsold = "\u29BC";
const OElig = "\u0152";
const oelig = "\u0153";
const ofcir = "\u29BF";
const Ofr = "\u{1D512}";
const ofr = "\u{1D52C}";
const ogon = "\u02DB";
const Ograve$1 = "\xD2";
const ograve$1 = "\xF2";
const ogt = "\u29C1";
const ohbar = "\u29B5";
const ohm = "\u03A9";
const oint = "\u222E";
const olarr = "\u21BA";
const olcir = "\u29BE";
const olcross = "\u29BB";
const oline = "\u203E";
const olt = "\u29C0";
const Omacr = "\u014C";
const omacr = "\u014D";
const Omega = "\u03A9";
const omega = "\u03C9";
const Omicron = "\u039F";
const omicron = "\u03BF";
const omid = "\u29B6";
const ominus = "\u2296";
const Oopf = "\u{1D546}";
const oopf = "\u{1D560}";
const opar = "\u29B7";
const OpenCurlyDoubleQuote = "\u201C";
const OpenCurlyQuote = "\u2018";
const operp = "\u29B9";
const oplus = "\u2295";
const orarr = "\u21BB";
const Or = "\u2A54";
const or = "\u2228";
const ord = "\u2A5D";
const order = "\u2134";
const orderof = "\u2134";
const ordf$1 = "\xAA";
const ordm$1 = "\xBA";
const origof = "\u22B6";
const oror = "\u2A56";
const orslope = "\u2A57";
const orv = "\u2A5B";
const oS = "\u24C8";
const Oscr = "\u{1D4AA}";
const oscr = "\u2134";
const Oslash$1 = "\xD8";
const oslash$1 = "\xF8";
const osol = "\u2298";
const Otilde$1 = "\xD5";
const otilde$1 = "\xF5";
const otimesas = "\u2A36";
const Otimes = "\u2A37";
const otimes = "\u2297";
const Ouml$1 = "\xD6";
const ouml$1 = "\xF6";
const ovbar = "\u233D";
const OverBar = "\u203E";
const OverBrace = "\u23DE";
const OverBracket = "\u23B4";
const OverParenthesis = "\u23DC";
const para$1 = "\xB6";
const parallel = "\u2225";
const par = "\u2225";
const parsim = "\u2AF3";
const parsl = "\u2AFD";
const part = "\u2202";
const PartialD = "\u2202";
const Pcy = "\u041F";
const pcy = "\u043F";
const percnt = "%";
const period = ".";
const permil = "\u2030";
const perp = "\u22A5";
const pertenk = "\u2031";
const Pfr = "\u{1D513}";
const pfr = "\u{1D52D}";
const Phi = "\u03A6";
const phi = "\u03C6";
const phiv = "\u03D5";
const phmmat = "\u2133";
const phone = "\u260E";
const Pi$1 = "\u03A0";
const pi$1 = "\u03C0";
const pitchfork = "\u22D4";
const piv = "\u03D6";
const planck = "\u210F";
const planckh = "\u210E";
const plankv = "\u210F";
const plusacir = "\u2A23";
const plusb = "\u229E";
const pluscir = "\u2A22";
const plus = "+";
const plusdo = "\u2214";
const plusdu = "\u2A25";
const pluse = "\u2A72";
const PlusMinus = "\xB1";
const plusmn$1 = "\xB1";
const plussim = "\u2A26";
const plustwo = "\u2A27";
const pm = "\xB1";
const Poincareplane = "\u210C";
const pointint = "\u2A15";
const popf = "\u{1D561}";
const Popf = "\u2119";
const pound$1 = "\xA3";
const prap = "\u2AB7";
const Pr = "\u2ABB";
const pr = "\u227A";
const prcue = "\u227C";
const precapprox = "\u2AB7";
const prec = "\u227A";
const preccurlyeq = "\u227C";
const Precedes = "\u227A";
const PrecedesEqual = "\u2AAF";
const PrecedesSlantEqual = "\u227C";
const PrecedesTilde = "\u227E";
const preceq = "\u2AAF";
const precnapprox = "\u2AB9";
const precneqq = "\u2AB5";
const precnsim = "\u22E8";
const pre = "\u2AAF";
const prE = "\u2AB3";
const precsim = "\u227E";
const prime = "\u2032";
const Prime = "\u2033";
const primes = "\u2119";
const prnap = "\u2AB9";
const prnE = "\u2AB5";
const prnsim = "\u22E8";
const prod = "\u220F";
const Product$2 = "\u220F";
const profalar = "\u232E";
const profline = "\u2312";
const profsurf = "\u2313";
const prop = "\u221D";
const Proportional = "\u221D";
const Proportion = "\u2237";
const propto = "\u221D";
const prsim = "\u227E";
const prurel = "\u22B0";
const Pscr = "\u{1D4AB}";
const pscr = "\u{1D4C5}";
const Psi = "\u03A8";
const psi = "\u03C8";
const puncsp = "\u2008";
const Qfr = "\u{1D514}";
const qfr = "\u{1D52E}";
const qint = "\u2A0C";
const qopf = "\u{1D562}";
const Qopf = "\u211A";
const qprime = "\u2057";
const Qscr = "\u{1D4AC}";
const qscr = "\u{1D4C6}";
const quaternions = "\u210D";
const quatint = "\u2A16";
const quest = "?";
const questeq = "\u225F";
const quot$2 = '"';
const QUOT$1 = '"';
const rAarr = "\u21DB";
const race = "\u223D\u0331";
const Racute = "\u0154";
const racute = "\u0155";
const radic = "\u221A";
const raemptyv = "\u29B3";
const rang = "\u27E9";
const Rang = "\u27EB";
const rangd = "\u2992";
const range = "\u29A5";
const rangle = "\u27E9";
const raquo$1 = "\xBB";
const rarrap = "\u2975";
const rarrb = "\u21E5";
const rarrbfs = "\u2920";
const rarrc = "\u2933";
const rarr = "\u2192";
const Rarr = "\u21A0";
const rArr = "\u21D2";
const rarrfs = "\u291E";
const rarrhk = "\u21AA";
const rarrlp = "\u21AC";
const rarrpl = "\u2945";
const rarrsim = "\u2974";
const Rarrtl = "\u2916";
const rarrtl = "\u21A3";
const rarrw = "\u219D";
const ratail = "\u291A";
const rAtail = "\u291C";
const ratio = "\u2236";
const rationals = "\u211A";
const rbarr = "\u290D";
const rBarr = "\u290F";
const RBarr = "\u2910";
const rbbrk = "\u2773";
const rbrace = "}";
const rbrack = "]";
const rbrke = "\u298C";
const rbrksld = "\u298E";
const rbrkslu = "\u2990";
const Rcaron = "\u0158";
const rcaron = "\u0159";
const Rcedil = "\u0156";
const rcedil = "\u0157";
const rceil = "\u2309";
const rcub = "}";
const Rcy = "\u0420";
const rcy = "\u0440";
const rdca = "\u2937";
const rdldhar = "\u2969";
const rdquo = "\u201D";
const rdquor = "\u201D";
const rdsh = "\u21B3";
const real = "\u211C";
const realine = "\u211B";
const realpart = "\u211C";
const reals = "\u211D";
const Re$1 = "\u211C";
const rect = "\u25AD";
const reg$1 = "\xAE";
const REG$1 = "\xAE";
const ReverseElement = "\u220B";
const ReverseEquilibrium = "\u21CB";
const ReverseUpEquilibrium = "\u296F";
const rfisht = "\u297D";
const rfloor = "\u230B";
const rfr = "\u{1D52F}";
const Rfr = "\u211C";
const rHar = "\u2964";
const rhard = "\u21C1";
const rharu = "\u21C0";
const rharul = "\u296C";
const Rho = "\u03A1";
const rho = "\u03C1";
const rhov = "\u03F1";
const RightAngleBracket = "\u27E9";
const RightArrowBar = "\u21E5";
const rightarrow = "\u2192";
const RightArrow = "\u2192";
const Rightarrow = "\u21D2";
const RightArrowLeftArrow = "\u21C4";
const rightarrowtail = "\u21A3";
const RightCeiling = "\u2309";
const RightDoubleBracket = "\u27E7";
const RightDownTeeVector = "\u295D";
const RightDownVectorBar = "\u2955";
const RightDownVector = "\u21C2";
const RightFloor = "\u230B";
const rightharpoondown = "\u21C1";
const rightharpoonup = "\u21C0";
const rightleftarrows = "\u21C4";
const rightleftharpoons = "\u21CC";
const rightrightarrows = "\u21C9";
const rightsquigarrow = "\u219D";
const RightTeeArrow = "\u21A6";
const RightTee = "\u22A2";
const RightTeeVector = "\u295B";
const rightthreetimes = "\u22CC";
const RightTriangleBar = "\u29D0";
const RightTriangle = "\u22B3";
const RightTriangleEqual = "\u22B5";
const RightUpDownVector = "\u294F";
const RightUpTeeVector = "\u295C";
const RightUpVectorBar = "\u2954";
const RightUpVector = "\u21BE";
const RightVectorBar = "\u2953";
const RightVector = "\u21C0";
const ring = "\u02DA";
const risingdotseq = "\u2253";
const rlarr = "\u21C4";
const rlhar = "\u21CC";
const rlm = "\u200F";
const rmoustache = "\u23B1";
const rmoust = "\u23B1";
const rnmid = "\u2AEE";
const roang = "\u27ED";
const roarr = "\u21FE";
const robrk = "\u27E7";
const ropar = "\u2986";
const ropf = "\u{1D563}";
const Ropf = "\u211D";
const roplus = "\u2A2E";
const rotimes = "\u2A35";
const RoundImplies = "\u2970";
const rpar = ")";
const rpargt = "\u2994";
const rppolint = "\u2A12";
const rrarr = "\u21C9";
const Rrightarrow = "\u21DB";
const rsaquo = "\u203A";
const rscr = "\u{1D4C7}";
const Rscr = "\u211B";
const rsh = "\u21B1";
const Rsh = "\u21B1";
const rsqb = "]";
const rsquo = "\u2019";
const rsquor = "\u2019";
const rthree = "\u22CC";
const rtimes = "\u22CA";
const rtri = "\u25B9";
const rtrie = "\u22B5";
const rtrif = "\u25B8";
const rtriltri = "\u29CE";
const RuleDelayed = "\u29F4";
const ruluhar = "\u2968";
const rx = "\u211E";
const Sacute = "\u015A";
const sacute = "\u015B";
const sbquo = "\u201A";
const scap = "\u2AB8";
const Scaron = "\u0160";
const scaron = "\u0161";
const Sc$1 = "\u2ABC";
const sc$1 = "\u227B";
const sccue = "\u227D";
const sce = "\u2AB0";
const scE = "\u2AB4";
const Scedil = "\u015E";
const scedil = "\u015F";
const Scirc = "\u015C";
const scirc = "\u015D";
const scnap = "\u2ABA";
const scnE = "\u2AB6";
const scnsim = "\u22E9";
const scpolint = "\u2A13";
const scsim = "\u227F";
const Scy = "\u0421";
const scy = "\u0441";
const sdotb = "\u22A1";
const sdot = "\u22C5";
const sdote = "\u2A66";
const searhk = "\u2925";
const searr = "\u2198";
const seArr = "\u21D8";
const searrow = "\u2198";
const sect$1 = "\xA7";
const semi = ";";
const seswar = "\u2929";
const setminus = "\u2216";
const setmn = "\u2216";
const sext = "\u2736";
const Sfr = "\u{1D516}";
const sfr = "\u{1D530}";
const sfrown = "\u2322";
const sharp = "\u266F";
const SHCHcy = "\u0429";
const shchcy = "\u0449";
const SHcy = "\u0428";
const shcy = "\u0448";
const ShortDownArrow = "\u2193";
const ShortLeftArrow = "\u2190";
const shortmid = "\u2223";
const shortparallel = "\u2225";
const ShortRightArrow = "\u2192";
const ShortUpArrow = "\u2191";
const shy$1 = "\xAD";
const Sigma = "\u03A3";
const sigma = "\u03C3";
const sigmaf = "\u03C2";
const sigmav = "\u03C2";
const sim = "\u223C";
const simdot = "\u2A6A";
const sime = "\u2243";
const simeq = "\u2243";
const simg = "\u2A9E";
const simgE = "\u2AA0";
const siml = "\u2A9D";
const simlE = "\u2A9F";
const simne = "\u2246";
const simplus = "\u2A24";
const simrarr = "\u2972";
const slarr = "\u2190";
const SmallCircle = "\u2218";
const smallsetminus = "\u2216";
const smashp = "\u2A33";
const smeparsl = "\u29E4";
const smid = "\u2223";
const smile = "\u2323";
const smt = "\u2AAA";
const smte = "\u2AAC";
const smtes = "\u2AAC\uFE00";
const SOFTcy = "\u042C";
const softcy = "\u044C";
const solbar = "\u233F";
const solb = "\u29C4";
const sol = "/";
const Sopf = "\u{1D54A}";
const sopf = "\u{1D564}";
const spades = "\u2660";
const spadesuit = "\u2660";
const spar = "\u2225";
const sqcap = "\u2293";
const sqcaps = "\u2293\uFE00";
const sqcup = "\u2294";
const sqcups = "\u2294\uFE00";
const Sqrt = "\u221A";
const sqsub = "\u228F";
const sqsube = "\u2291";
const sqsubset = "\u228F";
const sqsubseteq = "\u2291";
const sqsup = "\u2290";
const sqsupe = "\u2292";
const sqsupset = "\u2290";
const sqsupseteq = "\u2292";
const square = "\u25A1";
const Square = "\u25A1";
const SquareIntersection = "\u2293";
const SquareSubset = "\u228F";
const SquareSubsetEqual = "\u2291";
const SquareSuperset = "\u2290";
const SquareSupersetEqual = "\u2292";
const SquareUnion = "\u2294";
const squarf = "\u25AA";
const squ = "\u25A1";
const squf = "\u25AA";
const srarr = "\u2192";
const Sscr = "\u{1D4AE}";
const sscr = "\u{1D4C8}";
const ssetmn = "\u2216";
const ssmile = "\u2323";
const sstarf = "\u22C6";
const Star$1 = "\u22C6";
const star = "\u2606";
const starf = "\u2605";
const straightepsilon = "\u03F5";
const straightphi = "\u03D5";
const strns = "\xAF";
const sub = "\u2282";
const Sub = "\u22D0";
const subdot = "\u2ABD";
const subE = "\u2AC5";
const sube = "\u2286";
const subedot = "\u2AC3";
const submult = "\u2AC1";
const subnE = "\u2ACB";
const subne = "\u228A";
const subplus = "\u2ABF";
const subrarr = "\u2979";
const subset = "\u2282";
const Subset = "\u22D0";
const subseteq = "\u2286";
const subseteqq = "\u2AC5";
const SubsetEqual = "\u2286";
const subsetneq = "\u228A";
const subsetneqq = "\u2ACB";
const subsim = "\u2AC7";
const subsub = "\u2AD5";
const subsup = "\u2AD3";
const succapprox = "\u2AB8";
const succ = "\u227B";
const succcurlyeq = "\u227D";
const Succeeds = "\u227B";
const SucceedsEqual = "\u2AB0";
const SucceedsSlantEqual = "\u227D";
const SucceedsTilde = "\u227F";
const succeq = "\u2AB0";
const succnapprox = "\u2ABA";
const succneqq = "\u2AB6";
const succnsim = "\u22E9";
const succsim = "\u227F";
const SuchThat = "\u220B";
const sum = "\u2211";
const Sum = "\u2211";
const sung = "\u266A";
const sup1$1 = "\xB9";
const sup2$1 = "\xB2";
const sup3$1 = "\xB3";
const sup = "\u2283";
const Sup = "\u22D1";
const supdot = "\u2ABE";
const supdsub = "\u2AD8";
const supE = "\u2AC6";
const supe = "\u2287";
const supedot = "\u2AC4";
const Superset = "\u2283";
const SupersetEqual = "\u2287";
const suphsol = "\u27C9";
const suphsub = "\u2AD7";
const suplarr = "\u297B";
const supmult = "\u2AC2";
const supnE = "\u2ACC";
const supne = "\u228B";
const supplus = "\u2AC0";
const supset = "\u2283";
const Supset = "\u22D1";
const supseteq = "\u2287";
const supseteqq = "\u2AC6";
const supsetneq = "\u228B";
const supsetneqq = "\u2ACC";
const supsim = "\u2AC8";
const supsub = "\u2AD4";
const supsup = "\u2AD6";
const swarhk = "\u2926";
const swarr = "\u2199";
const swArr = "\u21D9";
const swarrow = "\u2199";
const swnwar = "\u292A";
const szlig$1 = "\xDF";
const Tab = "	";
const target = "\u2316";
const Tau = "\u03A4";
const tau = "\u03C4";
const tbrk = "\u23B4";
const Tcaron = "\u0164";
const tcaron = "\u0165";
const Tcedil = "\u0162";
const tcedil = "\u0163";
const Tcy = "\u0422";
const tcy = "\u0442";
const tdot = "\u20DB";
const telrec = "\u2315";
const Tfr = "\u{1D517}";
const tfr = "\u{1D531}";
const there4 = "\u2234";
const therefore = "\u2234";
const Therefore = "\u2234";
const Theta = "\u0398";
const theta = "\u03B8";
const thetasym = "\u03D1";
const thetav = "\u03D1";
const thickapprox = "\u2248";
const thicksim = "\u223C";
const ThickSpace = "\u205F\u200A";
const ThinSpace = "\u2009";
const thinsp = "\u2009";
const thkap = "\u2248";
const thksim = "\u223C";
const THORN$1 = "\xDE";
const thorn$1 = "\xFE";
const tilde = "\u02DC";
const Tilde = "\u223C";
const TildeEqual = "\u2243";
const TildeFullEqual = "\u2245";
const TildeTilde = "\u2248";
const timesbar = "\u2A31";
const timesb = "\u22A0";
const times$1 = "\xD7";
const timesd = "\u2A30";
const tint = "\u222D";
const toea = "\u2928";
const topbot = "\u2336";
const topcir = "\u2AF1";
const top = "\u22A4";
const Topf = "\u{1D54B}";
const topf = "\u{1D565}";
const topfork = "\u2ADA";
const tosa = "\u2929";
const tprime = "\u2034";
const trade = "\u2122";
const TRADE = "\u2122";
const triangle = "\u25B5";
const triangledown = "\u25BF";
const triangleleft = "\u25C3";
const trianglelefteq = "\u22B4";
const triangleq = "\u225C";
const triangleright = "\u25B9";
const trianglerighteq = "\u22B5";
const tridot = "\u25EC";
const trie = "\u225C";
const triminus = "\u2A3A";
const TripleDot = "\u20DB";
const triplus = "\u2A39";
const trisb = "\u29CD";
const tritime = "\u2A3B";
const trpezium = "\u23E2";
const Tscr = "\u{1D4AF}";
const tscr = "\u{1D4C9}";
const TScy = "\u0426";
const tscy = "\u0446";
const TSHcy = "\u040B";
const tshcy = "\u045B";
const Tstrok = "\u0166";
const tstrok = "\u0167";
const twixt = "\u226C";
const twoheadleftarrow = "\u219E";
const twoheadrightarrow = "\u21A0";
const Uacute$1 = "\xDA";
const uacute$1 = "\xFA";
const uarr = "\u2191";
const Uarr = "\u219F";
const uArr = "\u21D1";
const Uarrocir = "\u2949";
const Ubrcy = "\u040E";
const ubrcy = "\u045E";
const Ubreve = "\u016C";
const ubreve = "\u016D";
const Ucirc$1 = "\xDB";
const ucirc$1 = "\xFB";
const Ucy = "\u0423";
const ucy = "\u0443";
const udarr = "\u21C5";
const Udblac = "\u0170";
const udblac = "\u0171";
const udhar = "\u296E";
const ufisht = "\u297E";
const Ufr = "\u{1D518}";
const ufr = "\u{1D532}";
const Ugrave$1 = "\xD9";
const ugrave$1 = "\xF9";
const uHar = "\u2963";
const uharl = "\u21BF";
const uharr = "\u21BE";
const uhblk = "\u2580";
const ulcorn = "\u231C";
const ulcorner = "\u231C";
const ulcrop = "\u230F";
const ultri = "\u25F8";
const Umacr = "\u016A";
const umacr = "\u016B";
const uml$1 = "\xA8";
const UnderBar = "_";
const UnderBrace = "\u23DF";
const UnderBracket = "\u23B5";
const UnderParenthesis = "\u23DD";
const Union = "\u22C3";
const UnionPlus = "\u228E";
const Uogon = "\u0172";
const uogon = "\u0173";
const Uopf = "\u{1D54C}";
const uopf = "\u{1D566}";
const UpArrowBar = "\u2912";
const uparrow = "\u2191";
const UpArrow = "\u2191";
const Uparrow = "\u21D1";
const UpArrowDownArrow = "\u21C5";
const updownarrow = "\u2195";
const UpDownArrow = "\u2195";
const Updownarrow = "\u21D5";
const UpEquilibrium = "\u296E";
const upharpoonleft = "\u21BF";
const upharpoonright = "\u21BE";
const uplus = "\u228E";
const UpperLeftArrow = "\u2196";
const UpperRightArrow = "\u2197";
const upsi = "\u03C5";
const Upsi = "\u03D2";
const upsih = "\u03D2";
const Upsilon = "\u03A5";
const upsilon = "\u03C5";
const UpTeeArrow = "\u21A5";
const UpTee = "\u22A5";
const upuparrows = "\u21C8";
const urcorn = "\u231D";
const urcorner = "\u231D";
const urcrop = "\u230E";
const Uring = "\u016E";
const uring = "\u016F";
const urtri = "\u25F9";
const Uscr = "\u{1D4B0}";
const uscr = "\u{1D4CA}";
const utdot = "\u22F0";
const Utilde = "\u0168";
const utilde = "\u0169";
const utri = "\u25B5";
const utrif = "\u25B4";
const uuarr = "\u21C8";
const Uuml$1 = "\xDC";
const uuml$1 = "\xFC";
const uwangle = "\u29A7";
const vangrt = "\u299C";
const varepsilon = "\u03F5";
const varkappa = "\u03F0";
const varnothing = "\u2205";
const varphi = "\u03D5";
const varpi = "\u03D6";
const varpropto = "\u221D";
const varr = "\u2195";
const vArr = "\u21D5";
const varrho = "\u03F1";
const varsigma = "\u03C2";
const varsubsetneq = "\u228A\uFE00";
const varsubsetneqq = "\u2ACB\uFE00";
const varsupsetneq = "\u228B\uFE00";
const varsupsetneqq = "\u2ACC\uFE00";
const vartheta = "\u03D1";
const vartriangleleft = "\u22B2";
const vartriangleright = "\u22B3";
const vBar = "\u2AE8";
const Vbar = "\u2AEB";
const vBarv = "\u2AE9";
const Vcy = "\u0412";
const vcy = "\u0432";
const vdash = "\u22A2";
const vDash = "\u22A8";
const Vdash = "\u22A9";
const VDash = "\u22AB";
const Vdashl = "\u2AE6";
const veebar = "\u22BB";
const vee = "\u2228";
const Vee = "\u22C1";
const veeeq = "\u225A";
const vellip = "\u22EE";
const verbar = "|";
const Verbar = "\u2016";
const vert = "|";
const Vert = "\u2016";
const VerticalBar = "\u2223";
const VerticalLine = "|";
const VerticalSeparator = "\u2758";
const VerticalTilde = "\u2240";
const VeryThinSpace = "\u200A";
const Vfr = "\u{1D519}";
const vfr = "\u{1D533}";
const vltri = "\u22B2";
const vnsub = "\u2282\u20D2";
const vnsup = "\u2283\u20D2";
const Vopf = "\u{1D54D}";
const vopf = "\u{1D567}";
const vprop = "\u221D";
const vrtri = "\u22B3";
const Vscr = "\u{1D4B1}";
const vscr = "\u{1D4CB}";
const vsubnE = "\u2ACB\uFE00";
const vsubne = "\u228A\uFE00";
const vsupnE = "\u2ACC\uFE00";
const vsupne = "\u228B\uFE00";
const Vvdash = "\u22AA";
const vzigzag = "\u299A";
const Wcirc = "\u0174";
const wcirc = "\u0175";
const wedbar = "\u2A5F";
const wedge = "\u2227";
const Wedge = "\u22C0";
const wedgeq = "\u2259";
const weierp = "\u2118";
const Wfr = "\u{1D51A}";
const wfr = "\u{1D534}";
const Wopf = "\u{1D54E}";
const wopf = "\u{1D568}";
const wp = "\u2118";
const wr = "\u2240";
const wreath = "\u2240";
const Wscr = "\u{1D4B2}";
const wscr = "\u{1D4CC}";
const xcap = "\u22C2";
const xcirc = "\u25EF";
const xcup = "\u22C3";
const xdtri = "\u25BD";
const Xfr = "\u{1D51B}";
const xfr = "\u{1D535}";
const xharr = "\u27F7";
const xhArr = "\u27FA";
const Xi$1 = "\u039E";
const xi$1 = "\u03BE";
const xlarr = "\u27F5";
const xlArr = "\u27F8";
const xmap = "\u27FC";
const xnis = "\u22FB";
const xodot = "\u2A00";
const Xopf = "\u{1D54F}";
const xopf = "\u{1D569}";
const xoplus = "\u2A01";
const xotime = "\u2A02";
const xrarr = "\u27F6";
const xrArr = "\u27F9";
const Xscr = "\u{1D4B3}";
const xscr = "\u{1D4CD}";
const xsqcup = "\u2A06";
const xuplus = "\u2A04";
const xutri = "\u25B3";
const xvee = "\u22C1";
const xwedge = "\u22C0";
const Yacute$1 = "\xDD";
const yacute$1 = "\xFD";
const YAcy = "\u042F";
const yacy = "\u044F";
const Ycirc = "\u0176";
const ycirc = "\u0177";
const Ycy = "\u042B";
const ycy = "\u044B";
const yen$1 = "\xA5";
const Yfr = "\u{1D51C}";
const yfr = "\u{1D536}";
const YIcy = "\u0407";
const yicy = "\u0457";
const Yopf = "\u{1D550}";
const yopf = "\u{1D56A}";
const Yscr = "\u{1D4B4}";
const yscr = "\u{1D4CE}";
const YUcy = "\u042E";
const yucy = "\u044E";
const yuml$1 = "\xFF";
const Yuml = "\u0178";
const Zacute = "\u0179";
const zacute = "\u017A";
const Zcaron = "\u017D";
const zcaron = "\u017E";
const Zcy = "\u0417";
const zcy = "\u0437";
const Zdot = "\u017B";
const zdot = "\u017C";
const zeetrf = "\u2128";
const ZeroWidthSpace = "\u200B";
const Zeta = "\u0396";
const zeta = "\u03B6";
const zfr = "\u{1D537}";
const Zfr = "\u2128";
const ZHcy = "\u0416";
const zhcy = "\u0436";
const zigrarr = "\u21DD";
const zopf = "\u{1D56B}";
const Zopf = "\u2124";
const Zscr = "\u{1D4B5}";
const zscr = "\u{1D4CF}";
const zwj = "\u200D";
const zwnj = "\u200C";
var require$$1 = {
  Aacute: Aacute$1,
  aacute: aacute$1,
  Abreve,
  abreve,
  ac: ac$1,
  acd,
  acE,
  Acirc: Acirc$1,
  acirc: acirc$1,
  acute: acute$1,
  Acy,
  acy,
  AElig: AElig$1,
  aelig: aelig$1,
  af: af$1,
  Afr,
  afr,
  Agrave: Agrave$1,
  agrave: agrave$1,
  alefsym,
  aleph,
  Alpha,
  alpha,
  Amacr,
  amacr,
  amalg,
  amp: amp$2,
  AMP: AMP$1,
  andand,
  And,
  and,
  andd,
  andslope,
  andv,
  ang,
  ange,
  angle,
  angmsdaa,
  angmsdab,
  angmsdac,
  angmsdad,
  angmsdae,
  angmsdaf,
  angmsdag,
  angmsdah,
  angmsd,
  angrt,
  angrtvb,
  angrtvbd,
  angsph,
  angst,
  angzarr,
  Aogon,
  aogon,
  Aopf,
  aopf,
  apacir,
  ap,
  apE,
  ape,
  apid,
  apos: apos$1,
  ApplyFunction,
  approx,
  approxeq,
  Aring: Aring$1,
  aring: aring$1,
  Ascr,
  ascr,
  Assign,
  ast,
  asymp,
  asympeq,
  Atilde: Atilde$1,
  atilde: atilde$1,
  Auml: Auml$1,
  auml: auml$1,
  awconint,
  awint,
  backcong,
  backepsilon,
  backprime,
  backsim,
  backsimeq,
  Backslash,
  Barv,
  barvee,
  barwed,
  Barwed,
  barwedge,
  bbrk,
  bbrktbrk,
  bcong,
  Bcy,
  bcy,
  bdquo,
  becaus,
  because,
  Because,
  bemptyv,
  bepsi,
  bernou,
  Bernoullis,
  Beta,
  beta,
  beth,
  between,
  Bfr,
  bfr,
  bigcap,
  bigcirc,
  bigcup,
  bigodot,
  bigoplus,
  bigotimes,
  bigsqcup,
  bigstar,
  bigtriangledown,
  bigtriangleup,
  biguplus,
  bigvee,
  bigwedge,
  bkarow,
  blacklozenge,
  blacksquare,
  blacktriangle,
  blacktriangledown,
  blacktriangleleft,
  blacktriangleright,
  blank,
  blk12,
  blk14,
  blk34,
  block: block$1,
  bne,
  bnequiv,
  bNot,
  bnot,
  Bopf,
  bopf,
  bot,
  bottom,
  bowtie,
  boxbox,
  boxdl,
  boxdL,
  boxDl,
  boxDL,
  boxdr,
  boxdR,
  boxDr,
  boxDR,
  boxh,
  boxH,
  boxhd,
  boxHd,
  boxhD,
  boxHD,
  boxhu,
  boxHu,
  boxhU,
  boxHU,
  boxminus,
  boxplus,
  boxtimes,
  boxul,
  boxuL,
  boxUl,
  boxUL,
  boxur,
  boxuR,
  boxUr,
  boxUR,
  boxv,
  boxV,
  boxvh,
  boxvH,
  boxVh,
  boxVH,
  boxvl,
  boxvL,
  boxVl,
  boxVL,
  boxvr,
  boxvR,
  boxVr,
  boxVR,
  bprime,
  breve,
  Breve,
  brvbar: brvbar$1,
  bscr,
  Bscr,
  bsemi,
  bsim,
  bsime,
  bsolb,
  bsol,
  bsolhsub,
  bull,
  bullet,
  bump,
  bumpE,
  bumpe,
  Bumpeq,
  bumpeq,
  Cacute,
  cacute,
  capand,
  capbrcup,
  capcap,
  cap,
  Cap,
  capcup,
  capdot,
  CapitalDifferentialD,
  caps,
  caret,
  caron,
  Cayleys,
  ccaps,
  Ccaron,
  ccaron,
  Ccedil: Ccedil$1,
  ccedil: ccedil$1,
  Ccirc,
  ccirc,
  Cconint,
  ccups,
  ccupssm,
  Cdot,
  cdot,
  cedil: cedil$1,
  Cedilla,
  cemptyv,
  cent: cent$1,
  centerdot,
  CenterDot,
  cfr,
  Cfr,
  CHcy,
  chcy,
  check,
  checkmark,
  Chi,
  chi,
  circ,
  circeq,
  circlearrowleft,
  circlearrowright,
  circledast,
  circledcirc,
  circleddash,
  CircleDot,
  circledR,
  circledS,
  CircleMinus,
  CirclePlus,
  CircleTimes,
  cir,
  cirE,
  cire,
  cirfnint,
  cirmid,
  cirscir,
  ClockwiseContourIntegral,
  CloseCurlyDoubleQuote,
  CloseCurlyQuote,
  clubs,
  clubsuit,
  colon,
  Colon,
  Colone,
  colone,
  coloneq,
  comma,
  commat,
  comp,
  compfn,
  complement,
  complexes,
  cong,
  congdot,
  Congruent,
  conint,
  Conint,
  ContourIntegral,
  copf,
  Copf,
  coprod,
  Coproduct,
  copy: copy$1,
  COPY: COPY$1,
  copysr,
  CounterClockwiseContourIntegral,
  crarr,
  cross,
  Cross,
  Cscr,
  cscr,
  csub,
  csube,
  csup,
  csupe,
  ctdot,
  cudarrl,
  cudarrr,
  cuepr,
  cuesc,
  cularr,
  cularrp,
  cupbrcap,
  cupcap,
  CupCap,
  cup,
  Cup,
  cupcup,
  cupdot,
  cupor,
  cups,
  curarr,
  curarrm,
  curlyeqprec,
  curlyeqsucc,
  curlyvee,
  curlywedge,
  curren: curren$1,
  curvearrowleft,
  curvearrowright,
  cuvee,
  cuwed,
  cwconint,
  cwint,
  cylcty,
  dagger,
  Dagger,
  daleth,
  darr,
  Darr,
  dArr,
  dash,
  Dashv,
  dashv,
  dbkarow,
  dblac,
  Dcaron,
  dcaron,
  Dcy,
  dcy,
  ddagger,
  ddarr,
  DD,
  dd: dd$1,
  DDotrahd,
  ddotseq,
  deg: deg$1,
  Del,
  Delta,
  delta,
  demptyv,
  dfisht,
  Dfr,
  dfr,
  dHar,
  dharl,
  dharr,
  DiacriticalAcute,
  DiacriticalDot,
  DiacriticalDoubleAcute,
  DiacriticalGrave,
  DiacriticalTilde,
  diam,
  diamond,
  Diamond,
  diamondsuit,
  diams,
  die,
  DifferentialD,
  digamma,
  disin,
  div,
  divide: divide$1,
  divideontimes,
  divonx,
  DJcy,
  djcy,
  dlcorn,
  dlcrop,
  dollar,
  Dopf,
  dopf,
  Dot,
  dot,
  DotDot,
  doteq,
  doteqdot,
  DotEqual,
  dotminus,
  dotplus,
  dotsquare,
  doublebarwedge,
  DoubleContourIntegral,
  DoubleDot,
  DoubleDownArrow,
  DoubleLeftArrow,
  DoubleLeftRightArrow,
  DoubleLeftTee,
  DoubleLongLeftArrow,
  DoubleLongLeftRightArrow,
  DoubleLongRightArrow,
  DoubleRightArrow,
  DoubleRightTee,
  DoubleUpArrow,
  DoubleUpDownArrow,
  DoubleVerticalBar,
  DownArrowBar,
  downarrow,
  DownArrow,
  Downarrow,
  DownArrowUpArrow,
  DownBreve,
  downdownarrows,
  downharpoonleft,
  downharpoonright,
  DownLeftRightVector,
  DownLeftTeeVector,
  DownLeftVectorBar,
  DownLeftVector,
  DownRightTeeVector,
  DownRightVectorBar,
  DownRightVector,
  DownTeeArrow,
  DownTee,
  drbkarow,
  drcorn,
  drcrop,
  Dscr,
  dscr,
  DScy,
  dscy,
  dsol,
  Dstrok,
  dstrok,
  dtdot,
  dtri,
  dtrif,
  duarr,
  duhar,
  dwangle,
  DZcy,
  dzcy,
  dzigrarr,
  Eacute: Eacute$1,
  eacute: eacute$1,
  easter,
  Ecaron,
  ecaron,
  Ecirc: Ecirc$1,
  ecirc: ecirc$1,
  ecir,
  ecolon,
  Ecy,
  ecy,
  eDDot,
  Edot,
  edot,
  eDot,
  ee: ee$1,
  efDot,
  Efr,
  efr,
  eg: eg$1,
  Egrave: Egrave$1,
  egrave: egrave$1,
  egs,
  egsdot,
  el,
  Element: Element$2,
  elinters,
  ell,
  els,
  elsdot,
  Emacr,
  emacr,
  empty,
  emptyset,
  EmptySmallSquare,
  emptyv,
  EmptyVerySmallSquare,
  emsp13,
  emsp14,
  emsp,
  ENG,
  eng,
  ensp,
  Eogon,
  eogon,
  Eopf,
  eopf,
  epar,
  eparsl,
  eplus,
  epsi,
  Epsilon,
  epsilon,
  epsiv,
  eqcirc,
  eqcolon,
  eqsim,
  eqslantgtr,
  eqslantless,
  Equal,
  equals,
  EqualTilde,
  equest,
  Equilibrium,
  equiv,
  equivDD,
  eqvparsl,
  erarr,
  erDot,
  escr,
  Escr,
  esdot,
  Esim,
  esim,
  Eta,
  eta,
  ETH: ETH$1,
  eth: eth$1,
  Euml: Euml$1,
  euml: euml$1,
  euro,
  excl,
  exist,
  Exists,
  expectation,
  exponentiale,
  ExponentialE,
  fallingdotseq,
  Fcy,
  fcy,
  female,
  ffilig,
  fflig,
  ffllig,
  Ffr,
  ffr,
  filig,
  FilledSmallSquare,
  FilledVerySmallSquare,
  fjlig,
  flat,
  fllig,
  fltns,
  fnof,
  Fopf,
  fopf,
  forall,
  ForAll,
  fork,
  forkv,
  Fouriertrf,
  fpartint,
  frac12: frac12$1,
  frac13,
  frac14: frac14$1,
  frac15,
  frac16,
  frac18,
  frac23,
  frac25,
  frac34: frac34$1,
  frac35,
  frac38,
  frac45,
  frac56,
  frac58,
  frac78,
  frasl,
  frown,
  fscr,
  Fscr,
  gacute,
  Gamma,
  gamma,
  Gammad,
  gammad,
  gap,
  Gbreve,
  gbreve,
  Gcedil,
  Gcirc,
  gcirc,
  Gcy,
  gcy,
  Gdot,
  gdot,
  ge: ge$1,
  gE,
  gEl,
  gel,
  geq,
  geqq,
  geqslant,
  gescc,
  ges,
  gesdot,
  gesdoto,
  gesdotol,
  gesl,
  gesles,
  Gfr,
  gfr,
  gg: gg$1,
  Gg: Gg$1,
  ggg,
  gimel,
  GJcy,
  gjcy,
  gla,
  gl,
  glE,
  glj,
  gnap,
  gnapprox,
  gne,
  gnE,
  gneq,
  gneqq,
  gnsim,
  Gopf,
  gopf,
  grave,
  GreaterEqual,
  GreaterEqualLess,
  GreaterFullEqual,
  GreaterGreater,
  GreaterLess,
  GreaterSlantEqual,
  GreaterTilde,
  Gscr,
  gscr,
  gsim,
  gsime,
  gsiml,
  gtcc,
  gtcir,
  gt: gt$2,
  GT: GT$1,
  Gt,
  gtdot,
  gtlPar,
  gtquest,
  gtrapprox,
  gtrarr,
  gtrdot,
  gtreqless,
  gtreqqless,
  gtrless,
  gtrsim,
  gvertneqq,
  gvnE,
  Hacek,
  hairsp,
  half,
  hamilt,
  HARDcy,
  hardcy,
  harrcir,
  harr,
  hArr,
  harrw,
  Hat,
  hbar,
  Hcirc,
  hcirc,
  hearts,
  heartsuit,
  hellip,
  hercon,
  hfr,
  Hfr,
  HilbertSpace,
  hksearow,
  hkswarow,
  hoarr,
  homtht,
  hookleftarrow,
  hookrightarrow,
  hopf,
  Hopf,
  horbar,
  HorizontalLine,
  hscr,
  Hscr,
  hslash,
  Hstrok,
  hstrok,
  HumpDownHump,
  HumpEqual,
  hybull,
  hyphen,
  Iacute: Iacute$1,
  iacute: iacute$1,
  ic: ic$1,
  Icirc: Icirc$1,
  icirc: icirc$1,
  Icy,
  icy,
  Idot,
  IEcy,
  iecy,
  iexcl: iexcl$1,
  iff,
  ifr,
  Ifr,
  Igrave: Igrave$1,
  igrave: igrave$1,
  ii: ii$1,
  iiiint,
  iiint,
  iinfin,
  iiota,
  IJlig,
  ijlig,
  Imacr,
  imacr,
  image,
  ImaginaryI,
  imagline,
  imagpart,
  imath,
  Im,
  imof,
  imped,
  Implies,
  incare,
  "in": "\u2208",
  infin,
  infintie,
  inodot,
  intcal,
  int,
  Int,
  integers,
  Integral,
  intercal,
  Intersection,
  intlarhk,
  intprod,
  InvisibleComma,
  InvisibleTimes,
  IOcy,
  iocy,
  Iogon,
  iogon,
  Iopf,
  iopf,
  Iota,
  iota,
  iprod,
  iquest: iquest$1,
  iscr,
  Iscr,
  isin,
  isindot,
  isinE,
  isins,
  isinsv,
  isinv,
  it,
  Itilde,
  itilde,
  Iukcy,
  iukcy,
  Iuml: Iuml$1,
  iuml: iuml$1,
  Jcirc,
  jcirc,
  Jcy,
  jcy,
  Jfr,
  jfr,
  jmath,
  Jopf,
  jopf,
  Jscr,
  jscr,
  Jsercy,
  jsercy,
  Jukcy,
  jukcy,
  Kappa,
  kappa,
  kappav,
  Kcedil,
  kcedil,
  Kcy,
  kcy,
  Kfr,
  kfr,
  kgreen,
  KHcy,
  khcy,
  KJcy,
  kjcy,
  Kopf,
  kopf,
  Kscr,
  kscr,
  lAarr,
  Lacute,
  lacute,
  laemptyv,
  lagran,
  Lambda,
  lambda,
  lang,
  Lang,
  langd,
  langle,
  lap,
  Laplacetrf,
  laquo: laquo$1,
  larrb,
  larrbfs,
  larr,
  Larr,
  lArr,
  larrfs,
  larrhk,
  larrlp,
  larrpl,
  larrsim,
  larrtl,
  latail,
  lAtail,
  lat,
  late,
  lates,
  lbarr,
  lBarr,
  lbbrk,
  lbrace,
  lbrack,
  lbrke,
  lbrksld,
  lbrkslu,
  Lcaron,
  lcaron,
  Lcedil,
  lcedil,
  lceil,
  lcub,
  Lcy,
  lcy,
  ldca,
  ldquo,
  ldquor,
  ldrdhar,
  ldrushar,
  ldsh,
  le: le$1,
  lE,
  LeftAngleBracket,
  LeftArrowBar,
  leftarrow,
  LeftArrow,
  Leftarrow,
  LeftArrowRightArrow,
  leftarrowtail,
  LeftCeiling,
  LeftDoubleBracket,
  LeftDownTeeVector,
  LeftDownVectorBar,
  LeftDownVector,
  LeftFloor,
  leftharpoondown,
  leftharpoonup,
  leftleftarrows,
  leftrightarrow,
  LeftRightArrow,
  Leftrightarrow,
  leftrightarrows,
  leftrightharpoons,
  leftrightsquigarrow,
  LeftRightVector,
  LeftTeeArrow,
  LeftTee,
  LeftTeeVector,
  leftthreetimes,
  LeftTriangleBar,
  LeftTriangle,
  LeftTriangleEqual,
  LeftUpDownVector,
  LeftUpTeeVector,
  LeftUpVectorBar,
  LeftUpVector,
  LeftVectorBar,
  LeftVector,
  lEg,
  leg,
  leq,
  leqq,
  leqslant,
  lescc,
  les,
  lesdot,
  lesdoto,
  lesdotor,
  lesg,
  lesges,
  lessapprox,
  lessdot,
  lesseqgtr,
  lesseqqgtr,
  LessEqualGreater,
  LessFullEqual,
  LessGreater,
  lessgtr,
  LessLess,
  lesssim,
  LessSlantEqual,
  LessTilde,
  lfisht,
  lfloor,
  Lfr,
  lfr,
  lg: lg$1,
  lgE,
  lHar,
  lhard,
  lharu,
  lharul,
  lhblk,
  LJcy,
  ljcy,
  llarr,
  ll,
  Ll,
  llcorner,
  Lleftarrow,
  llhard,
  lltri,
  Lmidot,
  lmidot,
  lmoustache,
  lmoust,
  lnap,
  lnapprox,
  lne,
  lnE,
  lneq,
  lneqq,
  lnsim,
  loang,
  loarr,
  lobrk,
  longleftarrow,
  LongLeftArrow,
  Longleftarrow,
  longleftrightarrow,
  LongLeftRightArrow,
  Longleftrightarrow,
  longmapsto,
  longrightarrow,
  LongRightArrow,
  Longrightarrow,
  looparrowleft,
  looparrowright,
  lopar,
  Lopf,
  lopf,
  loplus,
  lotimes,
  lowast,
  lowbar,
  LowerLeftArrow,
  LowerRightArrow,
  loz,
  lozenge,
  lozf,
  lpar,
  lparlt,
  lrarr,
  lrcorner,
  lrhar,
  lrhard,
  lrm,
  lrtri,
  lsaquo,
  lscr,
  Lscr,
  lsh,
  Lsh,
  lsim,
  lsime,
  lsimg,
  lsqb,
  lsquo,
  lsquor,
  Lstrok,
  lstrok,
  ltcc,
  ltcir,
  lt: lt$2,
  LT: LT$1,
  Lt,
  ltdot,
  lthree,
  ltimes,
  ltlarr,
  ltquest,
  ltri,
  ltrie,
  ltrif,
  ltrPar,
  lurdshar,
  luruhar,
  lvertneqq,
  lvnE,
  macr: macr$1,
  male,
  malt,
  maltese,
  "Map": "\u2905",
  map,
  mapsto,
  mapstodown,
  mapstoleft,
  mapstoup,
  marker,
  mcomma,
  Mcy,
  mcy,
  mdash,
  mDDot,
  measuredangle,
  MediumSpace,
  Mellintrf,
  Mfr,
  mfr,
  mho,
  micro: micro$1,
  midast,
  midcir,
  mid,
  middot: middot$1,
  minusb,
  minus,
  minusd,
  minusdu,
  MinusPlus,
  mlcp,
  mldr,
  mnplus,
  models,
  Mopf,
  mopf,
  mp,
  mscr,
  Mscr,
  mstpos,
  Mu,
  mu,
  multimap,
  mumap,
  nabla,
  Nacute,
  nacute,
  nang,
  nap,
  napE,
  napid,
  napos,
  napprox,
  natural,
  naturals,
  natur,
  nbsp: nbsp$1,
  nbump,
  nbumpe,
  ncap,
  Ncaron,
  ncaron,
  Ncedil,
  ncedil,
  ncong,
  ncongdot,
  ncup,
  Ncy,
  ncy,
  ndash,
  nearhk,
  nearr,
  neArr,
  nearrow,
  ne: ne$1,
  nedot,
  NegativeMediumSpace,
  NegativeThickSpace,
  NegativeThinSpace,
  NegativeVeryThinSpace,
  nequiv,
  nesear,
  nesim,
  NestedGreaterGreater,
  NestedLessLess,
  NewLine,
  nexist,
  nexists,
  Nfr,
  nfr,
  ngE,
  nge,
  ngeq,
  ngeqq,
  ngeqslant,
  nges,
  nGg,
  ngsim,
  nGt,
  ngt,
  ngtr,
  nGtv,
  nharr,
  nhArr,
  nhpar,
  ni: ni$1,
  nis,
  nisd,
  niv,
  NJcy,
  njcy,
  nlarr,
  nlArr,
  nldr,
  nlE,
  nle,
  nleftarrow,
  nLeftarrow,
  nleftrightarrow,
  nLeftrightarrow,
  nleq,
  nleqq,
  nleqslant,
  nles,
  nless,
  nLl,
  nlsim,
  nLt,
  nlt,
  nltri,
  nltrie,
  nLtv,
  nmid,
  NoBreak,
  NonBreakingSpace,
  nopf,
  Nopf,
  Not,
  not: not$1,
  NotCongruent,
  NotCupCap,
  NotDoubleVerticalBar,
  NotElement,
  NotEqual,
  NotEqualTilde,
  NotExists,
  NotGreater,
  NotGreaterEqual,
  NotGreaterFullEqual,
  NotGreaterGreater,
  NotGreaterLess,
  NotGreaterSlantEqual,
  NotGreaterTilde,
  NotHumpDownHump,
  NotHumpEqual,
  notin,
  notindot,
  notinE,
  notinva,
  notinvb,
  notinvc,
  NotLeftTriangleBar,
  NotLeftTriangle,
  NotLeftTriangleEqual,
  NotLess,
  NotLessEqual,
  NotLessGreater,
  NotLessLess,
  NotLessSlantEqual,
  NotLessTilde,
  NotNestedGreaterGreater,
  NotNestedLessLess,
  notni,
  notniva,
  notnivb,
  notnivc,
  NotPrecedes,
  NotPrecedesEqual,
  NotPrecedesSlantEqual,
  NotReverseElement,
  NotRightTriangleBar,
  NotRightTriangle,
  NotRightTriangleEqual,
  NotSquareSubset,
  NotSquareSubsetEqual,
  NotSquareSuperset,
  NotSquareSupersetEqual,
  NotSubset,
  NotSubsetEqual,
  NotSucceeds,
  NotSucceedsEqual,
  NotSucceedsSlantEqual,
  NotSucceedsTilde,
  NotSuperset,
  NotSupersetEqual,
  NotTilde,
  NotTildeEqual,
  NotTildeFullEqual,
  NotTildeTilde,
  NotVerticalBar,
  nparallel,
  npar,
  nparsl,
  npart,
  npolint,
  npr,
  nprcue,
  nprec,
  npreceq,
  npre,
  nrarrc,
  nrarr,
  nrArr,
  nrarrw,
  nrightarrow,
  nRightarrow,
  nrtri,
  nrtrie,
  nsc,
  nsccue,
  nsce,
  Nscr,
  nscr,
  nshortmid,
  nshortparallel,
  nsim,
  nsime,
  nsimeq,
  nsmid,
  nspar,
  nsqsube,
  nsqsupe,
  nsub,
  nsubE,
  nsube,
  nsubset,
  nsubseteq,
  nsubseteqq,
  nsucc,
  nsucceq,
  nsup,
  nsupE,
  nsupe,
  nsupset,
  nsupseteq,
  nsupseteqq,
  ntgl,
  Ntilde: Ntilde$1,
  ntilde: ntilde$1,
  ntlg,
  ntriangleleft,
  ntrianglelefteq,
  ntriangleright,
  ntrianglerighteq,
  Nu,
  nu,
  num,
  numero,
  numsp,
  nvap,
  nvdash,
  nvDash,
  nVdash,
  nVDash,
  nvge,
  nvgt,
  nvHarr,
  nvinfin,
  nvlArr,
  nvle,
  nvlt,
  nvltrie,
  nvrArr,
  nvrtrie,
  nvsim,
  nwarhk,
  nwarr,
  nwArr,
  nwarrow,
  nwnear,
  Oacute: Oacute$1,
  oacute: oacute$1,
  oast,
  Ocirc: Ocirc$1,
  ocirc: ocirc$1,
  ocir,
  Ocy,
  ocy,
  odash,
  Odblac,
  odblac,
  odiv,
  odot,
  odsold,
  OElig,
  oelig,
  ofcir,
  Ofr,
  ofr,
  ogon,
  Ograve: Ograve$1,
  ograve: ograve$1,
  ogt,
  ohbar,
  ohm,
  oint,
  olarr,
  olcir,
  olcross,
  oline,
  olt,
  Omacr,
  omacr,
  Omega,
  omega,
  Omicron,
  omicron,
  omid,
  ominus,
  Oopf,
  oopf,
  opar,
  OpenCurlyDoubleQuote,
  OpenCurlyQuote,
  operp,
  oplus,
  orarr,
  Or,
  or,
  ord,
  order,
  orderof,
  ordf: ordf$1,
  ordm: ordm$1,
  origof,
  oror,
  orslope,
  orv,
  oS,
  Oscr,
  oscr,
  Oslash: Oslash$1,
  oslash: oslash$1,
  osol,
  Otilde: Otilde$1,
  otilde: otilde$1,
  otimesas,
  Otimes,
  otimes,
  Ouml: Ouml$1,
  ouml: ouml$1,
  ovbar,
  OverBar,
  OverBrace,
  OverBracket,
  OverParenthesis,
  para: para$1,
  parallel,
  par,
  parsim,
  parsl,
  part,
  PartialD,
  Pcy,
  pcy,
  percnt,
  period,
  permil,
  perp,
  pertenk,
  Pfr,
  pfr,
  Phi,
  phi,
  phiv,
  phmmat,
  phone,
  Pi: Pi$1,
  pi: pi$1,
  pitchfork,
  piv,
  planck,
  planckh,
  plankv,
  plusacir,
  plusb,
  pluscir,
  plus,
  plusdo,
  plusdu,
  pluse,
  PlusMinus,
  plusmn: plusmn$1,
  plussim,
  plustwo,
  pm,
  Poincareplane,
  pointint,
  popf,
  Popf,
  pound: pound$1,
  prap,
  Pr,
  pr,
  prcue,
  precapprox,
  prec,
  preccurlyeq,
  Precedes,
  PrecedesEqual,
  PrecedesSlantEqual,
  PrecedesTilde,
  preceq,
  precnapprox,
  precneqq,
  precnsim,
  pre,
  prE,
  precsim,
  prime,
  Prime,
  primes,
  prnap,
  prnE,
  prnsim,
  prod,
  Product: Product$2,
  profalar,
  profline,
  profsurf,
  prop,
  Proportional,
  Proportion,
  propto,
  prsim,
  prurel,
  Pscr,
  pscr,
  Psi,
  psi,
  puncsp,
  Qfr,
  qfr,
  qint,
  qopf,
  Qopf,
  qprime,
  Qscr,
  qscr,
  quaternions,
  quatint,
  quest,
  questeq,
  quot: quot$2,
  QUOT: QUOT$1,
  rAarr,
  race,
  Racute,
  racute,
  radic,
  raemptyv,
  rang,
  Rang,
  rangd,
  range,
  rangle,
  raquo: raquo$1,
  rarrap,
  rarrb,
  rarrbfs,
  rarrc,
  rarr,
  Rarr,
  rArr,
  rarrfs,
  rarrhk,
  rarrlp,
  rarrpl,
  rarrsim,
  Rarrtl,
  rarrtl,
  rarrw,
  ratail,
  rAtail,
  ratio,
  rationals,
  rbarr,
  rBarr,
  RBarr,
  rbbrk,
  rbrace,
  rbrack,
  rbrke,
  rbrksld,
  rbrkslu,
  Rcaron,
  rcaron,
  Rcedil,
  rcedil,
  rceil,
  rcub,
  Rcy,
  rcy,
  rdca,
  rdldhar,
  rdquo,
  rdquor,
  rdsh,
  real,
  realine,
  realpart,
  reals,
  Re: Re$1,
  rect,
  reg: reg$1,
  REG: REG$1,
  ReverseElement,
  ReverseEquilibrium,
  ReverseUpEquilibrium,
  rfisht,
  rfloor,
  rfr,
  Rfr,
  rHar,
  rhard,
  rharu,
  rharul,
  Rho,
  rho,
  rhov,
  RightAngleBracket,
  RightArrowBar,
  rightarrow,
  RightArrow,
  Rightarrow,
  RightArrowLeftArrow,
  rightarrowtail,
  RightCeiling,
  RightDoubleBracket,
  RightDownTeeVector,
  RightDownVectorBar,
  RightDownVector,
  RightFloor,
  rightharpoondown,
  rightharpoonup,
  rightleftarrows,
  rightleftharpoons,
  rightrightarrows,
  rightsquigarrow,
  RightTeeArrow,
  RightTee,
  RightTeeVector,
  rightthreetimes,
  RightTriangleBar,
  RightTriangle,
  RightTriangleEqual,
  RightUpDownVector,
  RightUpTeeVector,
  RightUpVectorBar,
  RightUpVector,
  RightVectorBar,
  RightVector,
  ring,
  risingdotseq,
  rlarr,
  rlhar,
  rlm,
  rmoustache,
  rmoust,
  rnmid,
  roang,
  roarr,
  robrk,
  ropar,
  ropf,
  Ropf,
  roplus,
  rotimes,
  RoundImplies,
  rpar,
  rpargt,
  rppolint,
  rrarr,
  Rrightarrow,
  rsaquo,
  rscr,
  Rscr,
  rsh,
  Rsh,
  rsqb,
  rsquo,
  rsquor,
  rthree,
  rtimes,
  rtri,
  rtrie,
  rtrif,
  rtriltri,
  RuleDelayed,
  ruluhar,
  rx,
  Sacute,
  sacute,
  sbquo,
  scap,
  Scaron,
  scaron,
  Sc: Sc$1,
  sc: sc$1,
  sccue,
  sce,
  scE,
  Scedil,
  scedil,
  Scirc,
  scirc,
  scnap,
  scnE,
  scnsim,
  scpolint,
  scsim,
  Scy,
  scy,
  sdotb,
  sdot,
  sdote,
  searhk,
  searr,
  seArr,
  searrow,
  sect: sect$1,
  semi,
  seswar,
  setminus,
  setmn,
  sext,
  Sfr,
  sfr,
  sfrown,
  sharp,
  SHCHcy,
  shchcy,
  SHcy,
  shcy,
  ShortDownArrow,
  ShortLeftArrow,
  shortmid,
  shortparallel,
  ShortRightArrow,
  ShortUpArrow,
  shy: shy$1,
  Sigma,
  sigma,
  sigmaf,
  sigmav,
  sim,
  simdot,
  sime,
  simeq,
  simg,
  simgE,
  siml,
  simlE,
  simne,
  simplus,
  simrarr,
  slarr,
  SmallCircle,
  smallsetminus,
  smashp,
  smeparsl,
  smid,
  smile,
  smt,
  smte,
  smtes,
  SOFTcy,
  softcy,
  solbar,
  solb,
  sol,
  Sopf,
  sopf,
  spades,
  spadesuit,
  spar,
  sqcap,
  sqcaps,
  sqcup,
  sqcups,
  Sqrt,
  sqsub,
  sqsube,
  sqsubset,
  sqsubseteq,
  sqsup,
  sqsupe,
  sqsupset,
  sqsupseteq,
  square,
  Square,
  SquareIntersection,
  SquareSubset,
  SquareSubsetEqual,
  SquareSuperset,
  SquareSupersetEqual,
  SquareUnion,
  squarf,
  squ,
  squf,
  srarr,
  Sscr,
  sscr,
  ssetmn,
  ssmile,
  sstarf,
  Star: Star$1,
  star,
  starf,
  straightepsilon,
  straightphi,
  strns,
  sub,
  Sub,
  subdot,
  subE,
  sube,
  subedot,
  submult,
  subnE,
  subne,
  subplus,
  subrarr,
  subset,
  Subset,
  subseteq,
  subseteqq,
  SubsetEqual,
  subsetneq,
  subsetneqq,
  subsim,
  subsub,
  subsup,
  succapprox,
  succ,
  succcurlyeq,
  Succeeds,
  SucceedsEqual,
  SucceedsSlantEqual,
  SucceedsTilde,
  succeq,
  succnapprox,
  succneqq,
  succnsim,
  succsim,
  SuchThat,
  sum,
  Sum,
  sung,
  sup1: sup1$1,
  sup2: sup2$1,
  sup3: sup3$1,
  sup,
  Sup,
  supdot,
  supdsub,
  supE,
  supe,
  supedot,
  Superset,
  SupersetEqual,
  suphsol,
  suphsub,
  suplarr,
  supmult,
  supnE,
  supne,
  supplus,
  supset,
  Supset,
  supseteq,
  supseteqq,
  supsetneq,
  supsetneqq,
  supsim,
  supsub,
  supsup,
  swarhk,
  swarr,
  swArr,
  swarrow,
  swnwar,
  szlig: szlig$1,
  Tab,
  target,
  Tau,
  tau,
  tbrk,
  Tcaron,
  tcaron,
  Tcedil,
  tcedil,
  Tcy,
  tcy,
  tdot,
  telrec,
  Tfr,
  tfr,
  there4,
  therefore,
  Therefore,
  Theta,
  theta,
  thetasym,
  thetav,
  thickapprox,
  thicksim,
  ThickSpace,
  ThinSpace,
  thinsp,
  thkap,
  thksim,
  THORN: THORN$1,
  thorn: thorn$1,
  tilde,
  Tilde,
  TildeEqual,
  TildeFullEqual,
  TildeTilde,
  timesbar,
  timesb,
  times: times$1,
  timesd,
  tint,
  toea,
  topbot,
  topcir,
  top,
  Topf,
  topf,
  topfork,
  tosa,
  tprime,
  trade,
  TRADE,
  triangle,
  triangledown,
  triangleleft,
  trianglelefteq,
  triangleq,
  triangleright,
  trianglerighteq,
  tridot,
  trie,
  triminus,
  TripleDot,
  triplus,
  trisb,
  tritime,
  trpezium,
  Tscr,
  tscr,
  TScy,
  tscy,
  TSHcy,
  tshcy,
  Tstrok,
  tstrok,
  twixt,
  twoheadleftarrow,
  twoheadrightarrow,
  Uacute: Uacute$1,
  uacute: uacute$1,
  uarr,
  Uarr,
  uArr,
  Uarrocir,
  Ubrcy,
  ubrcy,
  Ubreve,
  ubreve,
  Ucirc: Ucirc$1,
  ucirc: ucirc$1,
  Ucy,
  ucy,
  udarr,
  Udblac,
  udblac,
  udhar,
  ufisht,
  Ufr,
  ufr,
  Ugrave: Ugrave$1,
  ugrave: ugrave$1,
  uHar,
  uharl,
  uharr,
  uhblk,
  ulcorn,
  ulcorner,
  ulcrop,
  ultri,
  Umacr,
  umacr,
  uml: uml$1,
  UnderBar,
  UnderBrace,
  UnderBracket,
  UnderParenthesis,
  Union,
  UnionPlus,
  Uogon,
  uogon,
  Uopf,
  uopf,
  UpArrowBar,
  uparrow,
  UpArrow,
  Uparrow,
  UpArrowDownArrow,
  updownarrow,
  UpDownArrow,
  Updownarrow,
  UpEquilibrium,
  upharpoonleft,
  upharpoonright,
  uplus,
  UpperLeftArrow,
  UpperRightArrow,
  upsi,
  Upsi,
  upsih,
  Upsilon,
  upsilon,
  UpTeeArrow,
  UpTee,
  upuparrows,
  urcorn,
  urcorner,
  urcrop,
  Uring,
  uring,
  urtri,
  Uscr,
  uscr,
  utdot,
  Utilde,
  utilde,
  utri,
  utrif,
  uuarr,
  Uuml: Uuml$1,
  uuml: uuml$1,
  uwangle,
  vangrt,
  varepsilon,
  varkappa,
  varnothing,
  varphi,
  varpi,
  varpropto,
  varr,
  vArr,
  varrho,
  varsigma,
  varsubsetneq,
  varsubsetneqq,
  varsupsetneq,
  varsupsetneqq,
  vartheta,
  vartriangleleft,
  vartriangleright,
  vBar,
  Vbar,
  vBarv,
  Vcy,
  vcy,
  vdash,
  vDash,
  Vdash,
  VDash,
  Vdashl,
  veebar,
  vee,
  Vee,
  veeeq,
  vellip,
  verbar,
  Verbar,
  vert,
  Vert,
  VerticalBar,
  VerticalLine,
  VerticalSeparator,
  VerticalTilde,
  VeryThinSpace,
  Vfr,
  vfr,
  vltri,
  vnsub,
  vnsup,
  Vopf,
  vopf,
  vprop,
  vrtri,
  Vscr,
  vscr,
  vsubnE,
  vsubne,
  vsupnE,
  vsupne,
  Vvdash,
  vzigzag,
  Wcirc,
  wcirc,
  wedbar,
  wedge,
  Wedge,
  wedgeq,
  weierp,
  Wfr,
  wfr,
  Wopf,
  wopf,
  wp,
  wr,
  wreath,
  Wscr,
  wscr,
  xcap,
  xcirc,
  xcup,
  xdtri,
  Xfr,
  xfr,
  xharr,
  xhArr,
  Xi: Xi$1,
  xi: xi$1,
  xlarr,
  xlArr,
  xmap,
  xnis,
  xodot,
  Xopf,
  xopf,
  xoplus,
  xotime,
  xrarr,
  xrArr,
  Xscr,
  xscr,
  xsqcup,
  xuplus,
  xutri,
  xvee,
  xwedge,
  Yacute: Yacute$1,
  yacute: yacute$1,
  YAcy,
  yacy,
  Ycirc,
  ycirc,
  Ycy,
  ycy,
  yen: yen$1,
  Yfr,
  yfr,
  YIcy,
  yicy,
  Yopf,
  yopf,
  Yscr,
  yscr,
  YUcy,
  yucy,
  yuml: yuml$1,
  Yuml,
  Zacute,
  zacute,
  Zcaron,
  zcaron,
  Zcy,
  zcy,
  Zdot,
  zdot,
  zeetrf,
  ZeroWidthSpace,
  Zeta,
  zeta,
  zfr,
  Zfr,
  ZHcy,
  zhcy,
  zigrarr,
  zopf,
  Zopf,
  Zscr,
  zscr,
  zwj,
  zwnj
};
const Aacute = "\xC1";
const aacute = "\xE1";
const Acirc = "\xC2";
const acirc = "\xE2";
const acute = "\xB4";
const AElig = "\xC6";
const aelig = "\xE6";
const Agrave = "\xC0";
const agrave = "\xE0";
const amp$1 = "&";
const AMP = "&";
const Aring = "\xC5";
const aring = "\xE5";
const Atilde = "\xC3";
const atilde = "\xE3";
const Auml = "\xC4";
const auml = "\xE4";
const brvbar = "\xA6";
const Ccedil = "\xC7";
const ccedil = "\xE7";
const cedil = "\xB8";
const cent = "\xA2";
const copy = "\xA9";
const COPY = "\xA9";
const curren = "\xA4";
const deg = "\xB0";
const divide = "\xF7";
const Eacute = "\xC9";
const eacute = "\xE9";
const Ecirc = "\xCA";
const ecirc = "\xEA";
const Egrave = "\xC8";
const egrave = "\xE8";
const ETH = "\xD0";
const eth = "\xF0";
const Euml = "\xCB";
const euml = "\xEB";
const frac12 = "\xBD";
const frac14 = "\xBC";
const frac34 = "\xBE";
const gt$1 = ">";
const GT = ">";
const Iacute = "\xCD";
const iacute = "\xED";
const Icirc = "\xCE";
const icirc = "\xEE";
const iexcl = "\xA1";
const Igrave = "\xCC";
const igrave = "\xEC";
const iquest = "\xBF";
const Iuml = "\xCF";
const iuml = "\xEF";
const laquo = "\xAB";
const lt$1 = "<";
const LT = "<";
const macr = "\xAF";
const micro = "\xB5";
const middot = "\xB7";
const nbsp = "\xA0";
const not = "\xAC";
const Ntilde = "\xD1";
const ntilde = "\xF1";
const Oacute = "\xD3";
const oacute = "\xF3";
const Ocirc = "\xD4";
const ocirc = "\xF4";
const Ograve = "\xD2";
const ograve = "\xF2";
const ordf = "\xAA";
const ordm = "\xBA";
const Oslash = "\xD8";
const oslash = "\xF8";
const Otilde = "\xD5";
const otilde = "\xF5";
const Ouml = "\xD6";
const ouml = "\xF6";
const para = "\xB6";
const plusmn = "\xB1";
const pound = "\xA3";
const quot$1 = '"';
const QUOT = '"';
const raquo = "\xBB";
const reg = "\xAE";
const REG = "\xAE";
const sect = "\xA7";
const shy = "\xAD";
const sup1 = "\xB9";
const sup2 = "\xB2";
const sup3 = "\xB3";
const szlig = "\xDF";
const THORN = "\xDE";
const thorn = "\xFE";
const times = "\xD7";
const Uacute = "\xDA";
const uacute = "\xFA";
const Ucirc = "\xDB";
const ucirc = "\xFB";
const Ugrave = "\xD9";
const ugrave = "\xF9";
const uml = "\xA8";
const Uuml = "\xDC";
const uuml = "\xFC";
const Yacute = "\xDD";
const yacute = "\xFD";
const yen = "\xA5";
const yuml = "\xFF";
var require$$2 = {
  Aacute,
  aacute,
  Acirc,
  acirc,
  acute,
  AElig,
  aelig,
  Agrave,
  agrave,
  amp: amp$1,
  AMP,
  Aring,
  aring,
  Atilde,
  atilde,
  Auml,
  auml,
  brvbar,
  Ccedil,
  ccedil,
  cedil,
  cent,
  copy,
  COPY,
  curren,
  deg,
  divide,
  Eacute,
  eacute,
  Ecirc,
  ecirc,
  Egrave,
  egrave,
  ETH,
  eth,
  Euml,
  euml,
  frac12,
  frac14,
  frac34,
  gt: gt$1,
  GT,
  Iacute,
  iacute,
  Icirc,
  icirc,
  iexcl,
  Igrave,
  igrave,
  iquest,
  Iuml,
  iuml,
  laquo,
  lt: lt$1,
  LT,
  macr,
  micro,
  middot,
  nbsp,
  not,
  Ntilde,
  ntilde,
  Oacute,
  oacute,
  Ocirc,
  ocirc,
  Ograve,
  ograve,
  ordf,
  ordm,
  Oslash,
  oslash,
  Otilde,
  otilde,
  Ouml,
  ouml,
  para,
  plusmn,
  pound,
  quot: quot$1,
  QUOT,
  raquo,
  reg,
  REG,
  sect,
  shy,
  sup1,
  sup2,
  sup3,
  szlig,
  THORN,
  thorn,
  times,
  Uacute,
  uacute,
  Ucirc,
  ucirc,
  Ugrave,
  ugrave,
  uml,
  Uuml,
  uuml,
  Yacute,
  yacute,
  yen,
  yuml
};
const amp = "&";
const apos = "'";
const gt = ">";
const lt = "<";
const quot = '"';
var require$$3 = {
  amp,
  apos,
  gt,
  lt,
  quot
};
var __importDefault$1 = commonjsGlobal$1 && commonjsGlobal$1.__importDefault || function(mod) {
  return mod && mod.__esModule ? mod : { "default": mod };
};
Object.defineProperty(Tokenizer$1, "__esModule", { value: true });
var decode_codepoint_1 = __importDefault$1(decode_codepoint);
var entities_json_1 = __importDefault$1(require$$1);
var legacy_json_1 = __importDefault$1(require$$2);
var xml_json_1 = __importDefault$1(require$$3);
function whitespace$1(c2) {
  return c2 === " " || c2 === "\n" || c2 === "	" || c2 === "\f" || c2 === "\r";
}
function isASCIIAlpha(c2) {
  return c2 >= "a" && c2 <= "z" || c2 >= "A" && c2 <= "Z";
}
function ifElseState(upper, SUCCESS, FAILURE) {
  var lower = upper.toLowerCase();
  if (upper === lower) {
    return function(t2, c2) {
      if (c2 === lower) {
        t2._state = SUCCESS;
      } else {
        t2._state = FAILURE;
        t2._index--;
      }
    };
  }
  return function(t2, c2) {
    if (c2 === lower || c2 === upper) {
      t2._state = SUCCESS;
    } else {
      t2._state = FAILURE;
      t2._index--;
    }
  };
}
function consumeSpecialNameChar(upper, NEXT_STATE) {
  var lower = upper.toLowerCase();
  return function(t2, c2) {
    if (c2 === lower || c2 === upper) {
      t2._state = NEXT_STATE;
    } else {
      t2._state = 3;
      t2._index--;
    }
  };
}
var stateBeforeCdata1 = ifElseState("C", 24, 16);
var stateBeforeCdata2 = ifElseState("D", 25, 16);
var stateBeforeCdata3 = ifElseState("A", 26, 16);
var stateBeforeCdata4 = ifElseState("T", 27, 16);
var stateBeforeCdata5 = ifElseState("A", 28, 16);
var stateBeforeScript1 = consumeSpecialNameChar("R", 35);
var stateBeforeScript2 = consumeSpecialNameChar("I", 36);
var stateBeforeScript3 = consumeSpecialNameChar("P", 37);
var stateBeforeScript4 = consumeSpecialNameChar("T", 38);
var stateAfterScript1 = ifElseState("R", 40, 1);
var stateAfterScript2 = ifElseState("I", 41, 1);
var stateAfterScript3 = ifElseState("P", 42, 1);
var stateAfterScript4 = ifElseState("T", 43, 1);
var stateBeforeStyle1 = consumeSpecialNameChar("Y", 45);
var stateBeforeStyle2 = consumeSpecialNameChar("L", 46);
var stateBeforeStyle3 = consumeSpecialNameChar("E", 47);
var stateAfterStyle1 = ifElseState("Y", 49, 1);
var stateAfterStyle2 = ifElseState("L", 50, 1);
var stateAfterStyle3 = ifElseState("E", 51, 1);
var stateBeforeSpecialT = consumeSpecialNameChar("I", 54);
var stateBeforeTitle1 = consumeSpecialNameChar("T", 55);
var stateBeforeTitle2 = consumeSpecialNameChar("L", 56);
var stateBeforeTitle3 = consumeSpecialNameChar("E", 57);
var stateAfterSpecialTEnd = ifElseState("I", 58, 1);
var stateAfterTitle1 = ifElseState("T", 59, 1);
var stateAfterTitle2 = ifElseState("L", 60, 1);
var stateAfterTitle3 = ifElseState("E", 61, 1);
var stateBeforeEntity = ifElseState("#", 63, 64);
var stateBeforeNumericEntity = ifElseState("X", 66, 65);
var Tokenizer = function() {
  function Tokenizer2(options, cbs) {
    var _a;
    this._state = 1;
    this.buffer = "";
    this.sectionStart = 0;
    this._index = 0;
    this.bufferOffset = 0;
    this.baseState = 1;
    this.special = 1;
    this.running = true;
    this.ended = false;
    this.cbs = cbs;
    this.xmlMode = !!(options === null || options === void 0 ? void 0 : options.xmlMode);
    this.decodeEntities = (_a = options === null || options === void 0 ? void 0 : options.decodeEntities) !== null && _a !== void 0 ? _a : true;
  }
  Tokenizer2.prototype.reset = function() {
    this._state = 1;
    this.buffer = "";
    this.sectionStart = 0;
    this._index = 0;
    this.bufferOffset = 0;
    this.baseState = 1;
    this.special = 1;
    this.running = true;
    this.ended = false;
  };
  Tokenizer2.prototype.write = function(chunk) {
    if (this.ended)
      this.cbs.onerror(Error(".write() after done!"));
    this.buffer += chunk;
    this.parse();
  };
  Tokenizer2.prototype.end = function(chunk) {
    if (this.ended)
      this.cbs.onerror(Error(".end() after done!"));
    if (chunk)
      this.write(chunk);
    this.ended = true;
    if (this.running)
      this.finish();
  };
  Tokenizer2.prototype.pause = function() {
    this.running = false;
  };
  Tokenizer2.prototype.resume = function() {
    this.running = true;
    if (this._index < this.buffer.length) {
      this.parse();
    }
    if (this.ended) {
      this.finish();
    }
  };
  Tokenizer2.prototype.getAbsoluteIndex = function() {
    return this.bufferOffset + this._index;
  };
  Tokenizer2.prototype.stateText = function(c2) {
    if (c2 === "<") {
      if (this._index > this.sectionStart) {
        this.cbs.ontext(this.getSection());
      }
      this._state = 2;
      this.sectionStart = this._index;
    } else if (this.decodeEntities && c2 === "&" && (this.special === 1 || this.special === 4)) {
      if (this._index > this.sectionStart) {
        this.cbs.ontext(this.getSection());
      }
      this.baseState = 1;
      this._state = 62;
      this.sectionStart = this._index;
    }
  };
  Tokenizer2.prototype.isTagStartChar = function(c2) {
    return isASCIIAlpha(c2) || this.xmlMode && !whitespace$1(c2) && c2 !== "/" && c2 !== ">";
  };
  Tokenizer2.prototype.stateBeforeTagName = function(c2) {
    if (c2 === "/") {
      this._state = 5;
    } else if (c2 === "<") {
      this.cbs.ontext(this.getSection());
      this.sectionStart = this._index;
    } else if (c2 === ">" || this.special !== 1 || whitespace$1(c2)) {
      this._state = 1;
    } else if (c2 === "!") {
      this._state = 15;
      this.sectionStart = this._index + 1;
    } else if (c2 === "?") {
      this._state = 17;
      this.sectionStart = this._index + 1;
    } else if (!this.isTagStartChar(c2)) {
      this._state = 1;
    } else {
      this._state = !this.xmlMode && (c2 === "s" || c2 === "S") ? 32 : !this.xmlMode && (c2 === "t" || c2 === "T") ? 52 : 3;
      this.sectionStart = this._index;
    }
  };
  Tokenizer2.prototype.stateInTagName = function(c2) {
    if (c2 === "/" || c2 === ">" || whitespace$1(c2)) {
      this.emitToken("onopentagname");
      this._state = 8;
      this._index--;
    }
  };
  Tokenizer2.prototype.stateBeforeClosingTagName = function(c2) {
    if (whitespace$1(c2))
      ;
    else if (c2 === ">") {
      this._state = 1;
    } else if (this.special !== 1) {
      if (this.special !== 4 && (c2 === "s" || c2 === "S")) {
        this._state = 33;
      } else if (this.special === 4 && (c2 === "t" || c2 === "T")) {
        this._state = 53;
      } else {
        this._state = 1;
        this._index--;
      }
    } else if (!this.isTagStartChar(c2)) {
      this._state = 20;
      this.sectionStart = this._index;
    } else {
      this._state = 6;
      this.sectionStart = this._index;
    }
  };
  Tokenizer2.prototype.stateInClosingTagName = function(c2) {
    if (c2 === ">" || whitespace$1(c2)) {
      this.emitToken("onclosetag");
      this._state = 7;
      this._index--;
    }
  };
  Tokenizer2.prototype.stateAfterClosingTagName = function(c2) {
    if (c2 === ">") {
      this._state = 1;
      this.sectionStart = this._index + 1;
    }
  };
  Tokenizer2.prototype.stateBeforeAttributeName = function(c2) {
    if (c2 === ">") {
      this.cbs.onopentagend();
      this._state = 1;
      this.sectionStart = this._index + 1;
    } else if (c2 === "/") {
      this._state = 4;
    } else if (!whitespace$1(c2)) {
      this._state = 9;
      this.sectionStart = this._index;
    }
  };
  Tokenizer2.prototype.stateInSelfClosingTag = function(c2) {
    if (c2 === ">") {
      this.cbs.onselfclosingtag();
      this._state = 1;
      this.sectionStart = this._index + 1;
      this.special = 1;
    } else if (!whitespace$1(c2)) {
      this._state = 8;
      this._index--;
    }
  };
  Tokenizer2.prototype.stateInAttributeName = function(c2) {
    if (c2 === "=" || c2 === "/" || c2 === ">" || whitespace$1(c2)) {
      this.cbs.onattribname(this.getSection());
      this.sectionStart = -1;
      this._state = 10;
      this._index--;
    }
  };
  Tokenizer2.prototype.stateAfterAttributeName = function(c2) {
    if (c2 === "=") {
      this._state = 11;
    } else if (c2 === "/" || c2 === ">") {
      this.cbs.onattribend(void 0);
      this._state = 8;
      this._index--;
    } else if (!whitespace$1(c2)) {
      this.cbs.onattribend(void 0);
      this._state = 9;
      this.sectionStart = this._index;
    }
  };
  Tokenizer2.prototype.stateBeforeAttributeValue = function(c2) {
    if (c2 === '"') {
      this._state = 12;
      this.sectionStart = this._index + 1;
    } else if (c2 === "'") {
      this._state = 13;
      this.sectionStart = this._index + 1;
    } else if (!whitespace$1(c2)) {
      this._state = 14;
      this.sectionStart = this._index;
      this._index--;
    }
  };
  Tokenizer2.prototype.handleInAttributeValue = function(c2, quote) {
    if (c2 === quote) {
      this.emitToken("onattribdata");
      this.cbs.onattribend(quote);
      this._state = 8;
    } else if (this.decodeEntities && c2 === "&") {
      this.emitToken("onattribdata");
      this.baseState = this._state;
      this._state = 62;
      this.sectionStart = this._index;
    }
  };
  Tokenizer2.prototype.stateInAttributeValueDoubleQuotes = function(c2) {
    this.handleInAttributeValue(c2, '"');
  };
  Tokenizer2.prototype.stateInAttributeValueSingleQuotes = function(c2) {
    this.handleInAttributeValue(c2, "'");
  };
  Tokenizer2.prototype.stateInAttributeValueNoQuotes = function(c2) {
    if (whitespace$1(c2) || c2 === ">") {
      this.emitToken("onattribdata");
      this.cbs.onattribend(null);
      this._state = 8;
      this._index--;
    } else if (this.decodeEntities && c2 === "&") {
      this.emitToken("onattribdata");
      this.baseState = this._state;
      this._state = 62;
      this.sectionStart = this._index;
    }
  };
  Tokenizer2.prototype.stateBeforeDeclaration = function(c2) {
    this._state = c2 === "[" ? 23 : c2 === "-" ? 18 : 16;
  };
  Tokenizer2.prototype.stateInDeclaration = function(c2) {
    if (c2 === ">") {
      this.cbs.ondeclaration(this.getSection());
      this._state = 1;
      this.sectionStart = this._index + 1;
    }
  };
  Tokenizer2.prototype.stateInProcessingInstruction = function(c2) {
    if (c2 === ">") {
      this.cbs.onprocessinginstruction(this.getSection());
      this._state = 1;
      this.sectionStart = this._index + 1;
    }
  };
  Tokenizer2.prototype.stateBeforeComment = function(c2) {
    if (c2 === "-") {
      this._state = 19;
      this.sectionStart = this._index + 1;
    } else {
      this._state = 16;
    }
  };
  Tokenizer2.prototype.stateInComment = function(c2) {
    if (c2 === "-")
      this._state = 21;
  };
  Tokenizer2.prototype.stateInSpecialComment = function(c2) {
    if (c2 === ">") {
      this.cbs.oncomment(this.buffer.substring(this.sectionStart, this._index));
      this._state = 1;
      this.sectionStart = this._index + 1;
    }
  };
  Tokenizer2.prototype.stateAfterComment1 = function(c2) {
    if (c2 === "-") {
      this._state = 22;
    } else {
      this._state = 19;
    }
  };
  Tokenizer2.prototype.stateAfterComment2 = function(c2) {
    if (c2 === ">") {
      this.cbs.oncomment(this.buffer.substring(this.sectionStart, this._index - 2));
      this._state = 1;
      this.sectionStart = this._index + 1;
    } else if (c2 !== "-") {
      this._state = 19;
    }
  };
  Tokenizer2.prototype.stateBeforeCdata6 = function(c2) {
    if (c2 === "[") {
      this._state = 29;
      this.sectionStart = this._index + 1;
    } else {
      this._state = 16;
      this._index--;
    }
  };
  Tokenizer2.prototype.stateInCdata = function(c2) {
    if (c2 === "]")
      this._state = 30;
  };
  Tokenizer2.prototype.stateAfterCdata1 = function(c2) {
    if (c2 === "]")
      this._state = 31;
    else
      this._state = 29;
  };
  Tokenizer2.prototype.stateAfterCdata2 = function(c2) {
    if (c2 === ">") {
      this.cbs.oncdata(this.buffer.substring(this.sectionStart, this._index - 2));
      this._state = 1;
      this.sectionStart = this._index + 1;
    } else if (c2 !== "]") {
      this._state = 29;
    }
  };
  Tokenizer2.prototype.stateBeforeSpecialS = function(c2) {
    if (c2 === "c" || c2 === "C") {
      this._state = 34;
    } else if (c2 === "t" || c2 === "T") {
      this._state = 44;
    } else {
      this._state = 3;
      this._index--;
    }
  };
  Tokenizer2.prototype.stateBeforeSpecialSEnd = function(c2) {
    if (this.special === 2 && (c2 === "c" || c2 === "C")) {
      this._state = 39;
    } else if (this.special === 3 && (c2 === "t" || c2 === "T")) {
      this._state = 48;
    } else
      this._state = 1;
  };
  Tokenizer2.prototype.stateBeforeSpecialLast = function(c2, special) {
    if (c2 === "/" || c2 === ">" || whitespace$1(c2)) {
      this.special = special;
    }
    this._state = 3;
    this._index--;
  };
  Tokenizer2.prototype.stateAfterSpecialLast = function(c2, sectionStartOffset) {
    if (c2 === ">" || whitespace$1(c2)) {
      this.special = 1;
      this._state = 6;
      this.sectionStart = this._index - sectionStartOffset;
      this._index--;
    } else
      this._state = 1;
  };
  Tokenizer2.prototype.parseFixedEntity = function(map2) {
    if (map2 === void 0) {
      map2 = this.xmlMode ? xml_json_1.default : entities_json_1.default;
    }
    if (this.sectionStart + 1 < this._index) {
      var entity = this.buffer.substring(this.sectionStart + 1, this._index);
      if (Object.prototype.hasOwnProperty.call(map2, entity)) {
        this.emitPartial(map2[entity]);
        this.sectionStart = this._index + 1;
      }
    }
  };
  Tokenizer2.prototype.parseLegacyEntity = function() {
    var start = this.sectionStart + 1;
    var limit = Math.min(this._index - start, 6);
    while (limit >= 2) {
      var entity = this.buffer.substr(start, limit);
      if (Object.prototype.hasOwnProperty.call(legacy_json_1.default, entity)) {
        this.emitPartial(legacy_json_1.default[entity]);
        this.sectionStart += limit + 1;
        return;
      }
      limit--;
    }
  };
  Tokenizer2.prototype.stateInNamedEntity = function(c2) {
    if (c2 === ";") {
      this.parseFixedEntity();
      if (this.baseState === 1 && this.sectionStart + 1 < this._index && !this.xmlMode) {
        this.parseLegacyEntity();
      }
      this._state = this.baseState;
    } else if ((c2 < "0" || c2 > "9") && !isASCIIAlpha(c2)) {
      if (this.xmlMode || this.sectionStart + 1 === this._index)
        ;
      else if (this.baseState !== 1) {
        if (c2 !== "=") {
          this.parseFixedEntity(legacy_json_1.default);
        }
      } else {
        this.parseLegacyEntity();
      }
      this._state = this.baseState;
      this._index--;
    }
  };
  Tokenizer2.prototype.decodeNumericEntity = function(offset, base, strict) {
    var sectionStart = this.sectionStart + offset;
    if (sectionStart !== this._index) {
      var entity = this.buffer.substring(sectionStart, this._index);
      var parsed = parseInt(entity, base);
      this.emitPartial(decode_codepoint_1.default(parsed));
      this.sectionStart = strict ? this._index + 1 : this._index;
    }
    this._state = this.baseState;
  };
  Tokenizer2.prototype.stateInNumericEntity = function(c2) {
    if (c2 === ";") {
      this.decodeNumericEntity(2, 10, true);
    } else if (c2 < "0" || c2 > "9") {
      if (!this.xmlMode) {
        this.decodeNumericEntity(2, 10, false);
      } else {
        this._state = this.baseState;
      }
      this._index--;
    }
  };
  Tokenizer2.prototype.stateInHexEntity = function(c2) {
    if (c2 === ";") {
      this.decodeNumericEntity(3, 16, true);
    } else if ((c2 < "a" || c2 > "f") && (c2 < "A" || c2 > "F") && (c2 < "0" || c2 > "9")) {
      if (!this.xmlMode) {
        this.decodeNumericEntity(3, 16, false);
      } else {
        this._state = this.baseState;
      }
      this._index--;
    }
  };
  Tokenizer2.prototype.cleanup = function() {
    if (this.sectionStart < 0) {
      this.buffer = "";
      this.bufferOffset += this._index;
      this._index = 0;
    } else if (this.running) {
      if (this._state === 1) {
        if (this.sectionStart !== this._index) {
          this.cbs.ontext(this.buffer.substr(this.sectionStart));
        }
        this.buffer = "";
        this.bufferOffset += this._index;
        this._index = 0;
      } else if (this.sectionStart === this._index) {
        this.buffer = "";
        this.bufferOffset += this._index;
        this._index = 0;
      } else {
        this.buffer = this.buffer.substr(this.sectionStart);
        this._index -= this.sectionStart;
        this.bufferOffset += this.sectionStart;
      }
      this.sectionStart = 0;
    }
  };
  Tokenizer2.prototype.parse = function() {
    while (this._index < this.buffer.length && this.running) {
      var c2 = this.buffer.charAt(this._index);
      if (this._state === 1) {
        this.stateText(c2);
      } else if (this._state === 12) {
        this.stateInAttributeValueDoubleQuotes(c2);
      } else if (this._state === 9) {
        this.stateInAttributeName(c2);
      } else if (this._state === 19) {
        this.stateInComment(c2);
      } else if (this._state === 20) {
        this.stateInSpecialComment(c2);
      } else if (this._state === 8) {
        this.stateBeforeAttributeName(c2);
      } else if (this._state === 3) {
        this.stateInTagName(c2);
      } else if (this._state === 6) {
        this.stateInClosingTagName(c2);
      } else if (this._state === 2) {
        this.stateBeforeTagName(c2);
      } else if (this._state === 10) {
        this.stateAfterAttributeName(c2);
      } else if (this._state === 13) {
        this.stateInAttributeValueSingleQuotes(c2);
      } else if (this._state === 11) {
        this.stateBeforeAttributeValue(c2);
      } else if (this._state === 5) {
        this.stateBeforeClosingTagName(c2);
      } else if (this._state === 7) {
        this.stateAfterClosingTagName(c2);
      } else if (this._state === 32) {
        this.stateBeforeSpecialS(c2);
      } else if (this._state === 21) {
        this.stateAfterComment1(c2);
      } else if (this._state === 14) {
        this.stateInAttributeValueNoQuotes(c2);
      } else if (this._state === 4) {
        this.stateInSelfClosingTag(c2);
      } else if (this._state === 16) {
        this.stateInDeclaration(c2);
      } else if (this._state === 15) {
        this.stateBeforeDeclaration(c2);
      } else if (this._state === 22) {
        this.stateAfterComment2(c2);
      } else if (this._state === 18) {
        this.stateBeforeComment(c2);
      } else if (this._state === 33) {
        this.stateBeforeSpecialSEnd(c2);
      } else if (this._state === 53) {
        stateAfterSpecialTEnd(this, c2);
      } else if (this._state === 39) {
        stateAfterScript1(this, c2);
      } else if (this._state === 40) {
        stateAfterScript2(this, c2);
      } else if (this._state === 41) {
        stateAfterScript3(this, c2);
      } else if (this._state === 34) {
        stateBeforeScript1(this, c2);
      } else if (this._state === 35) {
        stateBeforeScript2(this, c2);
      } else if (this._state === 36) {
        stateBeforeScript3(this, c2);
      } else if (this._state === 37) {
        stateBeforeScript4(this, c2);
      } else if (this._state === 38) {
        this.stateBeforeSpecialLast(c2, 2);
      } else if (this._state === 42) {
        stateAfterScript4(this, c2);
      } else if (this._state === 43) {
        this.stateAfterSpecialLast(c2, 6);
      } else if (this._state === 44) {
        stateBeforeStyle1(this, c2);
      } else if (this._state === 29) {
        this.stateInCdata(c2);
      } else if (this._state === 45) {
        stateBeforeStyle2(this, c2);
      } else if (this._state === 46) {
        stateBeforeStyle3(this, c2);
      } else if (this._state === 47) {
        this.stateBeforeSpecialLast(c2, 3);
      } else if (this._state === 48) {
        stateAfterStyle1(this, c2);
      } else if (this._state === 49) {
        stateAfterStyle2(this, c2);
      } else if (this._state === 50) {
        stateAfterStyle3(this, c2);
      } else if (this._state === 51) {
        this.stateAfterSpecialLast(c2, 5);
      } else if (this._state === 52) {
        stateBeforeSpecialT(this, c2);
      } else if (this._state === 54) {
        stateBeforeTitle1(this, c2);
      } else if (this._state === 55) {
        stateBeforeTitle2(this, c2);
      } else if (this._state === 56) {
        stateBeforeTitle3(this, c2);
      } else if (this._state === 57) {
        this.stateBeforeSpecialLast(c2, 4);
      } else if (this._state === 58) {
        stateAfterTitle1(this, c2);
      } else if (this._state === 59) {
        stateAfterTitle2(this, c2);
      } else if (this._state === 60) {
        stateAfterTitle3(this, c2);
      } else if (this._state === 61) {
        this.stateAfterSpecialLast(c2, 5);
      } else if (this._state === 17) {
        this.stateInProcessingInstruction(c2);
      } else if (this._state === 64) {
        this.stateInNamedEntity(c2);
      } else if (this._state === 23) {
        stateBeforeCdata1(this, c2);
      } else if (this._state === 62) {
        stateBeforeEntity(this, c2);
      } else if (this._state === 24) {
        stateBeforeCdata2(this, c2);
      } else if (this._state === 25) {
        stateBeforeCdata3(this, c2);
      } else if (this._state === 30) {
        this.stateAfterCdata1(c2);
      } else if (this._state === 31) {
        this.stateAfterCdata2(c2);
      } else if (this._state === 26) {
        stateBeforeCdata4(this, c2);
      } else if (this._state === 27) {
        stateBeforeCdata5(this, c2);
      } else if (this._state === 28) {
        this.stateBeforeCdata6(c2);
      } else if (this._state === 66) {
        this.stateInHexEntity(c2);
      } else if (this._state === 65) {
        this.stateInNumericEntity(c2);
      } else if (this._state === 63) {
        stateBeforeNumericEntity(this, c2);
      } else {
        this.cbs.onerror(Error("unknown _state"), this._state);
      }
      this._index++;
    }
    this.cleanup();
  };
  Tokenizer2.prototype.finish = function() {
    if (this.sectionStart < this._index) {
      this.handleTrailingData();
    }
    this.cbs.onend();
  };
  Tokenizer2.prototype.handleTrailingData = function() {
    var data = this.buffer.substr(this.sectionStart);
    if (this._state === 29 || this._state === 30 || this._state === 31) {
      this.cbs.oncdata(data);
    } else if (this._state === 19 || this._state === 21 || this._state === 22) {
      this.cbs.oncomment(data);
    } else if (this._state === 64 && !this.xmlMode) {
      this.parseLegacyEntity();
      if (this.sectionStart < this._index) {
        this._state = this.baseState;
        this.handleTrailingData();
      }
    } else if (this._state === 65 && !this.xmlMode) {
      this.decodeNumericEntity(2, 10, false);
      if (this.sectionStart < this._index) {
        this._state = this.baseState;
        this.handleTrailingData();
      }
    } else if (this._state === 66 && !this.xmlMode) {
      this.decodeNumericEntity(3, 16, false);
      if (this.sectionStart < this._index) {
        this._state = this.baseState;
        this.handleTrailingData();
      }
    } else if (this._state !== 3 && this._state !== 8 && this._state !== 11 && this._state !== 10 && this._state !== 9 && this._state !== 13 && this._state !== 12 && this._state !== 14 && this._state !== 6) {
      this.cbs.ontext(data);
    }
  };
  Tokenizer2.prototype.getSection = function() {
    return this.buffer.substring(this.sectionStart, this._index);
  };
  Tokenizer2.prototype.emitToken = function(name) {
    this.cbs[name](this.getSection());
    this.sectionStart = -1;
  };
  Tokenizer2.prototype.emitPartial = function(value) {
    if (this.baseState !== 1) {
      this.cbs.onattribdata(value);
    } else {
      this.cbs.ontext(value);
    }
  };
  return Tokenizer2;
}();
Tokenizer$1.default = Tokenizer;
var __importDefault = commonjsGlobal$1 && commonjsGlobal$1.__importDefault || function(mod) {
  return mod && mod.__esModule ? mod : { "default": mod };
};
Object.defineProperty(Parser$3, "__esModule", { value: true });
Parser$3.Parser = void 0;
var Tokenizer_1 = __importDefault(Tokenizer$1);
var formTags = new Set([
  "input",
  "option",
  "optgroup",
  "select",
  "button",
  "datalist",
  "textarea"
]);
var pTag = new Set(["p"]);
var openImpliesClose = {
  tr: new Set(["tr", "th", "td"]),
  th: new Set(["th"]),
  td: new Set(["thead", "th", "td"]),
  body: new Set(["head", "link", "script"]),
  li: new Set(["li"]),
  p: pTag,
  h1: pTag,
  h2: pTag,
  h3: pTag,
  h4: pTag,
  h5: pTag,
  h6: pTag,
  select: formTags,
  input: formTags,
  output: formTags,
  button: formTags,
  datalist: formTags,
  textarea: formTags,
  option: new Set(["option"]),
  optgroup: new Set(["optgroup", "option"]),
  dd: new Set(["dt", "dd"]),
  dt: new Set(["dt", "dd"]),
  address: pTag,
  article: pTag,
  aside: pTag,
  blockquote: pTag,
  details: pTag,
  div: pTag,
  dl: pTag,
  fieldset: pTag,
  figcaption: pTag,
  figure: pTag,
  footer: pTag,
  form: pTag,
  header: pTag,
  hr: pTag,
  main: pTag,
  nav: pTag,
  ol: pTag,
  pre: pTag,
  section: pTag,
  table: pTag,
  ul: pTag,
  rt: new Set(["rt", "rp"]),
  rp: new Set(["rt", "rp"]),
  tbody: new Set(["thead", "tbody"]),
  tfoot: new Set(["thead", "tbody"])
};
var voidElements = new Set([
  "area",
  "base",
  "basefont",
  "br",
  "col",
  "command",
  "embed",
  "frame",
  "hr",
  "img",
  "input",
  "isindex",
  "keygen",
  "link",
  "meta",
  "param",
  "source",
  "track",
  "wbr"
]);
var foreignContextElements = new Set(["math", "svg"]);
var htmlIntegrationElements = new Set([
  "mi",
  "mo",
  "mn",
  "ms",
  "mtext",
  "annotation-xml",
  "foreignObject",
  "desc",
  "title"
]);
var reNameEnd = /\s|\//;
var Parser$2 = function() {
  function Parser2(cbs, options) {
    if (options === void 0) {
      options = {};
    }
    var _a, _b, _c, _d, _e;
    this.startIndex = 0;
    this.endIndex = null;
    this.tagname = "";
    this.attribname = "";
    this.attribvalue = "";
    this.attribs = null;
    this.stack = [];
    this.foreignContext = [];
    this.options = options;
    this.cbs = cbs !== null && cbs !== void 0 ? cbs : {};
    this.lowerCaseTagNames = (_a = options.lowerCaseTags) !== null && _a !== void 0 ? _a : !options.xmlMode;
    this.lowerCaseAttributeNames = (_b = options.lowerCaseAttributeNames) !== null && _b !== void 0 ? _b : !options.xmlMode;
    this.tokenizer = new ((_c = options.Tokenizer) !== null && _c !== void 0 ? _c : Tokenizer_1.default)(this.options, this);
    (_e = (_d = this.cbs).onparserinit) === null || _e === void 0 ? void 0 : _e.call(_d, this);
  }
  Parser2.prototype.updatePosition = function(initialOffset) {
    if (this.endIndex === null) {
      if (this.tokenizer.sectionStart <= initialOffset) {
        this.startIndex = 0;
      } else {
        this.startIndex = this.tokenizer.sectionStart - initialOffset;
      }
    } else {
      this.startIndex = this.endIndex + 1;
    }
    this.endIndex = this.tokenizer.getAbsoluteIndex();
  };
  Parser2.prototype.ontext = function(data) {
    var _a, _b;
    this.updatePosition(1);
    this.endIndex--;
    (_b = (_a = this.cbs).ontext) === null || _b === void 0 ? void 0 : _b.call(_a, data);
  };
  Parser2.prototype.onopentagname = function(name) {
    var _a, _b;
    if (this.lowerCaseTagNames) {
      name = name.toLowerCase();
    }
    this.tagname = name;
    if (!this.options.xmlMode && Object.prototype.hasOwnProperty.call(openImpliesClose, name)) {
      var el2 = void 0;
      while (this.stack.length > 0 && openImpliesClose[name].has(el2 = this.stack[this.stack.length - 1])) {
        this.onclosetag(el2);
      }
    }
    if (this.options.xmlMode || !voidElements.has(name)) {
      this.stack.push(name);
      if (foreignContextElements.has(name)) {
        this.foreignContext.push(true);
      } else if (htmlIntegrationElements.has(name)) {
        this.foreignContext.push(false);
      }
    }
    (_b = (_a = this.cbs).onopentagname) === null || _b === void 0 ? void 0 : _b.call(_a, name);
    if (this.cbs.onopentag)
      this.attribs = {};
  };
  Parser2.prototype.onopentagend = function() {
    var _a, _b;
    this.updatePosition(1);
    if (this.attribs) {
      (_b = (_a = this.cbs).onopentag) === null || _b === void 0 ? void 0 : _b.call(_a, this.tagname, this.attribs);
      this.attribs = null;
    }
    if (!this.options.xmlMode && this.cbs.onclosetag && voidElements.has(this.tagname)) {
      this.cbs.onclosetag(this.tagname);
    }
    this.tagname = "";
  };
  Parser2.prototype.onclosetag = function(name) {
    this.updatePosition(1);
    if (this.lowerCaseTagNames) {
      name = name.toLowerCase();
    }
    if (foreignContextElements.has(name) || htmlIntegrationElements.has(name)) {
      this.foreignContext.pop();
    }
    if (this.stack.length && (this.options.xmlMode || !voidElements.has(name))) {
      var pos = this.stack.lastIndexOf(name);
      if (pos !== -1) {
        if (this.cbs.onclosetag) {
          pos = this.stack.length - pos;
          while (pos--) {
            this.cbs.onclosetag(this.stack.pop());
          }
        } else
          this.stack.length = pos;
      } else if (name === "p" && !this.options.xmlMode) {
        this.onopentagname(name);
        this.closeCurrentTag();
      }
    } else if (!this.options.xmlMode && (name === "br" || name === "p")) {
      this.onopentagname(name);
      this.closeCurrentTag();
    }
  };
  Parser2.prototype.onselfclosingtag = function() {
    if (this.options.xmlMode || this.options.recognizeSelfClosing || this.foreignContext[this.foreignContext.length - 1]) {
      this.closeCurrentTag();
    } else {
      this.onopentagend();
    }
  };
  Parser2.prototype.closeCurrentTag = function() {
    var _a, _b;
    var name = this.tagname;
    this.onopentagend();
    if (this.stack[this.stack.length - 1] === name) {
      (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, name);
      this.stack.pop();
    }
  };
  Parser2.prototype.onattribname = function(name) {
    if (this.lowerCaseAttributeNames) {
      name = name.toLowerCase();
    }
    this.attribname = name;
  };
  Parser2.prototype.onattribdata = function(value) {
    this.attribvalue += value;
  };
  Parser2.prototype.onattribend = function(quote) {
    var _a, _b;
    (_b = (_a = this.cbs).onattribute) === null || _b === void 0 ? void 0 : _b.call(_a, this.attribname, this.attribvalue, quote);
    if (this.attribs && !Object.prototype.hasOwnProperty.call(this.attribs, this.attribname)) {
      this.attribs[this.attribname] = this.attribvalue;
    }
    this.attribname = "";
    this.attribvalue = "";
  };
  Parser2.prototype.getInstructionName = function(value) {
    var idx = value.search(reNameEnd);
    var name = idx < 0 ? value : value.substr(0, idx);
    if (this.lowerCaseTagNames) {
      name = name.toLowerCase();
    }
    return name;
  };
  Parser2.prototype.ondeclaration = function(value) {
    if (this.cbs.onprocessinginstruction) {
      var name_1 = this.getInstructionName(value);
      this.cbs.onprocessinginstruction("!" + name_1, "!" + value);
    }
  };
  Parser2.prototype.onprocessinginstruction = function(value) {
    if (this.cbs.onprocessinginstruction) {
      var name_2 = this.getInstructionName(value);
      this.cbs.onprocessinginstruction("?" + name_2, "?" + value);
    }
  };
  Parser2.prototype.oncomment = function(value) {
    var _a, _b, _c, _d;
    this.updatePosition(4);
    (_b = (_a = this.cbs).oncomment) === null || _b === void 0 ? void 0 : _b.call(_a, value);
    (_d = (_c = this.cbs).oncommentend) === null || _d === void 0 ? void 0 : _d.call(_c);
  };
  Parser2.prototype.oncdata = function(value) {
    var _a, _b, _c, _d, _e, _f;
    this.updatePosition(1);
    if (this.options.xmlMode || this.options.recognizeCDATA) {
      (_b = (_a = this.cbs).oncdatastart) === null || _b === void 0 ? void 0 : _b.call(_a);
      (_d = (_c = this.cbs).ontext) === null || _d === void 0 ? void 0 : _d.call(_c, value);
      (_f = (_e = this.cbs).oncdataend) === null || _f === void 0 ? void 0 : _f.call(_e);
    } else {
      this.oncomment("[CDATA[" + value + "]]");
    }
  };
  Parser2.prototype.onerror = function(err) {
    var _a, _b;
    (_b = (_a = this.cbs).onerror) === null || _b === void 0 ? void 0 : _b.call(_a, err);
  };
  Parser2.prototype.onend = function() {
    var _a, _b;
    if (this.cbs.onclosetag) {
      for (var i = this.stack.length; i > 0; this.cbs.onclosetag(this.stack[--i]))
        ;
    }
    (_b = (_a = this.cbs).onend) === null || _b === void 0 ? void 0 : _b.call(_a);
  };
  Parser2.prototype.reset = function() {
    var _a, _b, _c, _d;
    (_b = (_a = this.cbs).onreset) === null || _b === void 0 ? void 0 : _b.call(_a);
    this.tokenizer.reset();
    this.tagname = "";
    this.attribname = "";
    this.attribs = null;
    this.stack = [];
    (_d = (_c = this.cbs).onparserinit) === null || _d === void 0 ? void 0 : _d.call(_c, this);
  };
  Parser2.prototype.parseComplete = function(data) {
    this.reset();
    this.end(data);
  };
  Parser2.prototype.write = function(chunk) {
    this.tokenizer.write(chunk);
  };
  Parser2.prototype.end = function(chunk) {
    this.tokenizer.end(chunk);
  };
  Parser2.prototype.pause = function() {
    this.tokenizer.pause();
  };
  Parser2.prototype.resume = function() {
    this.tokenizer.resume();
  };
  Parser2.prototype.parseChunk = function(chunk) {
    this.write(chunk);
  };
  Parser2.prototype.done = function(chunk) {
    this.end(chunk);
  };
  return Parser2;
}();
Parser$3.Parser = Parser$2;
var lib$1 = {};
var lib = {};
(function(exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.Doctype = exports.CDATA = exports.Tag = exports.Style = exports.Script = exports.Comment = exports.Directive = exports.Text = exports.Root = exports.isTag = exports.ElementType = void 0;
  var ElementType;
  (function(ElementType2) {
    ElementType2["Root"] = "root";
    ElementType2["Text"] = "text";
    ElementType2["Directive"] = "directive";
    ElementType2["Comment"] = "comment";
    ElementType2["Script"] = "script";
    ElementType2["Style"] = "style";
    ElementType2["Tag"] = "tag";
    ElementType2["CDATA"] = "cdata";
    ElementType2["Doctype"] = "doctype";
  })(ElementType = exports.ElementType || (exports.ElementType = {}));
  function isTag2(elem) {
    return elem.type === ElementType.Tag || elem.type === ElementType.Script || elem.type === ElementType.Style;
  }
  exports.isTag = isTag2;
  exports.Root = ElementType.Root;
  exports.Text = ElementType.Text;
  exports.Directive = ElementType.Directive;
  exports.Comment = ElementType.Comment;
  exports.Script = ElementType.Script;
  exports.Style = ElementType.Style;
  exports.Tag = ElementType.Tag;
  exports.CDATA = ElementType.CDATA;
  exports.Doctype = ElementType.Doctype;
})(lib);
var node = {};
var __extends = commonjsGlobal$1 && commonjsGlobal$1.__extends || function() {
  var extendStatics = function(d2, b2) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d3, b3) {
      d3.__proto__ = b3;
    } || function(d3, b3) {
      for (var p2 in b3)
        if (Object.prototype.hasOwnProperty.call(b3, p2))
          d3[p2] = b3[p2];
    };
    return extendStatics(d2, b2);
  };
  return function(d2, b2) {
    if (typeof b2 !== "function" && b2 !== null)
      throw new TypeError("Class extends value " + String(b2) + " is not a constructor or null");
    extendStatics(d2, b2);
    function __() {
      this.constructor = d2;
    }
    d2.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());
  };
}();
var __assign$1 = commonjsGlobal$1 && commonjsGlobal$1.__assign || function() {
  __assign$1 = Object.assign || function(t2) {
    for (var s2, i = 1, n2 = arguments.length; i < n2; i++) {
      s2 = arguments[i];
      for (var p2 in s2)
        if (Object.prototype.hasOwnProperty.call(s2, p2))
          t2[p2] = s2[p2];
    }
    return t2;
  };
  return __assign$1.apply(this, arguments);
};
Object.defineProperty(node, "__esModule", { value: true });
node.cloneNode = node.hasChildren = node.isDocument = node.isDirective = node.isComment = node.isText = node.isCDATA = node.isTag = node.Element = node.Document = node.NodeWithChildren = node.ProcessingInstruction = node.Comment = node.Text = node.DataNode = node.Node = void 0;
var domelementtype_1 = lib;
var nodeTypes = new Map([
  [domelementtype_1.ElementType.Tag, 1],
  [domelementtype_1.ElementType.Script, 1],
  [domelementtype_1.ElementType.Style, 1],
  [domelementtype_1.ElementType.Directive, 1],
  [domelementtype_1.ElementType.Text, 3],
  [domelementtype_1.ElementType.CDATA, 4],
  [domelementtype_1.ElementType.Comment, 8],
  [domelementtype_1.ElementType.Root, 9]
]);
var Node = function() {
  function Node2(type) {
    this.type = type;
    this.parent = null;
    this.prev = null;
    this.next = null;
    this.startIndex = null;
    this.endIndex = null;
  }
  Object.defineProperty(Node2.prototype, "nodeType", {
    get: function() {
      var _a;
      return (_a = nodeTypes.get(this.type)) !== null && _a !== void 0 ? _a : 1;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Node2.prototype, "parentNode", {
    get: function() {
      return this.parent;
    },
    set: function(parent) {
      this.parent = parent;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Node2.prototype, "previousSibling", {
    get: function() {
      return this.prev;
    },
    set: function(prev) {
      this.prev = prev;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Node2.prototype, "nextSibling", {
    get: function() {
      return this.next;
    },
    set: function(next) {
      this.next = next;
    },
    enumerable: false,
    configurable: true
  });
  Node2.prototype.cloneNode = function(recursive) {
    if (recursive === void 0) {
      recursive = false;
    }
    return cloneNode(this, recursive);
  };
  return Node2;
}();
node.Node = Node;
var DataNode = function(_super) {
  __extends(DataNode2, _super);
  function DataNode2(type, data) {
    var _this = _super.call(this, type) || this;
    _this.data = data;
    return _this;
  }
  Object.defineProperty(DataNode2.prototype, "nodeValue", {
    get: function() {
      return this.data;
    },
    set: function(data) {
      this.data = data;
    },
    enumerable: false,
    configurable: true
  });
  return DataNode2;
}(Node);
node.DataNode = DataNode;
var Text = function(_super) {
  __extends(Text2, _super);
  function Text2(data) {
    return _super.call(this, domelementtype_1.ElementType.Text, data) || this;
  }
  return Text2;
}(DataNode);
node.Text = Text;
var Comment = function(_super) {
  __extends(Comment2, _super);
  function Comment2(data) {
    return _super.call(this, domelementtype_1.ElementType.Comment, data) || this;
  }
  return Comment2;
}(DataNode);
node.Comment = Comment;
var ProcessingInstruction = function(_super) {
  __extends(ProcessingInstruction2, _super);
  function ProcessingInstruction2(name, data) {
    var _this = _super.call(this, domelementtype_1.ElementType.Directive, data) || this;
    _this.name = name;
    return _this;
  }
  return ProcessingInstruction2;
}(DataNode);
node.ProcessingInstruction = ProcessingInstruction;
var NodeWithChildren = function(_super) {
  __extends(NodeWithChildren2, _super);
  function NodeWithChildren2(type, children) {
    var _this = _super.call(this, type) || this;
    _this.children = children;
    return _this;
  }
  Object.defineProperty(NodeWithChildren2.prototype, "firstChild", {
    get: function() {
      var _a;
      return (_a = this.children[0]) !== null && _a !== void 0 ? _a : null;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(NodeWithChildren2.prototype, "lastChild", {
    get: function() {
      return this.children.length > 0 ? this.children[this.children.length - 1] : null;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(NodeWithChildren2.prototype, "childNodes", {
    get: function() {
      return this.children;
    },
    set: function(children) {
      this.children = children;
    },
    enumerable: false,
    configurable: true
  });
  return NodeWithChildren2;
}(Node);
node.NodeWithChildren = NodeWithChildren;
var Document = function(_super) {
  __extends(Document3, _super);
  function Document3(children) {
    return _super.call(this, domelementtype_1.ElementType.Root, children) || this;
  }
  return Document3;
}(NodeWithChildren);
node.Document = Document;
var Element$1 = function(_super) {
  __extends(Element2, _super);
  function Element2(name, attribs, children, type) {
    if (children === void 0) {
      children = [];
    }
    if (type === void 0) {
      type = name === "script" ? domelementtype_1.ElementType.Script : name === "style" ? domelementtype_1.ElementType.Style : domelementtype_1.ElementType.Tag;
    }
    var _this = _super.call(this, type, children) || this;
    _this.name = name;
    _this.attribs = attribs;
    return _this;
  }
  Object.defineProperty(Element2.prototype, "tagName", {
    get: function() {
      return this.name;
    },
    set: function(name) {
      this.name = name;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Element2.prototype, "attributes", {
    get: function() {
      var _this = this;
      return Object.keys(this.attribs).map(function(name) {
        var _a, _b;
        return {
          name,
          value: _this.attribs[name],
          namespace: (_a = _this["x-attribsNamespace"]) === null || _a === void 0 ? void 0 : _a[name],
          prefix: (_b = _this["x-attribsPrefix"]) === null || _b === void 0 ? void 0 : _b[name]
        };
      });
    },
    enumerable: false,
    configurable: true
  });
  return Element2;
}(NodeWithChildren);
node.Element = Element$1;
function isTag(node2) {
  return (0, domelementtype_1.isTag)(node2);
}
node.isTag = isTag;
function isCDATA(node2) {
  return node2.type === domelementtype_1.ElementType.CDATA;
}
node.isCDATA = isCDATA;
function isText(node2) {
  return node2.type === domelementtype_1.ElementType.Text;
}
node.isText = isText;
function isComment(node2) {
  return node2.type === domelementtype_1.ElementType.Comment;
}
node.isComment = isComment;
function isDirective(node2) {
  return node2.type === domelementtype_1.ElementType.Directive;
}
node.isDirective = isDirective;
function isDocument(node2) {
  return node2.type === domelementtype_1.ElementType.Root;
}
node.isDocument = isDocument;
function hasChildren(node2) {
  return Object.prototype.hasOwnProperty.call(node2, "children");
}
node.hasChildren = hasChildren;
function cloneNode(node2, recursive) {
  if (recursive === void 0) {
    recursive = false;
  }
  var result;
  if (isText(node2)) {
    result = new Text(node2.data);
  } else if (isComment(node2)) {
    result = new Comment(node2.data);
  } else if (isTag(node2)) {
    var children = recursive ? cloneChildren(node2.children) : [];
    var clone_1 = new Element$1(node2.name, __assign$1({}, node2.attribs), children);
    children.forEach(function(child) {
      return child.parent = clone_1;
    });
    if (node2["x-attribsNamespace"]) {
      clone_1["x-attribsNamespace"] = __assign$1({}, node2["x-attribsNamespace"]);
    }
    if (node2["x-attribsPrefix"]) {
      clone_1["x-attribsPrefix"] = __assign$1({}, node2["x-attribsPrefix"]);
    }
    result = clone_1;
  } else if (isCDATA(node2)) {
    var children = recursive ? cloneChildren(node2.children) : [];
    var clone_2 = new NodeWithChildren(domelementtype_1.ElementType.CDATA, children);
    children.forEach(function(child) {
      return child.parent = clone_2;
    });
    result = clone_2;
  } else if (isDocument(node2)) {
    var children = recursive ? cloneChildren(node2.children) : [];
    var clone_3 = new Document(children);
    children.forEach(function(child) {
      return child.parent = clone_3;
    });
    if (node2["x-mode"]) {
      clone_3["x-mode"] = node2["x-mode"];
    }
    result = clone_3;
  } else if (isDirective(node2)) {
    var instruction = new ProcessingInstruction(node2.name, node2.data);
    if (node2["x-name"] != null) {
      instruction["x-name"] = node2["x-name"];
      instruction["x-publicId"] = node2["x-publicId"];
      instruction["x-systemId"] = node2["x-systemId"];
    }
    result = instruction;
  } else {
    throw new Error("Not implemented yet: " + node2.type);
  }
  result.startIndex = node2.startIndex;
  result.endIndex = node2.endIndex;
  return result;
}
node.cloneNode = cloneNode;
function cloneChildren(childs) {
  var children = childs.map(function(child) {
    return cloneNode(child, true);
  });
  for (var i = 1; i < children.length; i++) {
    children[i].prev = children[i - 1];
    children[i - 1].next = children[i];
  }
  return children;
}
(function(exports) {
  var __createBinding = commonjsGlobal$1 && commonjsGlobal$1.__createBinding || (Object.create ? function(o, m2, k2, k22) {
    if (k22 === void 0)
      k22 = k2;
    Object.defineProperty(o, k22, { enumerable: true, get: function() {
      return m2[k2];
    } });
  } : function(o, m2, k2, k22) {
    if (k22 === void 0)
      k22 = k2;
    o[k22] = m2[k2];
  });
  var __exportStar = commonjsGlobal$1 && commonjsGlobal$1.__exportStar || function(m2, exports2) {
    for (var p2 in m2)
      if (p2 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p2))
        __createBinding(exports2, m2, p2);
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.DomHandler = void 0;
  var domelementtype_12 = lib;
  var node_1 = node;
  __exportStar(node, exports);
  var reWhitespace = /\s+/g;
  var defaultOpts = {
    normalizeWhitespace: false,
    withStartIndices: false,
    withEndIndices: false,
    xmlMode: false
  };
  var DomHandler2 = function() {
    function DomHandler3(callback, options, elementCB) {
      this.dom = [];
      this.root = new node_1.Document(this.dom);
      this.done = false;
      this.tagStack = [this.root];
      this.lastNode = null;
      this.parser = null;
      if (typeof options === "function") {
        elementCB = options;
        options = defaultOpts;
      }
      if (typeof callback === "object") {
        options = callback;
        callback = void 0;
      }
      this.callback = callback !== null && callback !== void 0 ? callback : null;
      this.options = options !== null && options !== void 0 ? options : defaultOpts;
      this.elementCB = elementCB !== null && elementCB !== void 0 ? elementCB : null;
    }
    DomHandler3.prototype.onparserinit = function(parser) {
      this.parser = parser;
    };
    DomHandler3.prototype.onreset = function() {
      this.dom = [];
      this.root = new node_1.Document(this.dom);
      this.done = false;
      this.tagStack = [this.root];
      this.lastNode = null;
      this.parser = null;
    };
    DomHandler3.prototype.onend = function() {
      if (this.done)
        return;
      this.done = true;
      this.parser = null;
      this.handleCallback(null);
    };
    DomHandler3.prototype.onerror = function(error) {
      this.handleCallback(error);
    };
    DomHandler3.prototype.onclosetag = function() {
      this.lastNode = null;
      var elem = this.tagStack.pop();
      if (this.options.withEndIndices) {
        elem.endIndex = this.parser.endIndex;
      }
      if (this.elementCB)
        this.elementCB(elem);
    };
    DomHandler3.prototype.onopentag = function(name, attribs) {
      var type = this.options.xmlMode ? domelementtype_12.ElementType.Tag : void 0;
      var element = new node_1.Element(name, attribs, void 0, type);
      this.addNode(element);
      this.tagStack.push(element);
    };
    DomHandler3.prototype.ontext = function(data) {
      var normalizeWhitespace = this.options.normalizeWhitespace;
      var lastNode = this.lastNode;
      if (lastNode && lastNode.type === domelementtype_12.ElementType.Text) {
        if (normalizeWhitespace) {
          lastNode.data = (lastNode.data + data).replace(reWhitespace, " ");
        } else {
          lastNode.data += data;
        }
        if (this.options.withEndIndices) {
          lastNode.endIndex = this.parser.endIndex;
        }
      } else {
        if (normalizeWhitespace) {
          data = data.replace(reWhitespace, " ");
        }
        var node2 = new node_1.Text(data);
        this.addNode(node2);
        this.lastNode = node2;
      }
    };
    DomHandler3.prototype.oncomment = function(data) {
      if (this.lastNode && this.lastNode.type === domelementtype_12.ElementType.Comment) {
        this.lastNode.data += data;
        return;
      }
      var node2 = new node_1.Comment(data);
      this.addNode(node2);
      this.lastNode = node2;
    };
    DomHandler3.prototype.oncommentend = function() {
      this.lastNode = null;
    };
    DomHandler3.prototype.oncdatastart = function() {
      var text = new node_1.Text("");
      var node2 = new node_1.NodeWithChildren(domelementtype_12.ElementType.CDATA, [text]);
      this.addNode(node2);
      text.parent = node2;
      this.lastNode = text;
    };
    DomHandler3.prototype.oncdataend = function() {
      this.lastNode = null;
    };
    DomHandler3.prototype.onprocessinginstruction = function(name, data) {
      var node2 = new node_1.ProcessingInstruction(name, data);
      this.addNode(node2);
    };
    DomHandler3.prototype.handleCallback = function(error) {
      if (typeof this.callback === "function") {
        this.callback(error, this.dom);
      } else if (error) {
        throw error;
      }
    };
    DomHandler3.prototype.addNode = function(node2) {
      var parent = this.tagStack[this.tagStack.length - 1];
      var previousSibling = parent.children[parent.children.length - 1];
      if (this.options.withStartIndices) {
        node2.startIndex = this.parser.startIndex;
      }
      if (this.options.withEndIndices) {
        node2.endIndex = this.parser.endIndex;
      }
      parent.children.push(node2);
      if (previousSibling) {
        node2.prev = previousSibling;
        previousSibling.next = node2;
      }
      node2.parent = parent;
      this.lastNode = null;
    };
    return DomHandler3;
  }();
  exports.DomHandler = DomHandler2;
  exports.default = DomHandler2;
})(lib$1);
function unsetRootParent$1(nodes) {
  for (var index2 = 0, len = nodes.length; index2 < len; index2++) {
    var node2 = nodes[index2];
    node2.parent = null;
  }
  return nodes;
}
var utilities = {
  unsetRootParent: unsetRootParent$1
};
var Parser$1 = Parser$3.Parser;
var DomHandler = lib$1.DomHandler;
var unsetRootParent = utilities.unsetRootParent;
function HTMLDOMParser(html, options) {
  if (typeof html !== "string") {
    throw new TypeError("First argument must be a string.");
  }
  if (html === "") {
    return [];
  }
  var handler = new DomHandler(void 0, options);
  new Parser$1(handler, options).end(html);
  return unsetRootParent(handler.dom);
}
var htmlToDom = HTMLDOMParser;
function renderReactProps(props) {
  return Object.entries(props).reduce((memo, [key, prop2]) => {
    if (prop2 instanceof Array) {
      memo[key] = prop2.map((p2) => renderReactProp(p2));
    } else {
      memo[key] = renderReactProp(prop2);
    }
    return memo;
  }, {});
}
function renderReactProp(prop2) {
  if (typeof prop2 === "object" && prop2 !== null && prop2["$$typeof"] === Symbol.for("react.element")) {
    if (prop2.type instanceof Function) {
      return parseReactFromString(server_browser.exports.renderToString(prop2));
    } else {
      return __spreadProps(__spreadValues({}, prop2), {
        props: renderReactProps(prop2.props)
      });
    }
  }
  return prop2;
}
function parseReactFromString(input, options = {}) {
  return domToReact_1(htmlToDom(input, { lowerCaseTags: false, lowerCaseAttributeNames: false }), options);
}
function generateWireSyntaxFromRenderedHtml(html) {
  const clientComponents = new ClientComponents();
  const wireModel = parseReactFromString(html, {
    library: {
      createElement: convertToWireSyntax
    }
  });
  function convertToWireSyntax(type, props, children) {
    let componentType = type;
    let componentProps = props;
    if (props && props["data-client-component"]) {
      const component = {
        name: props["data-client-component"],
        id: props["data-id"],
        named: props["data-named"] === "true"
      };
      const index2 = clientComponents.indexOf(component) > 0 ? clientComponents.indexOf(component) : clientComponents.add(component);
      componentType = `@${index2}`;
      componentProps = JSON.parse(props["data-props"]);
    }
    convertComponentPropsToWireSyntax(componentProps !== null && componentProps !== void 0 ? componentProps : {});
    if (isDomNode(children) || children instanceof Array && children.some(isDomNode)) {
      if (children instanceof Array) {
        children = children.map((child) => {
          if (typeof child === "string") {
            return child;
          }
          const _a2 = child.props, { children: children2 } = _a2, props2 = __objRest(_a2, ["children"]);
          return convertToWireSyntax(child.type, props2, children2);
        });
      } else {
        const _a = children.props, { children: childrenChildren } = _a, childrenProps = __objRest(_a, ["children"]);
        children = convertToWireSyntax(children.type, childrenProps, childrenChildren);
      }
    }
    return ["$", componentType, null, __spreadProps(__spreadValues({}, componentProps), { children })];
  }
  function convertComponentPropsToWireSyntax(componentProps) {
    Object.entries(componentProps).forEach(([key, prop2]) => {
      if (isDomNode(prop2)) {
        const _a = prop2.props, { children } = _a, props = __objRest(_a, ["children"]);
        componentProps[key] = convertToWireSyntax(prop2.type, props, children);
      }
    });
  }
  return (clientComponents.all().map((component, idx) => {
    return `M${idx + 1}:${JSON.stringify(component)}`;
  }).join("\n") + `
J0:${JSON.stringify(wireModel)}`).trim();
}
function isDomNode(item) {
  return item !== null && typeof item === "object" && "_owner" in item;
}
var hasElementType = typeof Element !== "undefined";
var hasMap = typeof Map === "function";
var hasSet = typeof Set === "function";
var hasArrayBuffer = typeof ArrayBuffer === "function" && !!ArrayBuffer.isView;
function equal(a2, b2) {
  if (a2 === b2)
    return true;
  if (a2 && b2 && typeof a2 == "object" && typeof b2 == "object") {
    if (a2.constructor !== b2.constructor)
      return false;
    var length, i, keys;
    if (Array.isArray(a2)) {
      length = a2.length;
      if (length != b2.length)
        return false;
      for (i = length; i-- !== 0; )
        if (!equal(a2[i], b2[i]))
          return false;
      return true;
    }
    var it2;
    if (hasMap && a2 instanceof Map && b2 instanceof Map) {
      if (a2.size !== b2.size)
        return false;
      it2 = a2.entries();
      while (!(i = it2.next()).done)
        if (!b2.has(i.value[0]))
          return false;
      it2 = a2.entries();
      while (!(i = it2.next()).done)
        if (!equal(i.value[1], b2.get(i.value[0])))
          return false;
      return true;
    }
    if (hasSet && a2 instanceof Set && b2 instanceof Set) {
      if (a2.size !== b2.size)
        return false;
      it2 = a2.entries();
      while (!(i = it2.next()).done)
        if (!b2.has(i.value[0]))
          return false;
      return true;
    }
    if (hasArrayBuffer && ArrayBuffer.isView(a2) && ArrayBuffer.isView(b2)) {
      length = a2.length;
      if (length != b2.length)
        return false;
      for (i = length; i-- !== 0; )
        if (a2[i] !== b2[i])
          return false;
      return true;
    }
    if (a2.constructor === RegExp)
      return a2.source === b2.source && a2.flags === b2.flags;
    if (a2.valueOf !== Object.prototype.valueOf)
      return a2.valueOf() === b2.valueOf();
    if (a2.toString !== Object.prototype.toString)
      return a2.toString() === b2.toString();
    keys = Object.keys(a2);
    length = keys.length;
    if (length !== Object.keys(b2).length)
      return false;
    for (i = length; i-- !== 0; )
      if (!Object.prototype.hasOwnProperty.call(b2, keys[i]))
        return false;
    if (hasElementType && a2 instanceof Element)
      return false;
    for (i = length; i-- !== 0; ) {
      if ((keys[i] === "_owner" || keys[i] === "__v" || keys[i] === "__o") && a2.$$typeof) {
        continue;
      }
      if (!equal(a2[keys[i]], b2[keys[i]]))
        return false;
    }
    return true;
  }
  return a2 !== a2 && b2 !== b2;
}
var reactFastCompare = function isEqual(a2, b2) {
  try {
    return equal(a2, b2);
  } catch (error) {
    if ((error.message || "").match(/stack|recursion/i)) {
      console.warn("react-fast-compare cannot handle circular refs");
      return false;
    }
    throw error;
  }
};
var invariant$1 = function(condition, format, a2, b2, c2, d2, e2, f2) {
  if (!condition) {
    var error;
    if (format === void 0) {
      error = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
    } else {
      var args = [a2, b2, c2, d2, e2, f2];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function() {
        return args[argIndex++];
      }));
      error.name = "Invariant Violation";
    }
    error.framesToPop = 1;
    throw error;
  }
};
var browser = invariant$1;
var shallowequal = function shallowEqual(objA, objB, compare, compareContext) {
  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;
  if (ret !== void 0) {
    return !!ret;
  }
  if (objA === objB) {
    return true;
  }
  if (typeof objA !== "object" || !objA || typeof objB !== "object" || !objB) {
    return false;
  }
  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);
  if (keysA.length !== keysB.length) {
    return false;
  }
  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);
  for (var idx = 0; idx < keysA.length; idx++) {
    var key = keysA[idx];
    if (!bHasOwnProperty(key)) {
      return false;
    }
    var valueA = objA[key];
    var valueB = objB[key];
    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;
    if (ret === false || ret === void 0 && valueA !== valueB) {
      return false;
    }
  }
  return true;
};
function a() {
  return (a = Object.assign || function(t2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var r2 = arguments[e2];
      for (var n2 in r2)
        Object.prototype.hasOwnProperty.call(r2, n2) && (t2[n2] = r2[n2]);
    }
    return t2;
  }).apply(this, arguments);
}
function s(t2, e2) {
  t2.prototype = Object.create(e2.prototype), t2.prototype.constructor = t2, c(t2, e2);
}
function c(t2, e2) {
  return (c = Object.setPrototypeOf || function(t3, e3) {
    return t3.__proto__ = e3, t3;
  })(t2, e2);
}
function u(t2, e2) {
  if (t2 == null)
    return {};
  var r2, n2, i = {}, o = Object.keys(t2);
  for (n2 = 0; n2 < o.length; n2++)
    e2.indexOf(r2 = o[n2]) >= 0 || (i[r2] = t2[r2]);
  return i;
}
var l = { BASE: "base", BODY: "body", HEAD: "head", HTML: "html", LINK: "link", META: "meta", NOSCRIPT: "noscript", SCRIPT: "script", STYLE: "style", TITLE: "title", FRAGMENT: "Symbol(react.fragment)" }, p$2 = { rel: ["amphtml", "canonical", "alternate"] }, f$1 = { type: ["application/ld+json"] }, d = { charset: "", name: ["robots", "description"], property: ["og:type", "og:title", "og:url", "og:image", "og:image:alt", "og:description", "twitter:url", "twitter:title", "twitter:description", "twitter:image", "twitter:image:alt", "twitter:card", "twitter:site"] }, h$1 = Object.keys(l).map(function(t2) {
  return l[t2];
}), m$1 = { accesskey: "accessKey", charset: "charSet", class: "className", contenteditable: "contentEditable", contextmenu: "contextMenu", "http-equiv": "httpEquiv", itemprop: "itemProp", tabindex: "tabIndex" }, y$1 = Object.keys(m$1).reduce(function(t2, e2) {
  return t2[m$1[e2]] = e2, t2;
}, {}), T$1 = function(t2, e2) {
  for (var r2 = t2.length - 1; r2 >= 0; r2 -= 1) {
    var n2 = t2[r2];
    if (Object.prototype.hasOwnProperty.call(n2, e2))
      return n2[e2];
  }
  return null;
}, g$1 = function(t2) {
  var e2 = T$1(t2, l.TITLE), r2 = T$1(t2, "titleTemplate");
  if (Array.isArray(e2) && (e2 = e2.join("")), r2 && e2)
    return r2.replace(/%s/g, function() {
      return e2;
    });
  var n2 = T$1(t2, "defaultTitle");
  return e2 || n2 || void 0;
}, b = function(t2) {
  return T$1(t2, "onChangeClientState") || function() {
  };
}, v$1 = function(t2, e2) {
  return e2.filter(function(e3) {
    return e3[t2] !== void 0;
  }).map(function(e3) {
    return e3[t2];
  }).reduce(function(t3, e3) {
    return a({}, t3, e3);
  }, {});
}, A$1 = function(t2, e2) {
  return e2.filter(function(t3) {
    return t3[l.BASE] !== void 0;
  }).map(function(t3) {
    return t3[l.BASE];
  }).reverse().reduce(function(e3, r2) {
    if (!e3.length)
      for (var n2 = Object.keys(r2), i = 0; i < n2.length; i += 1) {
        var o = n2[i].toLowerCase();
        if (t2.indexOf(o) !== -1 && r2[o])
          return e3.concat(r2);
      }
    return e3;
  }, []);
}, C$1 = function(t2, e2, r2) {
  var n2 = {};
  return r2.filter(function(e3) {
    return !!Array.isArray(e3[t2]) || (e3[t2] !== void 0 && console && typeof console.warn == "function" && console.warn("Helmet: " + t2 + ' should be of type "Array". Instead found type "' + typeof e3[t2] + '"'), false);
  }).map(function(e3) {
    return e3[t2];
  }).reverse().reduce(function(t3, r3) {
    var i = {};
    r3.filter(function(t4) {
      for (var r4, o2 = Object.keys(t4), a2 = 0; a2 < o2.length; a2 += 1) {
        var s3 = o2[a2], c3 = s3.toLowerCase();
        e2.indexOf(c3) === -1 || r4 === "rel" && t4[r4].toLowerCase() === "canonical" || c3 === "rel" && t4[c3].toLowerCase() === "stylesheet" || (r4 = c3), e2.indexOf(s3) === -1 || s3 !== "innerHTML" && s3 !== "cssText" && s3 !== "itemprop" || (r4 = s3);
      }
      if (!r4 || !t4[r4])
        return false;
      var u3 = t4[r4].toLowerCase();
      return n2[r4] || (n2[r4] = {}), i[r4] || (i[r4] = {}), !n2[r4][u3] && (i[r4][u3] = true, true);
    }).reverse().forEach(function(e3) {
      return t3.push(e3);
    });
    for (var o = Object.keys(i), s2 = 0; s2 < o.length; s2 += 1) {
      var c2 = o[s2], u2 = a({}, n2[c2], i[c2]);
      n2[c2] = u2;
    }
    return t3;
  }, []).reverse();
}, O$1 = function(t2, e2) {
  if (Array.isArray(t2) && t2.length) {
    for (var r2 = 0; r2 < t2.length; r2 += 1)
      if (t2[r2][e2])
        return true;
  }
  return false;
}, S = function(t2) {
  return Array.isArray(t2) ? t2.join("") : t2;
}, E$1 = function(t2, e2) {
  return Array.isArray(t2) ? t2.reduce(function(t3, r2) {
    return function(t4, e3) {
      for (var r3 = Object.keys(t4), n2 = 0; n2 < r3.length; n2 += 1)
        if (e3[r3[n2]] && e3[r3[n2]].includes(t4[r3[n2]]))
          return true;
      return false;
    }(r2, e2) ? t3.priority.push(r2) : t3.default.push(r2), t3;
  }, { priority: [], default: [] }) : { default: t2 };
}, I = [l.NOSCRIPT, l.SCRIPT, l.STYLE], P$1 = function(t2, e2) {
  return e2 === void 0 && (e2 = true), e2 === false ? String(t2) : String(t2).replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#x27;");
}, L = function(t2) {
  return Object.keys(t2).reduce(function(e2, r2) {
    var n2 = t2[r2] !== void 0 ? r2 + '="' + t2[r2] + '"' : "" + r2;
    return e2 ? e2 + " " + n2 : n2;
  }, "");
}, w = function(t2, e2) {
  return e2 === void 0 && (e2 = {}), Object.keys(t2).reduce(function(e3, r2) {
    return e3[m$1[r2] || r2] = t2[r2], e3;
  }, e2);
}, j = function(e2, r2) {
  return r2.map(function(r3, n2) {
    var i, o = ((i = { key: n2 })["data-rh"] = true, i);
    return Object.keys(r3).forEach(function(t2) {
      var e3 = m$1[t2] || t2;
      e3 === "innerHTML" || e3 === "cssText" ? o.dangerouslySetInnerHTML = { __html: r3.innerHTML || r3.cssText } : o[e3] = r3[t2];
    }), React$2.createElement(e2, o);
  });
}, x = function(e2, r2, n2) {
  switch (e2) {
    case l.TITLE:
      return { toComponent: function() {
        return n3 = r2.titleAttributes, (i = { key: e3 = r2.title })["data-rh"] = true, o = w(n3, i), [React$2.createElement(l.TITLE, o, e3)];
        var e3, n3, i, o;
      }, toString: function() {
        return function(t2, e3, r3, n3) {
          var i = L(r3), o = S(e3);
          return i ? "<" + t2 + ' data-rh="true" ' + i + ">" + P$1(o, n3) + "</" + t2 + ">" : "<" + t2 + ' data-rh="true">' + P$1(o, n3) + "</" + t2 + ">";
        }(e2, r2.title, r2.titleAttributes, n2);
      } };
    case "bodyAttributes":
    case "htmlAttributes":
      return { toComponent: function() {
        return w(r2);
      }, toString: function() {
        return L(r2);
      } };
    default:
      return { toComponent: function() {
        return j(e2, r2);
      }, toString: function() {
        return function(t2, e3, r3) {
          return e3.reduce(function(e4, n3) {
            var i = Object.keys(n3).filter(function(t3) {
              return !(t3 === "innerHTML" || t3 === "cssText");
            }).reduce(function(t3, e5) {
              var i2 = n3[e5] === void 0 ? e5 : e5 + '="' + P$1(n3[e5], r3) + '"';
              return t3 ? t3 + " " + i2 : i2;
            }, ""), o = n3.innerHTML || n3.cssText || "", a2 = I.indexOf(t2) === -1;
            return e4 + "<" + t2 + ' data-rh="true" ' + i + (a2 ? "/>" : ">" + o + "</" + t2 + ">");
          }, "");
        }(e2, r2, n2);
      } };
  }
}, k = function(t2) {
  var e2 = t2.baseTag, r2 = t2.bodyAttributes, n2 = t2.encode, i = t2.htmlAttributes, o = t2.noscriptTags, a2 = t2.styleTags, s2 = t2.title, c2 = s2 === void 0 ? "" : s2, u2 = t2.titleAttributes, h2 = t2.linkTags, m2 = t2.metaTags, y2 = t2.scriptTags, T2 = { toComponent: function() {
  }, toString: function() {
    return "";
  } };
  if (t2.prioritizeSeoTags) {
    var g2 = function(t3) {
      var e3 = t3.linkTags, r3 = t3.scriptTags, n3 = t3.encode, i2 = E$1(t3.metaTags, d), o2 = E$1(e3, p$2), a3 = E$1(r3, f$1);
      return { priorityMethods: { toComponent: function() {
        return [].concat(j(l.META, i2.priority), j(l.LINK, o2.priority), j(l.SCRIPT, a3.priority));
      }, toString: function() {
        return x(l.META, i2.priority, n3) + " " + x(l.LINK, o2.priority, n3) + " " + x(l.SCRIPT, a3.priority, n3);
      } }, metaTags: i2.default, linkTags: o2.default, scriptTags: a3.default };
    }(t2);
    T2 = g2.priorityMethods, h2 = g2.linkTags, m2 = g2.metaTags, y2 = g2.scriptTags;
  }
  return { priority: T2, base: x(l.BASE, e2, n2), bodyAttributes: x("bodyAttributes", r2, n2), htmlAttributes: x("htmlAttributes", i, n2), link: x(l.LINK, h2, n2), meta: x(l.META, m2, n2), noscript: x(l.NOSCRIPT, o, n2), script: x(l.SCRIPT, y2, n2), style: x(l.STYLE, a2, n2), title: x(l.TITLE, { title: c2, titleAttributes: u2 }, n2) };
}, M$1 = React$2.createContext({}), H$1 = r$1.shape({ setHelmet: r$1.func, helmetInstances: r$1.shape({ get: r$1.func, add: r$1.func, remove: r$1.func }) }), N$1 = typeof document != "undefined", R$1 = function(e2) {
  function r2(t2) {
    var n2;
    return (n2 = e2.call(this, t2) || this).instances = [], n2.value = { setHelmet: function(t3) {
      n2.props.context.helmet = t3;
    }, helmetInstances: { get: function() {
      return n2.instances;
    }, add: function(t3) {
      n2.instances.push(t3);
    }, remove: function(t3) {
      var e3 = n2.instances.indexOf(t3);
      n2.instances.splice(e3, 1);
    } } }, r2.canUseDOM || (t2.context.helmet = k({ baseTag: [], bodyAttributes: {}, encodeSpecialCharacters: true, htmlAttributes: {}, linkTags: [], metaTags: [], noscriptTags: [], scriptTags: [], styleTags: [], title: "", titleAttributes: {} })), n2;
  }
  return s(r2, e2), r2.prototype.render = function() {
    return React$2.createElement(M$1.Provider, { value: this.value }, this.props.children);
  }, r2;
}(react.exports.Component);
R$1.canUseDOM = N$1, R$1.propTypes = { context: r$1.shape({ helmet: r$1.shape() }), children: r$1.node.isRequired }, R$1.defaultProps = { context: {} }, R$1.displayName = "HelmetProvider";
var q$1 = function(t2, e2) {
  var r2, n2 = document.head || document.querySelector(l.HEAD), i = n2.querySelectorAll(t2 + "[data-rh]"), o = [].slice.call(i), a2 = [];
  return e2 && e2.length && e2.forEach(function(e3) {
    var n3 = document.createElement(t2);
    for (var i2 in e3)
      Object.prototype.hasOwnProperty.call(e3, i2) && (i2 === "innerHTML" ? n3.innerHTML = e3.innerHTML : i2 === "cssText" ? n3.styleSheet ? n3.styleSheet.cssText = e3.cssText : n3.appendChild(document.createTextNode(e3.cssText)) : n3.setAttribute(i2, e3[i2] === void 0 ? "" : e3[i2]));
    n3.setAttribute("data-rh", "true"), o.some(function(t3, e4) {
      return r2 = e4, n3.isEqualNode(t3);
    }) ? o.splice(r2, 1) : a2.push(n3);
  }), o.forEach(function(t3) {
    return t3.parentNode.removeChild(t3);
  }), a2.forEach(function(t3) {
    return n2.appendChild(t3);
  }), { oldTags: o, newTags: a2 };
}, D$1 = function(t2, e2) {
  var r2 = document.getElementsByTagName(t2)[0];
  if (r2) {
    for (var n2 = r2.getAttribute("data-rh"), i = n2 ? n2.split(",") : [], o = [].concat(i), a2 = Object.keys(e2), s2 = 0; s2 < a2.length; s2 += 1) {
      var c2 = a2[s2], u2 = e2[c2] || "";
      r2.getAttribute(c2) !== u2 && r2.setAttribute(c2, u2), i.indexOf(c2) === -1 && i.push(c2);
      var l2 = o.indexOf(c2);
      l2 !== -1 && o.splice(l2, 1);
    }
    for (var p2 = o.length - 1; p2 >= 0; p2 -= 1)
      r2.removeAttribute(o[p2]);
    i.length === o.length ? r2.removeAttribute("data-rh") : r2.getAttribute("data-rh") !== a2.join(",") && r2.setAttribute("data-rh", a2.join(","));
  }
}, Y$1 = function(t2, e2) {
  var r2 = t2.baseTag, n2 = t2.htmlAttributes, i = t2.linkTags, o = t2.metaTags, a2 = t2.noscriptTags, s2 = t2.onChangeClientState, c2 = t2.scriptTags, u2 = t2.styleTags, p2 = t2.title, f2 = t2.titleAttributes;
  D$1(l.BODY, t2.bodyAttributes), D$1(l.HTML, n2), function(t3, e3) {
    t3 !== void 0 && document.title !== t3 && (document.title = S(t3)), D$1(l.TITLE, e3);
  }(p2, f2);
  var d2 = { baseTag: q$1(l.BASE, r2), linkTags: q$1(l.LINK, i), metaTags: q$1(l.META, o), noscriptTags: q$1(l.NOSCRIPT, a2), scriptTags: q$1(l.SCRIPT, c2), styleTags: q$1(l.STYLE, u2) }, h2 = {}, m2 = {};
  Object.keys(d2).forEach(function(t3) {
    var e3 = d2[t3], r3 = e3.newTags, n3 = e3.oldTags;
    r3.length && (h2[t3] = r3), n3.length && (m2[t3] = d2[t3].oldTags);
  }), e2 && e2(), s2(t2, h2, m2);
}, B = null, K$1 = function(t2) {
  function e2() {
    for (var e3, r3 = arguments.length, n2 = new Array(r3), i = 0; i < r3; i++)
      n2[i] = arguments[i];
    return (e3 = t2.call.apply(t2, [this].concat(n2)) || this).rendered = false, e3;
  }
  s(e2, t2);
  var r2 = e2.prototype;
  return r2.shouldComponentUpdate = function(t3) {
    return !shallowequal(t3, this.props);
  }, r2.componentDidUpdate = function() {
    this.emitChange();
  }, r2.componentWillUnmount = function() {
    this.props.context.helmetInstances.remove(this), this.emitChange();
  }, r2.emitChange = function() {
    var t3, e3, r3 = this.props.context, n2 = r3.setHelmet, i = null, o = (t3 = r3.helmetInstances.get().map(function(t4) {
      var e4 = a({}, t4.props);
      return delete e4.context, e4;
    }), { baseTag: A$1(["href"], t3), bodyAttributes: v$1("bodyAttributes", t3), defer: T$1(t3, "defer"), encode: T$1(t3, "encodeSpecialCharacters"), htmlAttributes: v$1("htmlAttributes", t3), linkTags: C$1(l.LINK, ["rel", "href"], t3), metaTags: C$1(l.META, ["name", "charset", "http-equiv", "property", "itemprop"], t3), noscriptTags: C$1(l.NOSCRIPT, ["innerHTML"], t3), onChangeClientState: b(t3), scriptTags: C$1(l.SCRIPT, ["src", "innerHTML"], t3), styleTags: C$1(l.STYLE, ["cssText"], t3), title: g$1(t3), titleAttributes: v$1("titleAttributes", t3), prioritizeSeoTags: O$1(t3, "prioritizeSeoTags") });
    R$1.canUseDOM ? (e3 = o, B && cancelAnimationFrame(B), e3.defer ? B = requestAnimationFrame(function() {
      Y$1(e3, function() {
        B = null;
      });
    }) : (Y$1(e3), B = null)) : k && (i = k(o)), n2(i);
  }, r2.init = function() {
    this.rendered || (this.rendered = true, this.props.context.helmetInstances.add(this), this.emitChange());
  }, r2.render = function() {
    return this.init(), null;
  }, e2;
}(react.exports.Component);
K$1.propTypes = { context: H$1.isRequired }, K$1.displayName = "HelmetDispatcher";
var U$1 = ["children"], _ = ["children"], z = function(e2) {
  function r2() {
    return e2.apply(this, arguments) || this;
  }
  s(r2, e2);
  var o = r2.prototype;
  return o.shouldComponentUpdate = function(t2) {
    return !reactFastCompare(this.props, t2);
  }, o.mapNestedChildrenToProps = function(t2, e3) {
    if (!e3)
      return null;
    switch (t2.type) {
      case l.SCRIPT:
      case l.NOSCRIPT:
        return { innerHTML: e3 };
      case l.STYLE:
        return { cssText: e3 };
      default:
        throw new Error("<" + t2.type + " /> elements are self-closing and can not contain children. Refer to our API for more information.");
    }
  }, o.flattenArrayTypeChildren = function(t2) {
    var e3, r3 = t2.child, n2 = t2.arrayTypeChildren;
    return a({}, n2, ((e3 = {})[r3.type] = [].concat(n2[r3.type] || [], [a({}, t2.newChildProps, this.mapNestedChildrenToProps(r3, t2.nestedChildren))]), e3));
  }, o.mapObjectTypeChildren = function(t2) {
    var e3, r3, n2 = t2.child, i = t2.newProps, o2 = t2.newChildProps, s2 = t2.nestedChildren;
    switch (n2.type) {
      case l.TITLE:
        return a({}, i, ((e3 = {})[n2.type] = s2, e3.titleAttributes = a({}, o2), e3));
      case l.BODY:
        return a({}, i, { bodyAttributes: a({}, o2) });
      case l.HTML:
        return a({}, i, { htmlAttributes: a({}, o2) });
      default:
        return a({}, i, ((r3 = {})[n2.type] = a({}, o2), r3));
    }
  }, o.mapArrayTypeChildrenToProps = function(t2, e3) {
    var r3 = a({}, e3);
    return Object.keys(t2).forEach(function(e4) {
      var n2;
      r3 = a({}, r3, ((n2 = {})[e4] = t2[e4], n2));
    }), r3;
  }, o.warnOnInvalidChildren = function(t2, e3) {
    return browser(h$1.some(function(e4) {
      return t2.type === e4;
    }), typeof t2.type == "function" ? "You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information." : "Only elements types " + h$1.join(", ") + " are allowed. Helmet does not support rendering <" + t2.type + "> elements. Refer to our API for more information."), browser(!e3 || typeof e3 == "string" || Array.isArray(e3) && !e3.some(function(t3) {
      return typeof t3 != "string";
    }), "Helmet expects a string as a child of <" + t2.type + ">. Did you forget to wrap your children in braces? ( <" + t2.type + ">{``}</" + t2.type + "> ) Refer to our API for more information."), true;
  }, o.mapChildrenToProps = function(e3, r3) {
    var n2 = this, i = {};
    return React$2.Children.forEach(e3, function(t2) {
      if (t2 && t2.props) {
        var e4 = t2.props, o2 = e4.children, a2 = u(e4, U$1), s2 = Object.keys(a2).reduce(function(t3, e5) {
          return t3[y$1[e5] || e5] = a2[e5], t3;
        }, {}), c2 = t2.type;
        switch (typeof c2 == "symbol" ? c2 = c2.toString() : n2.warnOnInvalidChildren(t2, o2), c2) {
          case l.FRAGMENT:
            r3 = n2.mapChildrenToProps(o2, r3);
            break;
          case l.LINK:
          case l.META:
          case l.NOSCRIPT:
          case l.SCRIPT:
          case l.STYLE:
            i = n2.flattenArrayTypeChildren({ child: t2, arrayTypeChildren: i, newChildProps: s2, nestedChildren: o2 });
            break;
          default:
            r3 = n2.mapObjectTypeChildren({ child: t2, newProps: r3, newChildProps: s2, nestedChildren: o2 });
        }
      }
    }), this.mapArrayTypeChildrenToProps(i, r3);
  }, o.render = function() {
    var e3 = this.props, r3 = e3.children, n2 = a({}, u(e3, _));
    return r3 && (n2 = this.mapChildrenToProps(r3, n2)), React$2.createElement(M$1.Consumer, null, function(e4) {
      return React$2.createElement(K$1, a({}, n2, { context: e4 }));
    });
  }, r2;
}(react.exports.Component);
z.propTypes = { base: r$1.object, bodyAttributes: r$1.object, children: r$1.oneOfType([r$1.arrayOf(r$1.node), r$1.node]), defaultTitle: r$1.string, defer: r$1.bool, encodeSpecialCharacters: r$1.bool, htmlAttributes: r$1.object, link: r$1.arrayOf(r$1.object), meta: r$1.arrayOf(r$1.object), noscript: r$1.arrayOf(r$1.object), onChangeClientState: r$1.func, script: r$1.arrayOf(r$1.object), style: r$1.arrayOf(r$1.object), title: r$1.string, titleAttributes: r$1.object, titleTemplate: r$1.string, prioritizeSeoTags: r$1.bool }, z.defaultProps = { defer: true, encodeSpecialCharacters: true, prioritizeSeoTags: false }, z.displayName = "Helmet";
function Html({ children, head }) {
  return React$2.createElement("html", { lang: "en" }, React$2.createElement("head", { dangerouslySetInnerHTML: { __html: head } }), React$2.createElement("body", null, React$2.createElement("div", { id: "root" }, children), false));
}
class HydrationWriter {
  constructor() {
    this.chunks = [];
    this.drainCallback = () => {
    };
  }
  write(chunk) {
    this.chunks.push(chunk.toString());
  }
  on(event, callback) {
    if (event === Events.drain) {
      this.drainCallback = callback;
    }
  }
  drain() {
    this.drainCallback();
  }
  destroy() {
  }
  end() {
  }
  toString() {
    return this.chunks.join("");
  }
}
const Events = {
  drain: "drain"
};
function getContext() {
  return globalThis.__ctx;
}
function getCache() {
  return globalThis.__cache;
}
function runDelayedFunction(fn) {
  const context2 = getContext();
  if (!(context2 === null || context2 === void 0 ? void 0 : context2.waitUntil)) {
    return fn();
  }
  return context2.waitUntil(fn());
}
const DEFAULT_SUBREQUEST_CACHE_OPTIONS = {
  maxAge: 1,
  staleWhileRevalidate: 9
};
function generateCacheControlHeader(options) {
  if (options.noStore) {
    return "no-store";
  }
  return [
    options.private ? "private" : "public",
    `max-age=${options.maxAge}`,
    `stale-while-revalidate=${options.staleWhileRevalidate}`
  ].join(", ");
}
function getCacheControlHeader({ dev }) {
  return dev ? "cache-control-preview" : "cache-control";
}
function hashKey(key) {
  const rawKey = key instanceof Array ? key : [key];
  return rawKey.map((k2) => JSON.stringify(k2)).join("");
}
function getKeyUrl(key) {
  return `https://shopify.dev/?${key}`;
}
async function getItemFromCache(key) {
  const cache = getCache();
  if (!cache) {
    return;
  }
  const url = getKeyUrl(hashKey(key));
  const request = new Request(url);
  const response = await cache.match(request);
  if (!response)
    return;
  return [await response.json(), response];
}
async function setItemInCache(key, value, userCacheOptions) {
  const cache = getCache();
  if (!cache) {
    return;
  }
  const url = getKeyUrl(hashKey(key));
  const request = new Request(url);
  const cacheOptions = __spreadValues(__spreadValues({}, DEFAULT_SUBREQUEST_CACHE_OPTIONS), userCacheOptions !== null && userCacheOptions !== void 0 ? userCacheOptions : {});
  const headers = new Headers({
    "cache-control": generateCacheControlHeader(cacheOptions)
  });
  const response = new Response(JSON.stringify(value), { headers });
  await cache.put(request, response);
}
async function deleteItemFromCache(key) {
  const cache = getCache();
  if (!cache)
    return;
  const url = getKeyUrl(hashKey(key));
  const request = new Request(url);
  await cache.delete(request);
}
function isStale$1(response) {
  const responseDate = response.headers.get("date");
  const responseCacheControl = response.headers.get("cache-control");
  if (!responseDate || !responseCacheControl)
    return false;
  const responseMaxAgeMatch = responseCacheControl.match(/max-age=(\d+)/);
  if (!responseMaxAgeMatch)
    return false;
  const responseMaxAge = parseInt(responseMaxAgeMatch[1]);
  const ageInMs = new Date().valueOf() - new Date(responseDate).valueOf();
  const age = ageInMs / 1e3;
  return age > responseMaxAge;
}
class ServerComponentResponse extends Response {
  constructor() {
    super(...arguments);
    this.wait = false;
    this.customBody = "";
  }
  doNotStream() {
    this.wait = true;
  }
  canStream() {
    return !this.wait;
  }
  cache(options) {
    this.cacheOptions = options;
  }
  get cacheControlHeader() {
    var _a;
    const options = __spreadValues(__spreadValues({}, DEFAULT_CACHE_OPTIONS), (_a = this.cacheOptions) !== null && _a !== void 0 ? _a : {});
    return generateCacheControlHeader(options);
  }
  send(body) {
    if (typeof body === "object" && body.$$typeof === Symbol.for("react.element")) {
      this.customBody = server_browser.exports.renderToString(body);
    } else {
      this.customBody = body;
    }
    return null;
  }
}
const DEFAULT_CACHE_OPTIONS = {
  maxAge: 60 * 60,
  staleWhileRevalidate: 23 * 60 * 60
};
var Subscribable = /* @__PURE__ */ function() {
  function Subscribable2() {
    this.listeners = [];
  }
  var _proto = Subscribable2.prototype;
  _proto.subscribe = function subscribe(listener) {
    var _this = this;
    var callback = listener || function() {
      return void 0;
    };
    this.listeners.push(callback);
    this.onSubscribe();
    return function() {
      _this.listeners = _this.listeners.filter(function(x2) {
        return x2 !== callback;
      });
      _this.onUnsubscribe();
    };
  };
  _proto.hasListeners = function hasListeners() {
    return this.listeners.length > 0;
  };
  _proto.onSubscribe = function onSubscribe() {
  };
  _proto.onUnsubscribe = function onUnsubscribe() {
  };
  return Subscribable2;
}();
var isServer = typeof window === "undefined";
function noop() {
  return void 0;
}
function functionalUpdate(updater, input) {
  return typeof updater === "function" ? updater(input) : updater;
}
function isValidTimeout(value) {
  return typeof value === "number" && value >= 0 && value !== Infinity;
}
function ensureQueryKeyArray(value) {
  return Array.isArray(value) ? value : [value];
}
function timeUntilStale(updatedAt, staleTime) {
  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);
}
function parseQueryArgs(arg1, arg2, arg3) {
  if (!isQueryKey(arg1)) {
    return arg1;
  }
  if (typeof arg2 === "function") {
    return _extends$1({}, arg3, {
      queryKey: arg1,
      queryFn: arg2
    });
  }
  return _extends$1({}, arg2, {
    queryKey: arg1
  });
}
function parseFilterArgs(arg1, arg2, arg3) {
  return isQueryKey(arg1) ? [_extends$1({}, arg2, {
    queryKey: arg1
  }), arg3] : [arg1 || {}, arg2];
}
function mapQueryStatusFilter(active, inactive) {
  if (active === true && inactive === true || active == null && inactive == null) {
    return "all";
  } else if (active === false && inactive === false) {
    return "none";
  } else {
    var isActive = active != null ? active : !inactive;
    return isActive ? "active" : "inactive";
  }
}
function matchQuery(filters, query) {
  var active = filters.active, exact = filters.exact, fetching = filters.fetching, inactive = filters.inactive, predicate = filters.predicate, queryKey = filters.queryKey, stale = filters.stale;
  if (isQueryKey(queryKey)) {
    if (exact) {
      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {
        return false;
      }
    } else if (!partialMatchKey(query.queryKey, queryKey)) {
      return false;
    }
  }
  var queryStatusFilter = mapQueryStatusFilter(active, inactive);
  if (queryStatusFilter === "none") {
    return false;
  } else if (queryStatusFilter !== "all") {
    var isActive = query.isActive();
    if (queryStatusFilter === "active" && !isActive) {
      return false;
    }
    if (queryStatusFilter === "inactive" && isActive) {
      return false;
    }
  }
  if (typeof stale === "boolean" && query.isStale() !== stale) {
    return false;
  }
  if (typeof fetching === "boolean" && query.isFetching() !== fetching) {
    return false;
  }
  if (predicate && !predicate(query)) {
    return false;
  }
  return true;
}
function matchMutation(filters, mutation) {
  var exact = filters.exact, fetching = filters.fetching, predicate = filters.predicate, mutationKey = filters.mutationKey;
  if (isQueryKey(mutationKey)) {
    if (!mutation.options.mutationKey) {
      return false;
    }
    if (exact) {
      if (hashQueryKey(mutation.options.mutationKey) !== hashQueryKey(mutationKey)) {
        return false;
      }
    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {
      return false;
    }
  }
  if (typeof fetching === "boolean" && mutation.state.status === "loading" !== fetching) {
    return false;
  }
  if (predicate && !predicate(mutation)) {
    return false;
  }
  return true;
}
function hashQueryKeyByOptions(queryKey, options) {
  var hashFn = (options == null ? void 0 : options.queryKeyHashFn) || hashQueryKey;
  return hashFn(queryKey);
}
function hashQueryKey(queryKey) {
  var asArray = ensureQueryKeyArray(queryKey);
  return stableValueHash(asArray);
}
function stableValueHash(value) {
  return JSON.stringify(value, function(_2, val) {
    return isPlainObject(val) ? Object.keys(val).sort().reduce(function(result, key) {
      result[key] = val[key];
      return result;
    }, {}) : val;
  });
}
function partialMatchKey(a2, b2) {
  return partialDeepEqual(ensureQueryKeyArray(a2), ensureQueryKeyArray(b2));
}
function partialDeepEqual(a2, b2) {
  if (a2 === b2) {
    return true;
  }
  if (typeof a2 !== typeof b2) {
    return false;
  }
  if (a2 && b2 && typeof a2 === "object" && typeof b2 === "object") {
    return !Object.keys(b2).some(function(key) {
      return !partialDeepEqual(a2[key], b2[key]);
    });
  }
  return false;
}
function replaceEqualDeep(a2, b2) {
  if (a2 === b2) {
    return a2;
  }
  var array = Array.isArray(a2) && Array.isArray(b2);
  if (array || isPlainObject(a2) && isPlainObject(b2)) {
    var aSize = array ? a2.length : Object.keys(a2).length;
    var bItems = array ? b2 : Object.keys(b2);
    var bSize = bItems.length;
    var copy2 = array ? [] : {};
    var equalItems = 0;
    for (var i = 0; i < bSize; i++) {
      var key = array ? i : bItems[i];
      copy2[key] = replaceEqualDeep(a2[key], b2[key]);
      if (copy2[key] === a2[key]) {
        equalItems++;
      }
    }
    return aSize === bSize && equalItems === aSize ? a2 : copy2;
  }
  return b2;
}
function shallowEqualObjects(a2, b2) {
  if (a2 && !b2 || b2 && !a2) {
    return false;
  }
  for (var key in a2) {
    if (a2[key] !== b2[key]) {
      return false;
    }
  }
  return true;
}
function isPlainObject(o) {
  if (!hasObjectPrototype(o)) {
    return false;
  }
  var ctor = o.constructor;
  if (typeof ctor === "undefined") {
    return true;
  }
  var prot = ctor.prototype;
  if (!hasObjectPrototype(prot)) {
    return false;
  }
  if (!prot.hasOwnProperty("isPrototypeOf")) {
    return false;
  }
  return true;
}
function hasObjectPrototype(o) {
  return Object.prototype.toString.call(o) === "[object Object]";
}
function isQueryKey(value) {
  return typeof value === "string" || Array.isArray(value);
}
function sleep(timeout) {
  return new Promise(function(resolve) {
    setTimeout(resolve, timeout);
  });
}
function scheduleMicrotask(callback) {
  Promise.resolve().then(callback).catch(function(error) {
    return setTimeout(function() {
      throw error;
    });
  });
}
function getAbortController() {
  if (typeof AbortController === "function") {
    return new AbortController();
  }
}
var FocusManager = /* @__PURE__ */ function(_Subscribable) {
  _inheritsLoose(FocusManager2, _Subscribable);
  function FocusManager2() {
    return _Subscribable.apply(this, arguments) || this;
  }
  var _proto = FocusManager2.prototype;
  _proto.onSubscribe = function onSubscribe() {
    if (!this.removeEventListener) {
      this.setDefaultEventListener();
    }
  };
  _proto.setEventListener = function setEventListener(setup) {
    var _this = this;
    if (this.removeEventListener) {
      this.removeEventListener();
    }
    this.removeEventListener = setup(function(focused) {
      if (typeof focused === "boolean") {
        _this.setFocused(focused);
      } else {
        _this.onFocus();
      }
    });
  };
  _proto.setFocused = function setFocused(focused) {
    this.focused = focused;
    if (focused) {
      this.onFocus();
    }
  };
  _proto.onFocus = function onFocus() {
    this.listeners.forEach(function(listener) {
      listener();
    });
  };
  _proto.isFocused = function isFocused() {
    if (typeof this.focused === "boolean") {
      return this.focused;
    }
    if (typeof document === "undefined") {
      return true;
    }
    return [void 0, "visible", "prerender"].includes(document.visibilityState);
  };
  _proto.setDefaultEventListener = function setDefaultEventListener() {
    var _window;
    if (!isServer && ((_window = window) == null ? void 0 : _window.addEventListener)) {
      this.setEventListener(function(onFocus) {
        var listener = function listener2() {
          return onFocus();
        };
        window.addEventListener("visibilitychange", listener, false);
        window.addEventListener("focus", listener, false);
        return function() {
          window.removeEventListener("visibilitychange", listener);
          window.removeEventListener("focus", listener);
        };
      });
    }
  };
  return FocusManager2;
}(Subscribable);
var focusManager = new FocusManager();
var OnlineManager = /* @__PURE__ */ function(_Subscribable) {
  _inheritsLoose(OnlineManager2, _Subscribable);
  function OnlineManager2() {
    return _Subscribable.apply(this, arguments) || this;
  }
  var _proto = OnlineManager2.prototype;
  _proto.onSubscribe = function onSubscribe() {
    if (!this.removeEventListener) {
      this.setDefaultEventListener();
    }
  };
  _proto.setEventListener = function setEventListener(setup) {
    var _this = this;
    if (this.removeEventListener) {
      this.removeEventListener();
    }
    this.removeEventListener = setup(function(online) {
      if (typeof online === "boolean") {
        _this.setOnline(online);
      } else {
        _this.onOnline();
      }
    });
  };
  _proto.setOnline = function setOnline(online) {
    this.online = online;
    if (online) {
      this.onOnline();
    }
  };
  _proto.onOnline = function onOnline() {
    this.listeners.forEach(function(listener) {
      listener();
    });
  };
  _proto.isOnline = function isOnline() {
    if (typeof this.online === "boolean") {
      return this.online;
    }
    if (typeof navigator === "undefined" || typeof navigator.onLine === "undefined") {
      return true;
    }
    return navigator.onLine;
  };
  _proto.setDefaultEventListener = function setDefaultEventListener() {
    var _window;
    if (!isServer && ((_window = window) == null ? void 0 : _window.addEventListener)) {
      this.setEventListener(function(onOnline) {
        var listener = function listener2() {
          return onOnline();
        };
        window.addEventListener("online", listener, false);
        window.addEventListener("offline", listener, false);
        return function() {
          window.removeEventListener("online", listener);
          window.removeEventListener("offline", listener);
        };
      });
    }
  };
  return OnlineManager2;
}(Subscribable);
var onlineManager = new OnlineManager();
function defaultRetryDelay(failureCount) {
  return Math.min(1e3 * Math.pow(2, failureCount), 3e4);
}
function isCancelable(value) {
  return typeof (value == null ? void 0 : value.cancel) === "function";
}
var CancelledError = function CancelledError2(options) {
  this.revert = options == null ? void 0 : options.revert;
  this.silent = options == null ? void 0 : options.silent;
};
function isCancelledError(value) {
  return value instanceof CancelledError;
}
var Retryer = function Retryer2(config) {
  var _this = this;
  var cancelRetry = false;
  var cancelFn;
  var continueFn;
  var promiseResolve;
  var promiseReject;
  this.abort = config.abort;
  this.cancel = function(cancelOptions) {
    return cancelFn == null ? void 0 : cancelFn(cancelOptions);
  };
  this.cancelRetry = function() {
    cancelRetry = true;
  };
  this.continue = function() {
    return continueFn == null ? void 0 : continueFn();
  };
  this.failureCount = 0;
  this.isPaused = false;
  this.isResolved = false;
  this.isTransportCancelable = false;
  this.promise = new Promise(function(outerResolve, outerReject) {
    promiseResolve = outerResolve;
    promiseReject = outerReject;
  });
  var resolve = function resolve2(value) {
    if (!_this.isResolved) {
      _this.isResolved = true;
      config.onSuccess == null ? void 0 : config.onSuccess(value);
      continueFn == null ? void 0 : continueFn();
      promiseResolve(value);
    }
  };
  var reject = function reject2(value) {
    if (!_this.isResolved) {
      _this.isResolved = true;
      config.onError == null ? void 0 : config.onError(value);
      continueFn == null ? void 0 : continueFn();
      promiseReject(value);
    }
  };
  var pause = function pause2() {
    return new Promise(function(continueResolve) {
      continueFn = continueResolve;
      _this.isPaused = true;
      config.onPause == null ? void 0 : config.onPause();
    }).then(function() {
      continueFn = void 0;
      _this.isPaused = false;
      config.onContinue == null ? void 0 : config.onContinue();
    });
  };
  var run = function run2() {
    if (_this.isResolved) {
      return;
    }
    var promiseOrValue;
    try {
      promiseOrValue = config.fn();
    } catch (error) {
      promiseOrValue = Promise.reject(error);
    }
    cancelFn = function cancelFn2(cancelOptions) {
      if (!_this.isResolved) {
        reject(new CancelledError(cancelOptions));
        _this.abort == null ? void 0 : _this.abort();
        if (isCancelable(promiseOrValue)) {
          try {
            promiseOrValue.cancel();
          } catch (_unused) {
          }
        }
      }
    };
    _this.isTransportCancelable = isCancelable(promiseOrValue);
    Promise.resolve(promiseOrValue).then(resolve).catch(function(error) {
      var _config$retry, _config$retryDelay;
      if (_this.isResolved) {
        return;
      }
      var retry = (_config$retry = config.retry) != null ? _config$retry : 3;
      var retryDelay = (_config$retryDelay = config.retryDelay) != null ? _config$retryDelay : defaultRetryDelay;
      var delay = typeof retryDelay === "function" ? retryDelay(_this.failureCount, error) : retryDelay;
      var shouldRetry = retry === true || typeof retry === "number" && _this.failureCount < retry || typeof retry === "function" && retry(_this.failureCount, error);
      if (cancelRetry || !shouldRetry) {
        reject(error);
        return;
      }
      _this.failureCount++;
      config.onFail == null ? void 0 : config.onFail(_this.failureCount, error);
      sleep(delay).then(function() {
        if (!focusManager.isFocused() || !onlineManager.isOnline()) {
          return pause();
        }
      }).then(function() {
        if (cancelRetry) {
          reject(error);
        } else {
          run2();
        }
      });
    });
  };
  run();
};
var NotifyManager = /* @__PURE__ */ function() {
  function NotifyManager2() {
    this.queue = [];
    this.transactions = 0;
    this.notifyFn = function(callback) {
      callback();
    };
    this.batchNotifyFn = function(callback) {
      callback();
    };
  }
  var _proto = NotifyManager2.prototype;
  _proto.batch = function batch(callback) {
    this.transactions++;
    var result = callback();
    this.transactions--;
    if (!this.transactions) {
      this.flush();
    }
    return result;
  };
  _proto.schedule = function schedule(callback) {
    var _this = this;
    if (this.transactions) {
      this.queue.push(callback);
    } else {
      scheduleMicrotask(function() {
        _this.notifyFn(callback);
      });
    }
  };
  _proto.batchCalls = function batchCalls(callback) {
    var _this2 = this;
    return function() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this2.schedule(function() {
        callback.apply(void 0, args);
      });
    };
  };
  _proto.flush = function flush() {
    var _this3 = this;
    var queue = this.queue;
    this.queue = [];
    if (queue.length) {
      scheduleMicrotask(function() {
        _this3.batchNotifyFn(function() {
          queue.forEach(function(callback) {
            _this3.notifyFn(callback);
          });
        });
      });
    }
  };
  _proto.setNotifyFunction = function setNotifyFunction(fn) {
    this.notifyFn = fn;
  };
  _proto.setBatchNotifyFunction = function setBatchNotifyFunction(fn) {
    this.batchNotifyFn = fn;
  };
  return NotifyManager2;
}();
var notifyManager = new NotifyManager();
var logger$1 = console || {
  error: noop,
  warn: noop,
  log: noop
};
function getLogger() {
  return logger$1;
}
function setLogger(newLogger) {
  logger$1 = newLogger;
}
var Query = /* @__PURE__ */ function() {
  function Query2(config) {
    this.abortSignalConsumed = false;
    this.defaultOptions = config.defaultOptions;
    this.setOptions(config.options);
    this.observers = [];
    this.cache = config.cache;
    this.queryKey = config.queryKey;
    this.queryHash = config.queryHash;
    this.initialState = config.state || this.getDefaultState(this.options);
    this.state = this.initialState;
    this.meta = config.meta;
    this.scheduleGc();
  }
  var _proto = Query2.prototype;
  _proto.setOptions = function setOptions(options) {
    var _this$options$cacheTi;
    this.options = _extends$1({}, this.defaultOptions, options);
    this.meta = options == null ? void 0 : options.meta;
    this.cacheTime = Math.max(this.cacheTime || 0, (_this$options$cacheTi = this.options.cacheTime) != null ? _this$options$cacheTi : 5 * 60 * 1e3);
  };
  _proto.setDefaultOptions = function setDefaultOptions(options) {
    this.defaultOptions = options;
  };
  _proto.scheduleGc = function scheduleGc() {
    var _this = this;
    this.clearGcTimeout();
    if (isValidTimeout(this.cacheTime)) {
      this.gcTimeout = setTimeout(function() {
        _this.optionalRemove();
      }, this.cacheTime);
    }
  };
  _proto.clearGcTimeout = function clearGcTimeout() {
    clearTimeout(this.gcTimeout);
    this.gcTimeout = void 0;
  };
  _proto.optionalRemove = function optionalRemove() {
    if (!this.observers.length && !this.state.isFetching) {
      this.cache.remove(this);
    }
  };
  _proto.setData = function setData(updater, options) {
    var _this$options$isDataE, _this$options;
    var prevData = this.state.data;
    var data = functionalUpdate(updater, prevData);
    if ((_this$options$isDataE = (_this$options = this.options).isDataEqual) == null ? void 0 : _this$options$isDataE.call(_this$options, prevData, data)) {
      data = prevData;
    } else if (this.options.structuralSharing !== false) {
      data = replaceEqualDeep(prevData, data);
    }
    this.dispatch({
      data,
      type: "success",
      dataUpdatedAt: options == null ? void 0 : options.updatedAt
    });
    return data;
  };
  _proto.setState = function setState(state2, setStateOptions) {
    this.dispatch({
      type: "setState",
      state: state2,
      setStateOptions
    });
  };
  _proto.cancel = function cancel(options) {
    var _this$retryer;
    var promise = this.promise;
    (_this$retryer = this.retryer) == null ? void 0 : _this$retryer.cancel(options);
    return promise ? promise.then(noop).catch(noop) : Promise.resolve();
  };
  _proto.destroy = function destroy() {
    this.clearGcTimeout();
    this.cancel({
      silent: true
    });
  };
  _proto.reset = function reset() {
    this.destroy();
    this.setState(this.initialState);
  };
  _proto.isActive = function isActive() {
    return this.observers.some(function(observer) {
      return observer.options.enabled !== false;
    });
  };
  _proto.isFetching = function isFetching() {
    return this.state.isFetching;
  };
  _proto.isStale = function isStale2() {
    return this.state.isInvalidated || !this.state.dataUpdatedAt || this.observers.some(function(observer) {
      return observer.getCurrentResult().isStale;
    });
  };
  _proto.isStaleByTime = function isStaleByTime(staleTime) {
    if (staleTime === void 0) {
      staleTime = 0;
    }
    return this.state.isInvalidated || !this.state.dataUpdatedAt || !timeUntilStale(this.state.dataUpdatedAt, staleTime);
  };
  _proto.onFocus = function onFocus() {
    var _this$retryer2;
    var observer = this.observers.find(function(x2) {
      return x2.shouldFetchOnWindowFocus();
    });
    if (observer) {
      observer.refetch();
    }
    (_this$retryer2 = this.retryer) == null ? void 0 : _this$retryer2.continue();
  };
  _proto.onOnline = function onOnline() {
    var _this$retryer3;
    var observer = this.observers.find(function(x2) {
      return x2.shouldFetchOnReconnect();
    });
    if (observer) {
      observer.refetch();
    }
    (_this$retryer3 = this.retryer) == null ? void 0 : _this$retryer3.continue();
  };
  _proto.addObserver = function addObserver(observer) {
    if (this.observers.indexOf(observer) === -1) {
      this.observers.push(observer);
      this.clearGcTimeout();
      this.cache.notify({
        type: "observerAdded",
        query: this,
        observer
      });
    }
  };
  _proto.removeObserver = function removeObserver(observer) {
    if (this.observers.indexOf(observer) !== -1) {
      this.observers = this.observers.filter(function(x2) {
        return x2 !== observer;
      });
      if (!this.observers.length) {
        if (this.retryer) {
          if (this.retryer.isTransportCancelable || this.abortSignalConsumed) {
            this.retryer.cancel({
              revert: true
            });
          } else {
            this.retryer.cancelRetry();
          }
        }
        if (this.cacheTime) {
          this.scheduleGc();
        } else {
          this.cache.remove(this);
        }
      }
      this.cache.notify({
        type: "observerRemoved",
        query: this,
        observer
      });
    }
  };
  _proto.getObserversCount = function getObserversCount() {
    return this.observers.length;
  };
  _proto.invalidate = function invalidate() {
    if (!this.state.isInvalidated) {
      this.dispatch({
        type: "invalidate"
      });
    }
  };
  _proto.fetch = function fetch2(options, fetchOptions) {
    var _this2 = this, _this$options$behavio, _context$fetchOptions, _abortController$abor;
    if (this.state.isFetching) {
      if (this.state.dataUpdatedAt && (fetchOptions == null ? void 0 : fetchOptions.cancelRefetch)) {
        this.cancel({
          silent: true
        });
      } else if (this.promise) {
        return this.promise;
      }
    }
    if (options) {
      this.setOptions(options);
    }
    if (!this.options.queryFn) {
      var observer = this.observers.find(function(x2) {
        return x2.options.queryFn;
      });
      if (observer) {
        this.setOptions(observer.options);
      }
    }
    var queryKey = ensureQueryKeyArray(this.queryKey);
    var abortController = getAbortController();
    var queryFnContext = {
      queryKey,
      pageParam: void 0,
      meta: this.meta
    };
    Object.defineProperty(queryFnContext, "signal", {
      enumerable: true,
      get: function get() {
        if (abortController) {
          _this2.abortSignalConsumed = true;
          return abortController.signal;
        }
        return void 0;
      }
    });
    var fetchFn = function fetchFn2() {
      if (!_this2.options.queryFn) {
        return Promise.reject("Missing queryFn");
      }
      _this2.abortSignalConsumed = false;
      return _this2.options.queryFn(queryFnContext);
    };
    var context2 = {
      fetchOptions,
      options: this.options,
      queryKey,
      state: this.state,
      fetchFn,
      meta: this.meta
    };
    if ((_this$options$behavio = this.options.behavior) == null ? void 0 : _this$options$behavio.onFetch) {
      var _this$options$behavio2;
      (_this$options$behavio2 = this.options.behavior) == null ? void 0 : _this$options$behavio2.onFetch(context2);
    }
    this.revertState = this.state;
    if (!this.state.isFetching || this.state.fetchMeta !== ((_context$fetchOptions = context2.fetchOptions) == null ? void 0 : _context$fetchOptions.meta)) {
      var _context$fetchOptions2;
      this.dispatch({
        type: "fetch",
        meta: (_context$fetchOptions2 = context2.fetchOptions) == null ? void 0 : _context$fetchOptions2.meta
      });
    }
    this.retryer = new Retryer({
      fn: context2.fetchFn,
      abort: abortController == null ? void 0 : (_abortController$abor = abortController.abort) == null ? void 0 : _abortController$abor.bind(abortController),
      onSuccess: function onSuccess(data) {
        _this2.setData(data);
        _this2.cache.config.onSuccess == null ? void 0 : _this2.cache.config.onSuccess(data, _this2);
        if (_this2.cacheTime === 0) {
          _this2.optionalRemove();
        }
      },
      onError: function onError(error) {
        if (!(isCancelledError(error) && error.silent)) {
          _this2.dispatch({
            type: "error",
            error
          });
        }
        if (!isCancelledError(error)) {
          _this2.cache.config.onError == null ? void 0 : _this2.cache.config.onError(error, _this2);
          getLogger().error(error);
        }
        if (_this2.cacheTime === 0) {
          _this2.optionalRemove();
        }
      },
      onFail: function onFail() {
        _this2.dispatch({
          type: "failed"
        });
      },
      onPause: function onPause() {
        _this2.dispatch({
          type: "pause"
        });
      },
      onContinue: function onContinue() {
        _this2.dispatch({
          type: "continue"
        });
      },
      retry: context2.options.retry,
      retryDelay: context2.options.retryDelay
    });
    this.promise = this.retryer.promise;
    return this.promise;
  };
  _proto.dispatch = function dispatch(action) {
    var _this3 = this;
    this.state = this.reducer(this.state, action);
    notifyManager.batch(function() {
      _this3.observers.forEach(function(observer) {
        observer.onQueryUpdate(action);
      });
      _this3.cache.notify({
        query: _this3,
        type: "queryUpdated",
        action
      });
    });
  };
  _proto.getDefaultState = function getDefaultState2(options) {
    var data = typeof options.initialData === "function" ? options.initialData() : options.initialData;
    var hasInitialData = typeof options.initialData !== "undefined";
    var initialDataUpdatedAt = hasInitialData ? typeof options.initialDataUpdatedAt === "function" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;
    var hasData = typeof data !== "undefined";
    return {
      data,
      dataUpdateCount: 0,
      dataUpdatedAt: hasData ? initialDataUpdatedAt != null ? initialDataUpdatedAt : Date.now() : 0,
      error: null,
      errorUpdateCount: 0,
      errorUpdatedAt: 0,
      fetchFailureCount: 0,
      fetchMeta: null,
      isFetching: false,
      isInvalidated: false,
      isPaused: false,
      status: hasData ? "success" : "idle"
    };
  };
  _proto.reducer = function reducer2(state2, action) {
    var _action$meta, _action$dataUpdatedAt;
    switch (action.type) {
      case "failed":
        return _extends$1({}, state2, {
          fetchFailureCount: state2.fetchFailureCount + 1
        });
      case "pause":
        return _extends$1({}, state2, {
          isPaused: true
        });
      case "continue":
        return _extends$1({}, state2, {
          isPaused: false
        });
      case "fetch":
        return _extends$1({}, state2, {
          fetchFailureCount: 0,
          fetchMeta: (_action$meta = action.meta) != null ? _action$meta : null,
          isFetching: true,
          isPaused: false,
          status: !state2.dataUpdatedAt ? "loading" : state2.status
        });
      case "success":
        return _extends$1({}, state2, {
          data: action.data,
          dataUpdateCount: state2.dataUpdateCount + 1,
          dataUpdatedAt: (_action$dataUpdatedAt = action.dataUpdatedAt) != null ? _action$dataUpdatedAt : Date.now(),
          error: null,
          fetchFailureCount: 0,
          isFetching: false,
          isInvalidated: false,
          isPaused: false,
          status: "success"
        });
      case "error":
        var error = action.error;
        if (isCancelledError(error) && error.revert && this.revertState) {
          return _extends$1({}, this.revertState);
        }
        return _extends$1({}, state2, {
          error,
          errorUpdateCount: state2.errorUpdateCount + 1,
          errorUpdatedAt: Date.now(),
          fetchFailureCount: state2.fetchFailureCount + 1,
          isFetching: false,
          isPaused: false,
          status: "error"
        });
      case "invalidate":
        return _extends$1({}, state2, {
          isInvalidated: true
        });
      case "setState":
        return _extends$1({}, state2, action.state);
      default:
        return state2;
    }
  };
  return Query2;
}();
var QueryCache = /* @__PURE__ */ function(_Subscribable) {
  _inheritsLoose(QueryCache2, _Subscribable);
  function QueryCache2(config) {
    var _this;
    _this = _Subscribable.call(this) || this;
    _this.config = config || {};
    _this.queries = [];
    _this.queriesMap = {};
    return _this;
  }
  var _proto = QueryCache2.prototype;
  _proto.build = function build(client, options, state2) {
    var _options$queryHash;
    var queryKey = options.queryKey;
    var queryHash = (_options$queryHash = options.queryHash) != null ? _options$queryHash : hashQueryKeyByOptions(queryKey, options);
    var query = this.get(queryHash);
    if (!query) {
      query = new Query({
        cache: this,
        queryKey,
        queryHash,
        options: client.defaultQueryOptions(options),
        state: state2,
        defaultOptions: client.getQueryDefaults(queryKey),
        meta: options.meta
      });
      this.add(query);
    }
    return query;
  };
  _proto.add = function add(query) {
    if (!this.queriesMap[query.queryHash]) {
      this.queriesMap[query.queryHash] = query;
      this.queries.push(query);
      this.notify({
        type: "queryAdded",
        query
      });
    }
  };
  _proto.remove = function remove(query) {
    var queryInMap = this.queriesMap[query.queryHash];
    if (queryInMap) {
      query.destroy();
      this.queries = this.queries.filter(function(x2) {
        return x2 !== query;
      });
      if (queryInMap === query) {
        delete this.queriesMap[query.queryHash];
      }
      this.notify({
        type: "queryRemoved",
        query
      });
    }
  };
  _proto.clear = function clear() {
    var _this2 = this;
    notifyManager.batch(function() {
      _this2.queries.forEach(function(query) {
        _this2.remove(query);
      });
    });
  };
  _proto.get = function get(queryHash) {
    return this.queriesMap[queryHash];
  };
  _proto.getAll = function getAll() {
    return this.queries;
  };
  _proto.find = function find(arg1, arg2) {
    var _parseFilterArgs = parseFilterArgs(arg1, arg2), filters = _parseFilterArgs[0];
    if (typeof filters.exact === "undefined") {
      filters.exact = true;
    }
    return this.queries.find(function(query) {
      return matchQuery(filters, query);
    });
  };
  _proto.findAll = function findAll(arg1, arg2) {
    var _parseFilterArgs2 = parseFilterArgs(arg1, arg2), filters = _parseFilterArgs2[0];
    return filters ? this.queries.filter(function(query) {
      return matchQuery(filters, query);
    }) : this.queries;
  };
  _proto.notify = function notify(event) {
    var _this3 = this;
    notifyManager.batch(function() {
      _this3.listeners.forEach(function(listener) {
        listener(event);
      });
    });
  };
  _proto.onFocus = function onFocus() {
    var _this4 = this;
    notifyManager.batch(function() {
      _this4.queries.forEach(function(query) {
        query.onFocus();
      });
    });
  };
  _proto.onOnline = function onOnline() {
    var _this5 = this;
    notifyManager.batch(function() {
      _this5.queries.forEach(function(query) {
        query.onOnline();
      });
    });
  };
  return QueryCache2;
}(Subscribable);
var Mutation = /* @__PURE__ */ function() {
  function Mutation2(config) {
    this.options = _extends$1({}, config.defaultOptions, config.options);
    this.mutationId = config.mutationId;
    this.mutationCache = config.mutationCache;
    this.observers = [];
    this.state = config.state || getDefaultState();
  }
  var _proto = Mutation2.prototype;
  _proto.setState = function setState(state2) {
    this.dispatch({
      type: "setState",
      state: state2
    });
  };
  _proto.addObserver = function addObserver(observer) {
    if (this.observers.indexOf(observer) === -1) {
      this.observers.push(observer);
    }
  };
  _proto.removeObserver = function removeObserver(observer) {
    this.observers = this.observers.filter(function(x2) {
      return x2 !== observer;
    });
  };
  _proto.cancel = function cancel() {
    if (this.retryer) {
      this.retryer.cancel();
      return this.retryer.promise.then(noop).catch(noop);
    }
    return Promise.resolve();
  };
  _proto.continue = function _continue() {
    if (this.retryer) {
      this.retryer.continue();
      return this.retryer.promise;
    }
    return this.execute();
  };
  _proto.execute = function execute() {
    var _this = this;
    var data;
    var restored = this.state.status === "loading";
    var promise = Promise.resolve();
    if (!restored) {
      this.dispatch({
        type: "loading",
        variables: this.options.variables
      });
      promise = promise.then(function() {
        return _this.options.onMutate == null ? void 0 : _this.options.onMutate(_this.state.variables);
      }).then(function(context2) {
        if (context2 !== _this.state.context) {
          _this.dispatch({
            type: "loading",
            context: context2,
            variables: _this.state.variables
          });
        }
      });
    }
    return promise.then(function() {
      return _this.executeMutation();
    }).then(function(result) {
      data = result;
      _this.mutationCache.config.onSuccess == null ? void 0 : _this.mutationCache.config.onSuccess(data, _this.state.variables, _this.state.context, _this);
    }).then(function() {
      return _this.options.onSuccess == null ? void 0 : _this.options.onSuccess(data, _this.state.variables, _this.state.context);
    }).then(function() {
      return _this.options.onSettled == null ? void 0 : _this.options.onSettled(data, null, _this.state.variables, _this.state.context);
    }).then(function() {
      _this.dispatch({
        type: "success",
        data
      });
      return data;
    }).catch(function(error) {
      _this.mutationCache.config.onError == null ? void 0 : _this.mutationCache.config.onError(error, _this.state.variables, _this.state.context, _this);
      getLogger().error(error);
      return Promise.resolve().then(function() {
        return _this.options.onError == null ? void 0 : _this.options.onError(error, _this.state.variables, _this.state.context);
      }).then(function() {
        return _this.options.onSettled == null ? void 0 : _this.options.onSettled(void 0, error, _this.state.variables, _this.state.context);
      }).then(function() {
        _this.dispatch({
          type: "error",
          error
        });
        throw error;
      });
    });
  };
  _proto.executeMutation = function executeMutation() {
    var _this2 = this, _this$options$retry;
    this.retryer = new Retryer({
      fn: function fn() {
        if (!_this2.options.mutationFn) {
          return Promise.reject("No mutationFn found");
        }
        return _this2.options.mutationFn(_this2.state.variables);
      },
      onFail: function onFail() {
        _this2.dispatch({
          type: "failed"
        });
      },
      onPause: function onPause() {
        _this2.dispatch({
          type: "pause"
        });
      },
      onContinue: function onContinue() {
        _this2.dispatch({
          type: "continue"
        });
      },
      retry: (_this$options$retry = this.options.retry) != null ? _this$options$retry : 0,
      retryDelay: this.options.retryDelay
    });
    return this.retryer.promise;
  };
  _proto.dispatch = function dispatch(action) {
    var _this3 = this;
    this.state = reducer(this.state, action);
    notifyManager.batch(function() {
      _this3.observers.forEach(function(observer) {
        observer.onMutationUpdate(action);
      });
      _this3.mutationCache.notify(_this3);
    });
  };
  return Mutation2;
}();
function getDefaultState() {
  return {
    context: void 0,
    data: void 0,
    error: null,
    failureCount: 0,
    isPaused: false,
    status: "idle",
    variables: void 0
  };
}
function reducer(state2, action) {
  switch (action.type) {
    case "failed":
      return _extends$1({}, state2, {
        failureCount: state2.failureCount + 1
      });
    case "pause":
      return _extends$1({}, state2, {
        isPaused: true
      });
    case "continue":
      return _extends$1({}, state2, {
        isPaused: false
      });
    case "loading":
      return _extends$1({}, state2, {
        context: action.context,
        data: void 0,
        error: null,
        isPaused: false,
        status: "loading",
        variables: action.variables
      });
    case "success":
      return _extends$1({}, state2, {
        data: action.data,
        error: null,
        status: "success",
        isPaused: false
      });
    case "error":
      return _extends$1({}, state2, {
        data: void 0,
        error: action.error,
        failureCount: state2.failureCount + 1,
        isPaused: false,
        status: "error"
      });
    case "setState":
      return _extends$1({}, state2, action.state);
    default:
      return state2;
  }
}
var MutationCache = /* @__PURE__ */ function(_Subscribable) {
  _inheritsLoose(MutationCache2, _Subscribable);
  function MutationCache2(config) {
    var _this;
    _this = _Subscribable.call(this) || this;
    _this.config = config || {};
    _this.mutations = [];
    _this.mutationId = 0;
    return _this;
  }
  var _proto = MutationCache2.prototype;
  _proto.build = function build(client, options, state2) {
    var mutation = new Mutation({
      mutationCache: this,
      mutationId: ++this.mutationId,
      options: client.defaultMutationOptions(options),
      state: state2,
      defaultOptions: options.mutationKey ? client.getMutationDefaults(options.mutationKey) : void 0
    });
    this.add(mutation);
    return mutation;
  };
  _proto.add = function add(mutation) {
    this.mutations.push(mutation);
    this.notify(mutation);
  };
  _proto.remove = function remove(mutation) {
    this.mutations = this.mutations.filter(function(x2) {
      return x2 !== mutation;
    });
    mutation.cancel();
    this.notify(mutation);
  };
  _proto.clear = function clear() {
    var _this2 = this;
    notifyManager.batch(function() {
      _this2.mutations.forEach(function(mutation) {
        _this2.remove(mutation);
      });
    });
  };
  _proto.getAll = function getAll() {
    return this.mutations;
  };
  _proto.find = function find(filters) {
    if (typeof filters.exact === "undefined") {
      filters.exact = true;
    }
    return this.mutations.find(function(mutation) {
      return matchMutation(filters, mutation);
    });
  };
  _proto.findAll = function findAll(filters) {
    return this.mutations.filter(function(mutation) {
      return matchMutation(filters, mutation);
    });
  };
  _proto.notify = function notify(mutation) {
    var _this3 = this;
    notifyManager.batch(function() {
      _this3.listeners.forEach(function(listener) {
        listener(mutation);
      });
    });
  };
  _proto.onFocus = function onFocus() {
    this.resumePausedMutations();
  };
  _proto.onOnline = function onOnline() {
    this.resumePausedMutations();
  };
  _proto.resumePausedMutations = function resumePausedMutations() {
    var pausedMutations = this.mutations.filter(function(x2) {
      return x2.state.isPaused;
    });
    return notifyManager.batch(function() {
      return pausedMutations.reduce(function(promise, mutation) {
        return promise.then(function() {
          return mutation.continue().catch(noop);
        });
      }, Promise.resolve());
    });
  };
  return MutationCache2;
}(Subscribable);
function infiniteQueryBehavior() {
  return {
    onFetch: function onFetch(context2) {
      context2.fetchFn = function() {
        var _context$fetchOptions, _context$fetchOptions2, _context$fetchOptions3, _context$fetchOptions4, _context$state$data, _context$state$data2;
        var refetchPage = (_context$fetchOptions = context2.fetchOptions) == null ? void 0 : (_context$fetchOptions2 = _context$fetchOptions.meta) == null ? void 0 : _context$fetchOptions2.refetchPage;
        var fetchMore = (_context$fetchOptions3 = context2.fetchOptions) == null ? void 0 : (_context$fetchOptions4 = _context$fetchOptions3.meta) == null ? void 0 : _context$fetchOptions4.fetchMore;
        var pageParam = fetchMore == null ? void 0 : fetchMore.pageParam;
        var isFetchingNextPage = (fetchMore == null ? void 0 : fetchMore.direction) === "forward";
        var isFetchingPreviousPage = (fetchMore == null ? void 0 : fetchMore.direction) === "backward";
        var oldPages = ((_context$state$data = context2.state.data) == null ? void 0 : _context$state$data.pages) || [];
        var oldPageParams = ((_context$state$data2 = context2.state.data) == null ? void 0 : _context$state$data2.pageParams) || [];
        var abortController = getAbortController();
        var abortSignal = abortController == null ? void 0 : abortController.signal;
        var newPageParams = oldPageParams;
        var cancelled = false;
        var queryFn = context2.options.queryFn || function() {
          return Promise.reject("Missing queryFn");
        };
        var buildNewPages = function buildNewPages2(pages, param2, page, previous) {
          newPageParams = previous ? [param2].concat(newPageParams) : [].concat(newPageParams, [param2]);
          return previous ? [page].concat(pages) : [].concat(pages, [page]);
        };
        var fetchPage = function fetchPage2(pages, manual2, param2, previous) {
          if (cancelled) {
            return Promise.reject("Cancelled");
          }
          if (typeof param2 === "undefined" && !manual2 && pages.length) {
            return Promise.resolve(pages);
          }
          var queryFnContext = {
            queryKey: context2.queryKey,
            signal: abortSignal,
            pageParam: param2,
            meta: context2.meta
          };
          var queryFnResult = queryFn(queryFnContext);
          var promise2 = Promise.resolve(queryFnResult).then(function(page) {
            return buildNewPages(pages, param2, page, previous);
          });
          if (isCancelable(queryFnResult)) {
            var promiseAsAny = promise2;
            promiseAsAny.cancel = queryFnResult.cancel;
          }
          return promise2;
        };
        var promise;
        if (!oldPages.length) {
          promise = fetchPage([]);
        } else if (isFetchingNextPage) {
          var manual = typeof pageParam !== "undefined";
          var param = manual ? pageParam : getNextPageParam(context2.options, oldPages);
          promise = fetchPage(oldPages, manual, param);
        } else if (isFetchingPreviousPage) {
          var _manual = typeof pageParam !== "undefined";
          var _param = _manual ? pageParam : getPreviousPageParam(context2.options, oldPages);
          promise = fetchPage(oldPages, _manual, _param, true);
        } else {
          (function() {
            newPageParams = [];
            var manual2 = typeof context2.options.getNextPageParam === "undefined";
            var shouldFetchFirstPage = refetchPage && oldPages[0] ? refetchPage(oldPages[0], 0, oldPages) : true;
            promise = shouldFetchFirstPage ? fetchPage([], manual2, oldPageParams[0]) : Promise.resolve(buildNewPages([], oldPageParams[0], oldPages[0]));
            var _loop = function _loop2(i2) {
              promise = promise.then(function(pages) {
                var shouldFetchNextPage = refetchPage && oldPages[i2] ? refetchPage(oldPages[i2], i2, oldPages) : true;
                if (shouldFetchNextPage) {
                  var _param2 = manual2 ? oldPageParams[i2] : getNextPageParam(context2.options, pages);
                  return fetchPage(pages, manual2, _param2);
                }
                return Promise.resolve(buildNewPages(pages, oldPageParams[i2], oldPages[i2]));
              });
            };
            for (var i = 1; i < oldPages.length; i++) {
              _loop(i);
            }
          })();
        }
        var finalPromise = promise.then(function(pages) {
          return {
            pages,
            pageParams: newPageParams
          };
        });
        var finalPromiseAsAny = finalPromise;
        finalPromiseAsAny.cancel = function() {
          cancelled = true;
          abortController == null ? void 0 : abortController.abort();
          if (isCancelable(promise)) {
            promise.cancel();
          }
        };
        return finalPromise;
      };
    }
  };
}
function getNextPageParam(options, pages) {
  return options.getNextPageParam == null ? void 0 : options.getNextPageParam(pages[pages.length - 1], pages);
}
function getPreviousPageParam(options, pages) {
  return options.getPreviousPageParam == null ? void 0 : options.getPreviousPageParam(pages[0], pages);
}
var QueryClient = /* @__PURE__ */ function() {
  function QueryClient2(config) {
    if (config === void 0) {
      config = {};
    }
    this.queryCache = config.queryCache || new QueryCache();
    this.mutationCache = config.mutationCache || new MutationCache();
    this.defaultOptions = config.defaultOptions || {};
    this.queryDefaults = [];
    this.mutationDefaults = [];
  }
  var _proto = QueryClient2.prototype;
  _proto.mount = function mount() {
    var _this = this;
    this.unsubscribeFocus = focusManager.subscribe(function() {
      if (focusManager.isFocused() && onlineManager.isOnline()) {
        _this.mutationCache.onFocus();
        _this.queryCache.onFocus();
      }
    });
    this.unsubscribeOnline = onlineManager.subscribe(function() {
      if (focusManager.isFocused() && onlineManager.isOnline()) {
        _this.mutationCache.onOnline();
        _this.queryCache.onOnline();
      }
    });
  };
  _proto.unmount = function unmount() {
    var _this$unsubscribeFocu, _this$unsubscribeOnli;
    (_this$unsubscribeFocu = this.unsubscribeFocus) == null ? void 0 : _this$unsubscribeFocu.call(this);
    (_this$unsubscribeOnli = this.unsubscribeOnline) == null ? void 0 : _this$unsubscribeOnli.call(this);
  };
  _proto.isFetching = function isFetching(arg1, arg2) {
    var _parseFilterArgs = parseFilterArgs(arg1, arg2), filters = _parseFilterArgs[0];
    filters.fetching = true;
    return this.queryCache.findAll(filters).length;
  };
  _proto.isMutating = function isMutating(filters) {
    return this.mutationCache.findAll(_extends$1({}, filters, {
      fetching: true
    })).length;
  };
  _proto.getQueryData = function getQueryData(queryKey, filters) {
    var _this$queryCache$find;
    return (_this$queryCache$find = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find.state.data;
  };
  _proto.getQueriesData = function getQueriesData(queryKeyOrFilters) {
    return this.getQueryCache().findAll(queryKeyOrFilters).map(function(_ref) {
      var queryKey = _ref.queryKey, state2 = _ref.state;
      var data = state2.data;
      return [queryKey, data];
    });
  };
  _proto.setQueryData = function setQueryData(queryKey, updater, options) {
    var parsedOptions = parseQueryArgs(queryKey);
    var defaultedOptions = this.defaultQueryOptions(parsedOptions);
    return this.queryCache.build(this, defaultedOptions).setData(updater, options);
  };
  _proto.setQueriesData = function setQueriesData(queryKeyOrFilters, updater, options) {
    var _this2 = this;
    return notifyManager.batch(function() {
      return _this2.getQueryCache().findAll(queryKeyOrFilters).map(function(_ref2) {
        var queryKey = _ref2.queryKey;
        return [queryKey, _this2.setQueryData(queryKey, updater, options)];
      });
    });
  };
  _proto.getQueryState = function getQueryState(queryKey, filters) {
    var _this$queryCache$find2;
    return (_this$queryCache$find2 = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find2.state;
  };
  _proto.removeQueries = function removeQueries(arg1, arg2) {
    var _parseFilterArgs2 = parseFilterArgs(arg1, arg2), filters = _parseFilterArgs2[0];
    var queryCache = this.queryCache;
    notifyManager.batch(function() {
      queryCache.findAll(filters).forEach(function(query) {
        queryCache.remove(query);
      });
    });
  };
  _proto.resetQueries = function resetQueries(arg1, arg2, arg3) {
    var _this3 = this;
    var _parseFilterArgs3 = parseFilterArgs(arg1, arg2, arg3), filters = _parseFilterArgs3[0], options = _parseFilterArgs3[1];
    var queryCache = this.queryCache;
    var refetchFilters = _extends$1({}, filters, {
      active: true
    });
    return notifyManager.batch(function() {
      queryCache.findAll(filters).forEach(function(query) {
        query.reset();
      });
      return _this3.refetchQueries(refetchFilters, options);
    });
  };
  _proto.cancelQueries = function cancelQueries(arg1, arg2, arg3) {
    var _this4 = this;
    var _parseFilterArgs4 = parseFilterArgs(arg1, arg2, arg3), filters = _parseFilterArgs4[0], _parseFilterArgs4$ = _parseFilterArgs4[1], cancelOptions = _parseFilterArgs4$ === void 0 ? {} : _parseFilterArgs4$;
    if (typeof cancelOptions.revert === "undefined") {
      cancelOptions.revert = true;
    }
    var promises = notifyManager.batch(function() {
      return _this4.queryCache.findAll(filters).map(function(query) {
        return query.cancel(cancelOptions);
      });
    });
    return Promise.all(promises).then(noop).catch(noop);
  };
  _proto.invalidateQueries = function invalidateQueries(arg1, arg2, arg3) {
    var _ref3, _filters$refetchActiv, _filters$refetchInact, _this5 = this;
    var _parseFilterArgs5 = parseFilterArgs(arg1, arg2, arg3), filters = _parseFilterArgs5[0], options = _parseFilterArgs5[1];
    var refetchFilters = _extends$1({}, filters, {
      active: (_ref3 = (_filters$refetchActiv = filters.refetchActive) != null ? _filters$refetchActiv : filters.active) != null ? _ref3 : true,
      inactive: (_filters$refetchInact = filters.refetchInactive) != null ? _filters$refetchInact : false
    });
    return notifyManager.batch(function() {
      _this5.queryCache.findAll(filters).forEach(function(query) {
        query.invalidate();
      });
      return _this5.refetchQueries(refetchFilters, options);
    });
  };
  _proto.refetchQueries = function refetchQueries(arg1, arg2, arg3) {
    var _this6 = this;
    var _parseFilterArgs6 = parseFilterArgs(arg1, arg2, arg3), filters = _parseFilterArgs6[0], options = _parseFilterArgs6[1];
    var promises = notifyManager.batch(function() {
      return _this6.queryCache.findAll(filters).map(function(query) {
        return query.fetch(void 0, _extends$1({}, options, {
          meta: {
            refetchPage: filters == null ? void 0 : filters.refetchPage
          }
        }));
      });
    });
    var promise = Promise.all(promises).then(noop);
    if (!(options == null ? void 0 : options.throwOnError)) {
      promise = promise.catch(noop);
    }
    return promise;
  };
  _proto.fetchQuery = function fetchQuery(arg1, arg2, arg3) {
    var parsedOptions = parseQueryArgs(arg1, arg2, arg3);
    var defaultedOptions = this.defaultQueryOptions(parsedOptions);
    if (typeof defaultedOptions.retry === "undefined") {
      defaultedOptions.retry = false;
    }
    var query = this.queryCache.build(this, defaultedOptions);
    return query.isStaleByTime(defaultedOptions.staleTime) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);
  };
  _proto.prefetchQuery = function prefetchQuery(arg1, arg2, arg3) {
    return this.fetchQuery(arg1, arg2, arg3).then(noop).catch(noop);
  };
  _proto.fetchInfiniteQuery = function fetchInfiniteQuery(arg1, arg2, arg3) {
    var parsedOptions = parseQueryArgs(arg1, arg2, arg3);
    parsedOptions.behavior = infiniteQueryBehavior();
    return this.fetchQuery(parsedOptions);
  };
  _proto.prefetchInfiniteQuery = function prefetchInfiniteQuery(arg1, arg2, arg3) {
    return this.fetchInfiniteQuery(arg1, arg2, arg3).then(noop).catch(noop);
  };
  _proto.cancelMutations = function cancelMutations() {
    var _this7 = this;
    var promises = notifyManager.batch(function() {
      return _this7.mutationCache.getAll().map(function(mutation) {
        return mutation.cancel();
      });
    });
    return Promise.all(promises).then(noop).catch(noop);
  };
  _proto.resumePausedMutations = function resumePausedMutations() {
    return this.getMutationCache().resumePausedMutations();
  };
  _proto.executeMutation = function executeMutation(options) {
    return this.mutationCache.build(this, options).execute();
  };
  _proto.getQueryCache = function getQueryCache() {
    return this.queryCache;
  };
  _proto.getMutationCache = function getMutationCache() {
    return this.mutationCache;
  };
  _proto.getDefaultOptions = function getDefaultOptions() {
    return this.defaultOptions;
  };
  _proto.setDefaultOptions = function setDefaultOptions(options) {
    this.defaultOptions = options;
  };
  _proto.setQueryDefaults = function setQueryDefaults(queryKey, options) {
    var result = this.queryDefaults.find(function(x2) {
      return hashQueryKey(queryKey) === hashQueryKey(x2.queryKey);
    });
    if (result) {
      result.defaultOptions = options;
    } else {
      this.queryDefaults.push({
        queryKey,
        defaultOptions: options
      });
    }
  };
  _proto.getQueryDefaults = function getQueryDefaults(queryKey) {
    var _this$queryDefaults$f;
    return queryKey ? (_this$queryDefaults$f = this.queryDefaults.find(function(x2) {
      return partialMatchKey(queryKey, x2.queryKey);
    })) == null ? void 0 : _this$queryDefaults$f.defaultOptions : void 0;
  };
  _proto.setMutationDefaults = function setMutationDefaults(mutationKey, options) {
    var result = this.mutationDefaults.find(function(x2) {
      return hashQueryKey(mutationKey) === hashQueryKey(x2.mutationKey);
    });
    if (result) {
      result.defaultOptions = options;
    } else {
      this.mutationDefaults.push({
        mutationKey,
        defaultOptions: options
      });
    }
  };
  _proto.getMutationDefaults = function getMutationDefaults(mutationKey) {
    var _this$mutationDefault;
    return mutationKey ? (_this$mutationDefault = this.mutationDefaults.find(function(x2) {
      return partialMatchKey(mutationKey, x2.mutationKey);
    })) == null ? void 0 : _this$mutationDefault.defaultOptions : void 0;
  };
  _proto.defaultQueryOptions = function defaultQueryOptions(options) {
    if (options == null ? void 0 : options._defaulted) {
      return options;
    }
    var defaultedOptions = _extends$1({}, this.defaultOptions.queries, this.getQueryDefaults(options == null ? void 0 : options.queryKey), options, {
      _defaulted: true
    });
    if (!defaultedOptions.queryHash && defaultedOptions.queryKey) {
      defaultedOptions.queryHash = hashQueryKeyByOptions(defaultedOptions.queryKey, defaultedOptions);
    }
    return defaultedOptions;
  };
  _proto.defaultQueryObserverOptions = function defaultQueryObserverOptions(options) {
    return this.defaultQueryOptions(options);
  };
  _proto.defaultMutationOptions = function defaultMutationOptions(options) {
    if (options == null ? void 0 : options._defaulted) {
      return options;
    }
    return _extends$1({}, this.defaultOptions.mutations, this.getMutationDefaults(options == null ? void 0 : options.mutationKey), options, {
      _defaulted: true
    });
  };
  _proto.clear = function clear() {
    this.queryCache.clear();
    this.mutationCache.clear();
  };
  return QueryClient2;
}();
var QueryObserver = /* @__PURE__ */ function(_Subscribable) {
  _inheritsLoose(QueryObserver2, _Subscribable);
  function QueryObserver2(client, options) {
    var _this;
    _this = _Subscribable.call(this) || this;
    _this.client = client;
    _this.options = options;
    _this.trackedProps = [];
    _this.previousSelectError = null;
    _this.bindMethods();
    _this.setOptions(options);
    return _this;
  }
  var _proto = QueryObserver2.prototype;
  _proto.bindMethods = function bindMethods() {
    this.remove = this.remove.bind(this);
    this.refetch = this.refetch.bind(this);
  };
  _proto.onSubscribe = function onSubscribe() {
    if (this.listeners.length === 1) {
      this.currentQuery.addObserver(this);
      if (shouldFetchOnMount(this.currentQuery, this.options)) {
        this.executeFetch();
      }
      this.updateTimers();
    }
  };
  _proto.onUnsubscribe = function onUnsubscribe() {
    if (!this.listeners.length) {
      this.destroy();
    }
  };
  _proto.shouldFetchOnReconnect = function shouldFetchOnReconnect() {
    return _shouldFetchOnReconnect(this.currentQuery, this.options);
  };
  _proto.shouldFetchOnWindowFocus = function shouldFetchOnWindowFocus() {
    return _shouldFetchOnWindowFocus(this.currentQuery, this.options);
  };
  _proto.destroy = function destroy() {
    this.listeners = [];
    this.clearTimers();
    this.currentQuery.removeObserver(this);
  };
  _proto.setOptions = function setOptions(options, notifyOptions) {
    var prevOptions = this.options;
    var prevQuery = this.currentQuery;
    this.options = this.client.defaultQueryObserverOptions(options);
    if (typeof this.options.enabled !== "undefined" && typeof this.options.enabled !== "boolean") {
      throw new Error("Expected enabled to be a boolean");
    }
    if (!this.options.queryKey) {
      this.options.queryKey = prevOptions.queryKey;
    }
    this.updateQuery();
    var mounted = this.hasListeners();
    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {
      this.executeFetch();
    }
    this.updateResult(notifyOptions);
    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {
      this.updateStaleTimeout();
    }
    var nextRefetchInterval = this.computeRefetchInterval();
    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || nextRefetchInterval !== this.currentRefetchInterval)) {
      this.updateRefetchInterval(nextRefetchInterval);
    }
  };
  _proto.getOptimisticResult = function getOptimisticResult(options) {
    var defaultedOptions = this.client.defaultQueryObserverOptions(options);
    var query = this.client.getQueryCache().build(this.client, defaultedOptions);
    return this.createResult(query, defaultedOptions);
  };
  _proto.getCurrentResult = function getCurrentResult() {
    return this.currentResult;
  };
  _proto.trackResult = function trackResult(result) {
    var _this2 = this;
    var trackedResult = {};
    Object.keys(result).forEach(function(key) {
      Object.defineProperty(trackedResult, key, {
        configurable: false,
        enumerable: true,
        get: function get() {
          var typedKey = key;
          if (!_this2.trackedProps.includes(typedKey)) {
            _this2.trackedProps.push(typedKey);
          }
          return result[typedKey];
        }
      });
    });
    return trackedResult;
  };
  _proto.getNextResult = function getNextResult(options) {
    var _this3 = this;
    return new Promise(function(resolve, reject) {
      var unsubscribe = _this3.subscribe(function(result) {
        if (!result.isFetching) {
          unsubscribe();
          if (result.isError && (options == null ? void 0 : options.throwOnError)) {
            reject(result.error);
          } else {
            resolve(result);
          }
        }
      });
    });
  };
  _proto.getCurrentQuery = function getCurrentQuery() {
    return this.currentQuery;
  };
  _proto.remove = function remove() {
    this.client.getQueryCache().remove(this.currentQuery);
  };
  _proto.refetch = function refetch(options) {
    return this.fetch(_extends$1({}, options, {
      meta: {
        refetchPage: options == null ? void 0 : options.refetchPage
      }
    }));
  };
  _proto.fetchOptimistic = function fetchOptimistic(options) {
    var _this4 = this;
    var defaultedOptions = this.client.defaultQueryObserverOptions(options);
    var query = this.client.getQueryCache().build(this.client, defaultedOptions);
    return query.fetch().then(function() {
      return _this4.createResult(query, defaultedOptions);
    });
  };
  _proto.fetch = function fetch2(fetchOptions) {
    var _this5 = this;
    return this.executeFetch(fetchOptions).then(function() {
      _this5.updateResult();
      return _this5.currentResult;
    });
  };
  _proto.executeFetch = function executeFetch(fetchOptions) {
    this.updateQuery();
    var promise = this.currentQuery.fetch(this.options, fetchOptions);
    if (!(fetchOptions == null ? void 0 : fetchOptions.throwOnError)) {
      promise = promise.catch(noop);
    }
    return promise;
  };
  _proto.updateStaleTimeout = function updateStaleTimeout() {
    var _this6 = this;
    this.clearStaleTimeout();
    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {
      return;
    }
    var time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime);
    var timeout = time + 1;
    this.staleTimeoutId = setTimeout(function() {
      if (!_this6.currentResult.isStale) {
        _this6.updateResult();
      }
    }, timeout);
  };
  _proto.computeRefetchInterval = function computeRefetchInterval() {
    var _this$options$refetch;
    return typeof this.options.refetchInterval === "function" ? this.options.refetchInterval(this.currentResult.data, this.currentQuery) : (_this$options$refetch = this.options.refetchInterval) != null ? _this$options$refetch : false;
  };
  _proto.updateRefetchInterval = function updateRefetchInterval(nextInterval) {
    var _this7 = this;
    this.clearRefetchInterval();
    this.currentRefetchInterval = nextInterval;
    if (isServer || this.options.enabled === false || !isValidTimeout(this.currentRefetchInterval) || this.currentRefetchInterval === 0) {
      return;
    }
    this.refetchIntervalId = setInterval(function() {
      if (_this7.options.refetchIntervalInBackground || focusManager.isFocused()) {
        _this7.executeFetch();
      }
    }, this.currentRefetchInterval);
  };
  _proto.updateTimers = function updateTimers() {
    this.updateStaleTimeout();
    this.updateRefetchInterval(this.computeRefetchInterval());
  };
  _proto.clearTimers = function clearTimers() {
    this.clearStaleTimeout();
    this.clearRefetchInterval();
  };
  _proto.clearStaleTimeout = function clearStaleTimeout() {
    clearTimeout(this.staleTimeoutId);
    this.staleTimeoutId = void 0;
  };
  _proto.clearRefetchInterval = function clearRefetchInterval() {
    clearInterval(this.refetchIntervalId);
    this.refetchIntervalId = void 0;
  };
  _proto.createResult = function createResult(query, options) {
    var prevQuery = this.currentQuery;
    var prevOptions = this.options;
    var prevResult = this.currentResult;
    var prevResultState = this.currentResultState;
    var prevResultOptions = this.currentResultOptions;
    var queryChange = query !== prevQuery;
    var queryInitialState = queryChange ? query.state : this.currentQueryInitialState;
    var prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;
    var state2 = query.state;
    var dataUpdatedAt = state2.dataUpdatedAt, error = state2.error, errorUpdatedAt = state2.errorUpdatedAt, isFetching = state2.isFetching, status = state2.status;
    var isPreviousData = false;
    var isPlaceholderData = false;
    var data;
    if (options.optimisticResults) {
      var mounted = this.hasListeners();
      var fetchOnMount = !mounted && shouldFetchOnMount(query, options);
      var fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);
      if (fetchOnMount || fetchOptionally) {
        isFetching = true;
        if (!dataUpdatedAt) {
          status = "loading";
        }
      }
    }
    if (options.keepPreviousData && !state2.dataUpdateCount && (prevQueryResult == null ? void 0 : prevQueryResult.isSuccess) && status !== "error") {
      data = prevQueryResult.data;
      dataUpdatedAt = prevQueryResult.dataUpdatedAt;
      status = prevQueryResult.status;
      isPreviousData = true;
    } else if (options.select && typeof state2.data !== "undefined") {
      if (prevResult && state2.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === (prevResultOptions == null ? void 0 : prevResultOptions.select) && !this.previousSelectError) {
        data = prevResult.data;
      } else {
        try {
          data = options.select(state2.data);
          if (options.structuralSharing !== false) {
            data = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, data);
          }
          this.previousSelectError = null;
        } catch (selectError) {
          getLogger().error(selectError);
          error = selectError;
          this.previousSelectError = selectError;
          errorUpdatedAt = Date.now();
          status = "error";
        }
      }
    } else {
      data = state2.data;
    }
    if (typeof options.placeholderData !== "undefined" && typeof data === "undefined" && (status === "loading" || status === "idle")) {
      var placeholderData;
      if ((prevResult == null ? void 0 : prevResult.isPlaceholderData) && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {
        placeholderData = prevResult.data;
      } else {
        placeholderData = typeof options.placeholderData === "function" ? options.placeholderData() : options.placeholderData;
        if (options.select && typeof placeholderData !== "undefined") {
          try {
            placeholderData = options.select(placeholderData);
            if (options.structuralSharing !== false) {
              placeholderData = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, placeholderData);
            }
            this.previousSelectError = null;
          } catch (selectError) {
            getLogger().error(selectError);
            error = selectError;
            this.previousSelectError = selectError;
            errorUpdatedAt = Date.now();
            status = "error";
          }
        }
      }
      if (typeof placeholderData !== "undefined") {
        status = "success";
        data = placeholderData;
        isPlaceholderData = true;
      }
    }
    var result = {
      status,
      isLoading: status === "loading",
      isSuccess: status === "success",
      isError: status === "error",
      isIdle: status === "idle",
      data,
      dataUpdatedAt,
      error,
      errorUpdatedAt,
      failureCount: state2.fetchFailureCount,
      isFetched: state2.dataUpdateCount > 0 || state2.errorUpdateCount > 0,
      isFetchedAfterMount: state2.dataUpdateCount > queryInitialState.dataUpdateCount || state2.errorUpdateCount > queryInitialState.errorUpdateCount,
      isFetching,
      isRefetching: isFetching && status !== "loading",
      isLoadingError: status === "error" && state2.dataUpdatedAt === 0,
      isPlaceholderData,
      isPreviousData,
      isRefetchError: status === "error" && state2.dataUpdatedAt !== 0,
      isStale: isStale(query, options),
      refetch: this.refetch,
      remove: this.remove
    };
    return result;
  };
  _proto.shouldNotifyListeners = function shouldNotifyListeners(result, prevResult) {
    if (!prevResult) {
      return true;
    }
    if (result === prevResult) {
      return false;
    }
    var _this$options = this.options, notifyOnChangeProps = _this$options.notifyOnChangeProps, notifyOnChangePropsExclusions = _this$options.notifyOnChangePropsExclusions;
    if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {
      return true;
    }
    if (notifyOnChangeProps === "tracked" && !this.trackedProps.length) {
      return true;
    }
    var includedProps = notifyOnChangeProps === "tracked" ? this.trackedProps : notifyOnChangeProps;
    return Object.keys(result).some(function(key) {
      var typedKey = key;
      var changed = result[typedKey] !== prevResult[typedKey];
      var isIncluded = includedProps == null ? void 0 : includedProps.some(function(x2) {
        return x2 === key;
      });
      var isExcluded = notifyOnChangePropsExclusions == null ? void 0 : notifyOnChangePropsExclusions.some(function(x2) {
        return x2 === key;
      });
      return changed && !isExcluded && (!includedProps || isIncluded);
    });
  };
  _proto.updateResult = function updateResult(notifyOptions) {
    var prevResult = this.currentResult;
    this.currentResult = this.createResult(this.currentQuery, this.options);
    this.currentResultState = this.currentQuery.state;
    this.currentResultOptions = this.options;
    if (shallowEqualObjects(this.currentResult, prevResult)) {
      return;
    }
    var defaultNotifyOptions = {
      cache: true
    };
    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && this.shouldNotifyListeners(this.currentResult, prevResult)) {
      defaultNotifyOptions.listeners = true;
    }
    this.notify(_extends$1({}, defaultNotifyOptions, notifyOptions));
  };
  _proto.updateQuery = function updateQuery() {
    var query = this.client.getQueryCache().build(this.client, this.options);
    if (query === this.currentQuery) {
      return;
    }
    var prevQuery = this.currentQuery;
    this.currentQuery = query;
    this.currentQueryInitialState = query.state;
    this.previousQueryResult = this.currentResult;
    if (this.hasListeners()) {
      prevQuery == null ? void 0 : prevQuery.removeObserver(this);
      query.addObserver(this);
    }
  };
  _proto.onQueryUpdate = function onQueryUpdate(action) {
    var notifyOptions = {};
    if (action.type === "success") {
      notifyOptions.onSuccess = true;
    } else if (action.type === "error" && !isCancelledError(action.error)) {
      notifyOptions.onError = true;
    }
    this.updateResult(notifyOptions);
    if (this.hasListeners()) {
      this.updateTimers();
    }
  };
  _proto.notify = function notify(notifyOptions) {
    var _this8 = this;
    notifyManager.batch(function() {
      if (notifyOptions.onSuccess) {
        _this8.options.onSuccess == null ? void 0 : _this8.options.onSuccess(_this8.currentResult.data);
        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(_this8.currentResult.data, null);
      } else if (notifyOptions.onError) {
        _this8.options.onError == null ? void 0 : _this8.options.onError(_this8.currentResult.error);
        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(void 0, _this8.currentResult.error);
      }
      if (notifyOptions.listeners) {
        _this8.listeners.forEach(function(listener) {
          listener(_this8.currentResult);
        });
      }
      if (notifyOptions.cache) {
        _this8.client.getQueryCache().notify({
          query: _this8.currentQuery,
          type: "observerResultsUpdated"
        });
      }
    });
  };
  return QueryObserver2;
}(Subscribable);
function shouldLoadOnMount(query, options) {
  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === "error" && options.retryOnMount === false);
}
function shouldRefetchOnMount(query, options) {
  return options.enabled !== false && query.state.dataUpdatedAt > 0 && (options.refetchOnMount === "always" || options.refetchOnMount !== false && isStale(query, options));
}
function shouldFetchOnMount(query, options) {
  return shouldLoadOnMount(query, options) || shouldRefetchOnMount(query, options);
}
function _shouldFetchOnReconnect(query, options) {
  return options.enabled !== false && (options.refetchOnReconnect === "always" || options.refetchOnReconnect !== false && isStale(query, options));
}
function _shouldFetchOnWindowFocus(query, options) {
  return options.enabled !== false && (options.refetchOnWindowFocus === "always" || options.refetchOnWindowFocus !== false && isStale(query, options));
}
function shouldFetchOptionally(query, prevQuery, options, prevOptions) {
  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && (!options.suspense || query.state.status !== "error" || prevOptions.enabled === false) && isStale(query, options);
}
function isStale(query, options) {
  return query.isStaleByTime(options.staleTime);
}
function dehydrateMutation(mutation) {
  return {
    mutationKey: mutation.options.mutationKey,
    state: mutation.state
  };
}
function dehydrateQuery(query) {
  return {
    state: query.state,
    queryKey: query.queryKey,
    queryHash: query.queryHash
  };
}
function defaultShouldDehydrateMutation(mutation) {
  return mutation.state.isPaused;
}
function defaultShouldDehydrateQuery(query) {
  return query.state.status === "success";
}
function dehydrate(client, options) {
  var _options, _options2;
  options = options || {};
  var mutations = [];
  var queries = [];
  if (((_options = options) == null ? void 0 : _options.dehydrateMutations) !== false) {
    var shouldDehydrateMutation = options.shouldDehydrateMutation || defaultShouldDehydrateMutation;
    client.getMutationCache().getAll().forEach(function(mutation) {
      if (shouldDehydrateMutation(mutation)) {
        mutations.push(dehydrateMutation(mutation));
      }
    });
  }
  if (((_options2 = options) == null ? void 0 : _options2.dehydrateQueries) !== false) {
    var shouldDehydrateQuery = options.shouldDehydrateQuery || defaultShouldDehydrateQuery;
    client.getQueryCache().getAll().forEach(function(query) {
      if (shouldDehydrateQuery(query)) {
        queries.push(dehydrateQuery(query));
      }
    });
  }
  return {
    mutations,
    queries
  };
}
function hydrate(client, dehydratedState, options) {
  if (typeof dehydratedState !== "object" || dehydratedState === null) {
    return;
  }
  var mutationCache = client.getMutationCache();
  var queryCache = client.getQueryCache();
  var mutations = dehydratedState.mutations || [];
  var queries = dehydratedState.queries || [];
  mutations.forEach(function(dehydratedMutation) {
    var _options$defaultOptio;
    mutationCache.build(client, _extends$1({}, options == null ? void 0 : (_options$defaultOptio = options.defaultOptions) == null ? void 0 : _options$defaultOptio.mutations, {
      mutationKey: dehydratedMutation.mutationKey
    }), dehydratedMutation.state);
  });
  queries.forEach(function(dehydratedQuery) {
    var _options$defaultOptio2;
    var query = queryCache.get(dehydratedQuery.queryHash);
    if (query) {
      if (query.state.dataUpdatedAt < dehydratedQuery.state.dataUpdatedAt) {
        query.setState(dehydratedQuery.state);
      }
      return;
    }
    queryCache.build(client, _extends$1({}, options == null ? void 0 : (_options$defaultOptio2 = options.defaultOptions) == null ? void 0 : _options$defaultOptio2.queries, {
      queryKey: dehydratedQuery.queryKey,
      queryHash: dehydratedQuery.queryHash
    }), dehydratedQuery.state);
  });
}
var reactDom = { exports: {} };
var reactDom_production_min = {};
var scheduler = { exports: {} };
var scheduler_production_min = {};
/** @license React vundefined
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
(function(exports) {
  function f2(a2, b2) {
    var c2 = a2.length;
    a2.push(b2);
    a:
      for (; 0 < c2; ) {
        var d2 = c2 - 1 >>> 1, e2 = a2[d2];
        if (0 < g2(e2, b2))
          a2[d2] = b2, a2[c2] = e2, c2 = d2;
        else
          break a;
      }
  }
  function h2(a2) {
    return a2.length === 0 ? null : a2[0];
  }
  function k2(a2) {
    if (a2.length === 0)
      return null;
    var b2 = a2[0], c2 = a2.pop();
    if (c2 !== b2) {
      a2[0] = c2;
      a:
        for (var d2 = 0, e2 = a2.length, w2 = e2 >>> 1; d2 < w2; ) {
          var m2 = 2 * (d2 + 1) - 1, C2 = a2[m2], n2 = m2 + 1, x2 = a2[n2];
          if (0 > g2(C2, c2))
            n2 < e2 && 0 > g2(x2, C2) ? (a2[d2] = x2, a2[n2] = c2, d2 = n2) : (a2[d2] = C2, a2[m2] = c2, d2 = m2);
          else if (n2 < e2 && 0 > g2(x2, c2))
            a2[d2] = x2, a2[n2] = c2, d2 = n2;
          else
            break a;
        }
    }
    return b2;
  }
  function g2(a2, b2) {
    var c2 = a2.sortIndex - b2.sortIndex;
    return c2 !== 0 ? c2 : a2.id - b2.id;
  }
  if (typeof performance === "object" && typeof performance.now === "function") {
    var l2 = performance;
    exports.unstable_now = function() {
      return l2.now();
    };
  } else {
    var p2 = Date, q2 = p2.now();
    exports.unstable_now = function() {
      return p2.now() - q2;
    };
  }
  var r2 = [], t2 = [], u2 = 1, v2 = null, y2 = 3, z2 = false, A2 = false, B2 = false, D2 = typeof setTimeout === "function" ? setTimeout : null, E2 = typeof clearTimeout === "function" ? clearTimeout : null, F2 = typeof setImmediate !== "undefined" ? setImmediate : null;
  function G2(a2) {
    for (var b2 = h2(t2); b2 !== null; ) {
      if (b2.callback === null)
        k2(t2);
      else if (b2.startTime <= a2)
        k2(t2), b2.sortIndex = b2.expirationTime, f2(r2, b2);
      else
        break;
      b2 = h2(t2);
    }
  }
  function H2(a2) {
    B2 = false;
    G2(a2);
    if (!A2)
      if (h2(r2) !== null)
        A2 = true, I2(J2);
      else {
        var b2 = h2(t2);
        b2 !== null && K2(H2, b2.startTime - a2);
      }
  }
  function J2(a2, b2) {
    A2 = false;
    B2 && (B2 = false, E2(L2), L2 = -1);
    z2 = true;
    var c2 = y2;
    try {
      G2(b2);
      for (v2 = h2(r2); v2 !== null && (!(v2.expirationTime > b2) || a2 && !M2()); ) {
        var d2 = v2.callback;
        if (typeof d2 === "function") {
          v2.callback = null;
          y2 = v2.priorityLevel;
          var e2 = d2(v2.expirationTime <= b2);
          b2 = exports.unstable_now();
          typeof e2 === "function" ? v2.callback = e2 : v2 === h2(r2) && k2(r2);
          G2(b2);
        } else
          k2(r2);
        v2 = h2(r2);
      }
      if (v2 !== null)
        var w2 = true;
      else {
        var m2 = h2(t2);
        m2 !== null && K2(H2, m2.startTime - b2);
        w2 = false;
      }
      return w2;
    } finally {
      v2 = null, y2 = c2, z2 = false;
    }
  }
  var N2 = false, O2 = null, L2 = -1, P2 = 5, Q2 = 0;
  function M2() {
    return exports.unstable_now() >= Q2;
  }
  function R2() {
    if (O2 !== null) {
      var a2 = exports.unstable_now();
      Q2 = a2 + P2;
      var b2 = true;
      try {
        b2 = O2(true, a2);
      } finally {
        b2 ? S2() : (N2 = false, O2 = null);
      }
    } else
      N2 = false;
  }
  var S2;
  if (typeof F2 === "function")
    S2 = function() {
      F2(R2);
    };
  else if (typeof MessageChannel !== "undefined") {
    var T2 = new MessageChannel(), U2 = T2.port2;
    T2.port1.onmessage = R2;
    S2 = function() {
      U2.postMessage(null);
    };
  } else
    S2 = function() {
      D2(R2, 0);
    };
  function I2(a2) {
    O2 = a2;
    N2 || (N2 = true, S2());
  }
  function K2(a2, b2) {
    L2 = D2(function() {
      a2(exports.unstable_now());
    }, b2);
  }
  exports.unstable_IdlePriority = 5;
  exports.unstable_ImmediatePriority = 1;
  exports.unstable_LowPriority = 4;
  exports.unstable_NormalPriority = 3;
  exports.unstable_Profiling = null;
  exports.unstable_UserBlockingPriority = 2;
  exports.unstable_cancelCallback = function(a2) {
    a2.callback = null;
  };
  exports.unstable_continueExecution = function() {
    A2 || z2 || (A2 = true, I2(J2));
  };
  exports.unstable_forceFrameRate = function(a2) {
    0 > a2 || 125 < a2 ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : P2 = 0 < a2 ? Math.floor(1e3 / a2) : 5;
  };
  exports.unstable_getCurrentPriorityLevel = function() {
    return y2;
  };
  exports.unstable_getFirstCallbackNode = function() {
    return h2(r2);
  };
  exports.unstable_next = function(a2) {
    switch (y2) {
      case 1:
      case 2:
      case 3:
        var b2 = 3;
        break;
      default:
        b2 = y2;
    }
    var c2 = y2;
    y2 = b2;
    try {
      return a2();
    } finally {
      y2 = c2;
    }
  };
  exports.unstable_pauseExecution = function() {
  };
  exports.unstable_requestPaint = function() {
  };
  exports.unstable_runWithPriority = function(a2, b2) {
    switch (a2) {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        break;
      default:
        a2 = 3;
    }
    var c2 = y2;
    y2 = a2;
    try {
      return b2();
    } finally {
      y2 = c2;
    }
  };
  exports.unstable_scheduleCallback = function(a2, b2, c2) {
    var d2 = exports.unstable_now();
    typeof c2 === "object" && c2 !== null ? (c2 = c2.delay, c2 = typeof c2 === "number" && 0 < c2 ? d2 + c2 : d2) : c2 = d2;
    switch (a2) {
      case 1:
        var e2 = -1;
        break;
      case 2:
        e2 = 250;
        break;
      case 5:
        e2 = 1073741823;
        break;
      case 4:
        e2 = 1e4;
        break;
      default:
        e2 = 5e3;
    }
    e2 = c2 + e2;
    a2 = { id: u2++, callback: b2, priorityLevel: a2, startTime: c2, expirationTime: e2, sortIndex: -1 };
    c2 > d2 ? (a2.sortIndex = c2, f2(t2, a2), h2(r2) === null && a2 === h2(t2) && (B2 ? (E2(L2), L2 = -1) : B2 = true, K2(H2, c2 - d2))) : (a2.sortIndex = e2, f2(r2, a2), A2 || z2 || (A2 = true, I2(J2)));
    return a2;
  };
  exports.unstable_shouldYield = M2;
  exports.unstable_wrapCallback = function(a2) {
    var b2 = y2;
    return function() {
      var c2 = y2;
      y2 = b2;
      try {
        return a2.apply(this, arguments);
      } finally {
        y2 = c2;
      }
    };
  };
})(scheduler_production_min);
{
  scheduler.exports = scheduler_production_min;
}
/** @license React vundefined
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var p$1 = objectAssign, aa = react.exports, ba = scheduler.exports;
function v(a2) {
  for (var b2 = "https://reactjs.org/docs/error-decoder.html?invariant=" + a2, c2 = 1; c2 < arguments.length; c2++)
    b2 += "&args[]=" + encodeURIComponent(arguments[c2]);
  return "Minified React error #" + a2 + "; visit " + b2 + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}
var ca = new Set(), da = {};
function ea(a2, b2) {
  fa(a2, b2);
  fa(a2 + "Capture", b2);
}
function fa(a2, b2) {
  da[a2] = b2;
  for (a2 = 0; a2 < b2.length; a2++)
    ca.add(b2[a2]);
}
var ia = !(typeof window === "undefined" || typeof window.document === "undefined" || typeof window.document.createElement === "undefined"), ja = Object.prototype.hasOwnProperty, ka = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, la = {}, ma = {};
function na(a2) {
  if (ja.call(ma, a2))
    return true;
  if (ja.call(la, a2))
    return false;
  if (ka.test(a2))
    return ma[a2] = true;
  la[a2] = true;
  return false;
}
function oa(a2, b2, c2, d2) {
  if (c2 !== null && c2.type === 0)
    return false;
  switch (typeof b2) {
    case "function":
    case "symbol":
      return true;
    case "boolean":
      if (d2)
        return false;
      if (c2 !== null)
        return !c2.acceptsBooleans;
      a2 = a2.toLowerCase().slice(0, 5);
      return a2 !== "data-" && a2 !== "aria-";
    default:
      return false;
  }
}
function pa(a2, b2, c2, d2) {
  if (b2 === null || typeof b2 === "undefined" || oa(a2, b2, c2, d2))
    return true;
  if (d2)
    return false;
  if (c2 !== null)
    switch (c2.type) {
      case 3:
        return !b2;
      case 4:
        return b2 === false;
      case 5:
        return isNaN(b2);
      case 6:
        return isNaN(b2) || 1 > b2;
    }
  return false;
}
function y(a2, b2, c2, d2, e2, f2, g2) {
  this.acceptsBooleans = b2 === 2 || b2 === 3 || b2 === 4;
  this.attributeName = d2;
  this.attributeNamespace = e2;
  this.mustUseProperty = c2;
  this.propertyName = a2;
  this.type = b2;
  this.sanitizeURL = f2;
  this.removeEmptyString = g2;
}
var A = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a2) {
  A[a2] = new y(a2, 0, false, a2, null, false, false);
});
[["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(a2) {
  var b2 = a2[0];
  A[b2] = new y(b2, 1, false, a2[1], null, false, false);
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function(a2) {
  A[a2] = new y(a2, 2, false, a2.toLowerCase(), null, false, false);
});
["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(a2) {
  A[a2] = new y(a2, 2, false, a2, null, false, false);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a2) {
  A[a2] = new y(a2, 3, false, a2.toLowerCase(), null, false, false);
});
["checked", "multiple", "muted", "selected"].forEach(function(a2) {
  A[a2] = new y(a2, 3, true, a2, null, false, false);
});
["capture", "download"].forEach(function(a2) {
  A[a2] = new y(a2, 4, false, a2, null, false, false);
});
["cols", "rows", "size", "span"].forEach(function(a2) {
  A[a2] = new y(a2, 6, false, a2, null, false, false);
});
["rowSpan", "start"].forEach(function(a2) {
  A[a2] = new y(a2, 5, false, a2.toLowerCase(), null, false, false);
});
var qa = /[\-:]([a-z])/g;
function ra(a2) {
  return a2[1].toUpperCase();
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a2) {
  var b2 = a2.replace(qa, ra);
  A[b2] = new y(b2, 1, false, a2, null, false, false);
});
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a2) {
  var b2 = a2.replace(qa, ra);
  A[b2] = new y(b2, 1, false, a2, "http://www.w3.org/1999/xlink", false, false);
});
["xml:base", "xml:lang", "xml:space"].forEach(function(a2) {
  var b2 = a2.replace(qa, ra);
  A[b2] = new y(b2, 1, false, a2, "http://www.w3.org/XML/1998/namespace", false, false);
});
["tabIndex", "crossOrigin"].forEach(function(a2) {
  A[a2] = new y(a2, 1, false, a2.toLowerCase(), null, false, false);
});
A.xlinkHref = new y("xlinkHref", 1, false, "xlink:href", "http://www.w3.org/1999/xlink", true, false);
["src", "href", "action", "formAction"].forEach(function(a2) {
  A[a2] = new y(a2, 1, false, a2.toLowerCase(), null, true, true);
});
function sa(a2, b2, c2, d2) {
  var e2 = A.hasOwnProperty(b2) ? A[b2] : null;
  var f2 = e2 !== null ? e2.type === 0 : d2 ? false : !(2 < b2.length) || b2[0] !== "o" && b2[0] !== "O" || b2[1] !== "n" && b2[1] !== "N" ? false : true;
  f2 || (pa(b2, c2, e2, d2) && (c2 = null), d2 || e2 === null ? na(b2) && (c2 === null ? a2.removeAttribute(b2) : a2.setAttribute(b2, "" + c2)) : e2.mustUseProperty ? a2[e2.propertyName] = c2 === null ? e2.type === 3 ? false : "" : c2 : (b2 = e2.attributeName, d2 = e2.attributeNamespace, c2 === null ? a2.removeAttribute(b2) : (e2 = e2.type, c2 = e2 === 3 || e2 === 4 && c2 === true ? "" : "" + c2, d2 ? a2.setAttributeNS(d2, b2, c2) : a2.setAttribute(b2, c2))));
}
var ta = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, ua = 60103, va = 60106, wa = 60107, xa = 60108, ya = 60114, za = 60109, Aa = 60110, Ba = 60112, Ca = 60113, Da = 60120, Ea = 60115, Fa = 60116, Ga = 60128, Ha = 60129, Ia = 60130, Ja = 60131, Ka = 60132;
if (typeof Symbol === "function" && Symbol.for) {
  var C = Symbol.for;
  ua = C("react.element");
  va = C("react.portal");
  wa = C("react.fragment");
  xa = C("react.strict_mode");
  ya = C("react.profiler");
  za = C("react.provider");
  Aa = C("react.context");
  Ba = C("react.forward_ref");
  Ca = C("react.suspense");
  Da = C("react.suspense_list");
  Ea = C("react.memo");
  Fa = C("react.lazy");
  C("react.scope");
  Ga = C("react.opaque.id");
  Ha = C("react.debug_trace_mode");
  Ia = C("react.offscreen");
  Ja = C("react.legacy_hidden");
  Ka = C("react.cache");
}
var La = typeof Symbol === "function" && Symbol.iterator;
function Ma(a2) {
  if (a2 === null || typeof a2 !== "object")
    return null;
  a2 = La && a2[La] || a2["@@iterator"];
  return typeof a2 === "function" ? a2 : null;
}
var Na;
function Oa(a2) {
  if (Na === void 0)
    try {
      throw Error();
    } catch (c2) {
      var b2 = c2.stack.trim().match(/\n( *(at )?)/);
      Na = b2 && b2[1] || "";
    }
  return "\n" + Na + a2;
}
var Pa = false;
function Qa(a2, b2) {
  if (!a2 || Pa)
    return "";
  Pa = true;
  var c2 = Error.prepareStackTrace;
  Error.prepareStackTrace = void 0;
  try {
    if (b2)
      if (b2 = function() {
        throw Error();
      }, Object.defineProperty(b2.prototype, "props", { set: function() {
        throw Error();
      } }), typeof Reflect === "object" && Reflect.construct) {
        try {
          Reflect.construct(b2, []);
        } catch (k2) {
          var d2 = k2;
        }
        Reflect.construct(a2, [], b2);
      } else {
        try {
          b2.call();
        } catch (k2) {
          d2 = k2;
        }
        a2.call(b2.prototype);
      }
    else {
      try {
        throw Error();
      } catch (k2) {
        d2 = k2;
      }
      a2();
    }
  } catch (k2) {
    if (k2 && d2 && typeof k2.stack === "string") {
      for (var e2 = k2.stack.split("\n"), f2 = d2.stack.split("\n"), g2 = e2.length - 1, h2 = f2.length - 1; 1 <= g2 && 0 <= h2 && e2[g2] !== f2[h2]; )
        h2--;
      for (; 1 <= g2 && 0 <= h2; g2--, h2--)
        if (e2[g2] !== f2[h2]) {
          if (g2 !== 1 || h2 !== 1) {
            do
              if (g2--, h2--, 0 > h2 || e2[g2] !== f2[h2])
                return "\n" + e2[g2].replace(" at new ", " at ");
            while (1 <= g2 && 0 <= h2);
          }
          break;
        }
    }
  } finally {
    Pa = false, Error.prepareStackTrace = c2;
  }
  return (a2 = a2 ? a2.displayName || a2.name : "") ? Oa(a2) : "";
}
function Ra(a2) {
  switch (a2.tag) {
    case 5:
      return Oa(a2.type);
    case 16:
      return Oa("Lazy");
    case 13:
      return Oa("Suspense");
    case 19:
      return Oa("SuspenseList");
    case 0:
    case 2:
    case 15:
      return a2 = Qa(a2.type, false), a2;
    case 11:
      return a2 = Qa(a2.type.render, false), a2;
    case 1:
      return a2 = Qa(a2.type, true), a2;
    default:
      return "";
  }
}
function Sa(a2) {
  if (a2 == null)
    return null;
  if (typeof a2 === "function")
    return a2.displayName || a2.name || null;
  if (typeof a2 === "string")
    return a2;
  switch (a2) {
    case wa:
      return "Fragment";
    case va:
      return "Portal";
    case ya:
      return "Profiler";
    case xa:
      return "StrictMode";
    case Ca:
      return "Suspense";
    case Da:
      return "SuspenseList";
    case Ka:
      return "Cache";
  }
  if (typeof a2 === "object")
    switch (a2.$$typeof) {
      case Aa:
        return (a2.displayName || "Context") + ".Consumer";
      case za:
        return (a2._context.displayName || "Context") + ".Provider";
      case Ba:
        var b2 = a2.render;
        a2 = a2.displayName;
        a2 || (a2 = b2.displayName || b2.name || "", a2 = a2 !== "" ? "ForwardRef(" + a2 + ")" : "ForwardRef");
        return a2;
      case Ea:
        return b2 = a2.displayName || null, b2 !== null ? b2 : Sa(a2.type) || "Memo";
      case Fa:
        b2 = a2._payload;
        a2 = a2._init;
        try {
          return Sa(a2(b2));
        } catch (c2) {
        }
    }
  return null;
}
function Ta(a2) {
  var b2 = a2.type;
  switch (a2.tag) {
    case 24:
      return "Cache";
    case 9:
      return (b2.displayName || "Context") + ".Consumer";
    case 10:
      return (b2._context.displayName || "Context") + ".Provider";
    case 18:
      return "DehydratedFragment";
    case 11:
      return a2 = b2.render, a2 = a2.displayName || a2.name || "", b2.displayName || (a2 !== "" ? "ForwardRef(" + a2 + ")" : "ForwardRef");
    case 7:
      return "Fragment";
    case 5:
      return b2;
    case 4:
      return "Portal";
    case 3:
      return "Root";
    case 6:
      return "Text";
    case 16:
      return Sa(b2);
    case 23:
      return "LegacyHidden";
    case 8:
      return b2 === xa ? "StrictMode" : "Mode";
    case 22:
      return "Offscreen";
    case 12:
      return "Profiler";
    case 21:
      return "Scope";
    case 13:
      return "Suspense";
    case 19:
      return "SuspenseList";
    case 1:
    case 0:
    case 17:
    case 2:
    case 14:
    case 15:
      if (typeof b2 === "function")
        return b2.displayName || b2.name || null;
      if (typeof b2 === "string")
        return b2;
  }
  return null;
}
function Ua(a2) {
  switch (typeof a2) {
    case "boolean":
    case "number":
    case "object":
    case "string":
    case "undefined":
      return a2;
    default:
      return "";
  }
}
function Va(a2) {
  var b2 = a2.type;
  return (a2 = a2.nodeName) && a2.toLowerCase() === "input" && (b2 === "checkbox" || b2 === "radio");
}
function Wa(a2) {
  var b2 = Va(a2) ? "checked" : "value", c2 = Object.getOwnPropertyDescriptor(a2.constructor.prototype, b2), d2 = "" + a2[b2];
  if (!a2.hasOwnProperty(b2) && typeof c2 !== "undefined" && typeof c2.get === "function" && typeof c2.set === "function") {
    var e2 = c2.get, f2 = c2.set;
    Object.defineProperty(a2, b2, { configurable: true, get: function() {
      return e2.call(this);
    }, set: function(a3) {
      d2 = "" + a3;
      f2.call(this, a3);
    } });
    Object.defineProperty(a2, b2, { enumerable: c2.enumerable });
    return { getValue: function() {
      return d2;
    }, setValue: function(a3) {
      d2 = "" + a3;
    }, stopTracking: function() {
      a2._valueTracker = null;
      delete a2[b2];
    } };
  }
}
function Xa(a2) {
  a2._valueTracker || (a2._valueTracker = Wa(a2));
}
function Ya(a2) {
  if (!a2)
    return false;
  var b2 = a2._valueTracker;
  if (!b2)
    return true;
  var c2 = b2.getValue();
  var d2 = "";
  a2 && (d2 = Va(a2) ? a2.checked ? "true" : "false" : a2.value);
  a2 = d2;
  return a2 !== c2 ? (b2.setValue(a2), true) : false;
}
function Za(a2) {
  a2 = a2 || (typeof document !== "undefined" ? document : void 0);
  if (typeof a2 === "undefined")
    return null;
  try {
    return a2.activeElement || a2.body;
  } catch (b2) {
    return a2.body;
  }
}
function $a(a2, b2) {
  var c2 = b2.checked;
  return p$1({}, b2, { defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: c2 != null ? c2 : a2._wrapperState.initialChecked });
}
function ab(a2, b2) {
  var c2 = b2.defaultValue == null ? "" : b2.defaultValue, d2 = b2.checked != null ? b2.checked : b2.defaultChecked;
  c2 = Ua(b2.value != null ? b2.value : c2);
  a2._wrapperState = { initialChecked: d2, initialValue: c2, controlled: b2.type === "checkbox" || b2.type === "radio" ? b2.checked != null : b2.value != null };
}
function bb(a2, b2) {
  b2 = b2.checked;
  b2 != null && sa(a2, "checked", b2, false);
}
function cb(a2, b2) {
  bb(a2, b2);
  var c2 = Ua(b2.value), d2 = b2.type;
  if (c2 != null)
    if (d2 === "number") {
      if (c2 === 0 && a2.value === "" || a2.value != c2)
        a2.value = "" + c2;
    } else
      a2.value !== "" + c2 && (a2.value = "" + c2);
  else if (d2 === "submit" || d2 === "reset") {
    a2.removeAttribute("value");
    return;
  }
  b2.hasOwnProperty("value") ? db(a2, b2.type, c2) : b2.hasOwnProperty("defaultValue") && db(a2, b2.type, Ua(b2.defaultValue));
  b2.checked == null && b2.defaultChecked != null && (a2.defaultChecked = !!b2.defaultChecked);
}
function eb(a2, b2, c2) {
  if (b2.hasOwnProperty("value") || b2.hasOwnProperty("defaultValue")) {
    var d2 = b2.type;
    if (!(d2 !== "submit" && d2 !== "reset" || b2.value !== void 0 && b2.value !== null))
      return;
    b2 = "" + a2._wrapperState.initialValue;
    c2 || b2 === a2.value || (a2.value = b2);
    a2.defaultValue = b2;
  }
  c2 = a2.name;
  c2 !== "" && (a2.name = "");
  a2.defaultChecked = !!a2._wrapperState.initialChecked;
  c2 !== "" && (a2.name = c2);
}
function db(a2, b2, c2) {
  if (b2 !== "number" || Za(a2.ownerDocument) !== a2)
    c2 == null ? a2.defaultValue = "" + a2._wrapperState.initialValue : a2.defaultValue !== "" + c2 && (a2.defaultValue = "" + c2);
}
var fb = Array.isArray;
function gb(a2, b2, c2, d2) {
  a2 = a2.options;
  if (b2) {
    b2 = {};
    for (var e2 = 0; e2 < c2.length; e2++)
      b2["$" + c2[e2]] = true;
    for (c2 = 0; c2 < a2.length; c2++)
      e2 = b2.hasOwnProperty("$" + a2[c2].value), a2[c2].selected !== e2 && (a2[c2].selected = e2), e2 && d2 && (a2[c2].defaultSelected = true);
  } else {
    c2 = "" + Ua(c2);
    b2 = null;
    for (e2 = 0; e2 < a2.length; e2++) {
      if (a2[e2].value === c2) {
        a2[e2].selected = true;
        d2 && (a2[e2].defaultSelected = true);
        return;
      }
      b2 !== null || a2[e2].disabled || (b2 = a2[e2]);
    }
    b2 !== null && (b2.selected = true);
  }
}
function hb(a2, b2) {
  if (b2.dangerouslySetInnerHTML != null)
    throw Error(v(91));
  return p$1({}, b2, { value: void 0, defaultValue: void 0, children: "" + a2._wrapperState.initialValue });
}
function ib(a2, b2) {
  var c2 = b2.value;
  if (c2 == null) {
    c2 = b2.children;
    b2 = b2.defaultValue;
    if (c2 != null) {
      if (b2 != null)
        throw Error(v(92));
      if (fb(c2)) {
        if (!(1 >= c2.length))
          throw Error(v(93));
        c2 = c2[0];
      }
      b2 = c2;
    }
    b2 == null && (b2 = "");
    c2 = b2;
  }
  a2._wrapperState = { initialValue: Ua(c2) };
}
function jb(a2, b2) {
  var c2 = Ua(b2.value), d2 = Ua(b2.defaultValue);
  c2 != null && (c2 = "" + c2, c2 !== a2.value && (a2.value = c2), b2.defaultValue == null && a2.defaultValue !== c2 && (a2.defaultValue = c2));
  d2 != null && (a2.defaultValue = "" + d2);
}
function kb(a2) {
  var b2 = a2.textContent;
  b2 === a2._wrapperState.initialValue && b2 !== "" && b2 !== null && (a2.value = b2);
}
function lb(a2) {
  switch (a2) {
    case "svg":
      return "http://www.w3.org/2000/svg";
    case "math":
      return "http://www.w3.org/1998/Math/MathML";
    default:
      return "http://www.w3.org/1999/xhtml";
  }
}
function mb(a2, b2) {
  return a2 == null || a2 === "http://www.w3.org/1999/xhtml" ? lb(b2) : a2 === "http://www.w3.org/2000/svg" && b2 === "foreignObject" ? "http://www.w3.org/1999/xhtml" : a2;
}
var nb, ob = function(a2) {
  return typeof MSApp !== "undefined" && MSApp.execUnsafeLocalFunction ? function(b2, c2, d2, e2) {
    MSApp.execUnsafeLocalFunction(function() {
      return a2(b2, c2, d2, e2);
    });
  } : a2;
}(function(a2, b2) {
  if (a2.namespaceURI !== "http://www.w3.org/2000/svg" || "innerHTML" in a2)
    a2.innerHTML = b2;
  else {
    nb = nb || document.createElement("div");
    nb.innerHTML = "<svg>" + b2.valueOf().toString() + "</svg>";
    for (b2 = nb.firstChild; a2.firstChild; )
      a2.removeChild(a2.firstChild);
    for (; b2.firstChild; )
      a2.appendChild(b2.firstChild);
  }
});
function pb(a2, b2) {
  if (b2) {
    var c2 = a2.firstChild;
    if (c2 && c2 === a2.lastChild && c2.nodeType === 3) {
      c2.nodeValue = b2;
      return;
    }
  }
  a2.textContent = b2;
}
var qb = {
  animationIterationCount: true,
  aspectRatio: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridArea: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
}, rb = ["Webkit", "ms", "Moz", "O"];
Object.keys(qb).forEach(function(a2) {
  rb.forEach(function(b2) {
    b2 = b2 + a2.charAt(0).toUpperCase() + a2.substring(1);
    qb[b2] = qb[a2];
  });
});
function sb(a2, b2, c2) {
  return b2 == null || typeof b2 === "boolean" || b2 === "" ? "" : c2 || typeof b2 !== "number" || b2 === 0 || qb.hasOwnProperty(a2) && qb[a2] ? ("" + b2).trim() : b2 + "px";
}
function tb(a2, b2) {
  a2 = a2.style;
  for (var c2 in b2)
    if (b2.hasOwnProperty(c2)) {
      var d2 = c2.indexOf("--") === 0, e2 = sb(c2, b2[c2], d2);
      c2 === "float" && (c2 = "cssFloat");
      d2 ? a2.setProperty(c2, e2) : a2[c2] = e2;
    }
}
var ub = p$1({ menuitem: true }, { area: true, base: true, br: true, col: true, embed: true, hr: true, img: true, input: true, keygen: true, link: true, meta: true, param: true, source: true, track: true, wbr: true });
function vb(a2, b2) {
  if (b2) {
    if (ub[a2] && (b2.children != null || b2.dangerouslySetInnerHTML != null))
      throw Error(v(137, a2));
    if (b2.dangerouslySetInnerHTML != null) {
      if (b2.children != null)
        throw Error(v(60));
      if (!(typeof b2.dangerouslySetInnerHTML === "object" && "__html" in b2.dangerouslySetInnerHTML))
        throw Error(v(61));
    }
    if (b2.style != null && typeof b2.style !== "object")
      throw Error(v(62));
  }
}
function wb(a2, b2) {
  if (a2.indexOf("-") === -1)
    return typeof b2.is === "string";
  switch (a2) {
    case "annotation-xml":
    case "color-profile":
    case "font-face":
    case "font-face-src":
    case "font-face-uri":
    case "font-face-format":
    case "font-face-name":
    case "missing-glyph":
      return false;
    default:
      return true;
  }
}
function xb(a2) {
  a2 = a2.target || a2.srcElement || window;
  a2.correspondingUseElement && (a2 = a2.correspondingUseElement);
  return a2.nodeType === 3 ? a2.parentNode : a2;
}
var yb = null, zb = null, Ab = null;
function Bb(a2) {
  if (a2 = Cb(a2)) {
    if (typeof yb !== "function")
      throw Error(v(280));
    var b2 = a2.stateNode;
    b2 && (b2 = Db(b2), yb(a2.stateNode, a2.type, b2));
  }
}
function Eb(a2) {
  zb ? Ab ? Ab.push(a2) : Ab = [a2] : zb = a2;
}
function Fb() {
  if (zb) {
    var a2 = zb, b2 = Ab;
    Ab = zb = null;
    Bb(a2);
    if (b2)
      for (a2 = 0; a2 < b2.length; a2++)
        Bb(b2[a2]);
  }
}
function Gb(a2, b2) {
  return a2(b2);
}
function Hb(a2, b2, c2, d2, e2) {
  return a2(b2, c2, d2, e2);
}
function Ib() {
}
var Jb = Gb, Kb = false, Lb = false;
function Mb() {
  if (zb !== null || Ab !== null)
    Ib(), Fb();
}
function Nb(a2, b2, c2) {
  if (Lb)
    return a2(b2, c2);
  Lb = true;
  try {
    return Jb(a2, b2, c2);
  } finally {
    Lb = false, Mb();
  }
}
function Ob(a2, b2) {
  var c2 = a2.stateNode;
  if (c2 === null)
    return null;
  var d2 = Db(c2);
  if (d2 === null)
    return null;
  c2 = d2[b2];
  a:
    switch (b2) {
      case "onClick":
      case "onClickCapture":
      case "onDoubleClick":
      case "onDoubleClickCapture":
      case "onMouseDown":
      case "onMouseDownCapture":
      case "onMouseMove":
      case "onMouseMoveCapture":
      case "onMouseUp":
      case "onMouseUpCapture":
      case "onMouseEnter":
        (d2 = !d2.disabled) || (a2 = a2.type, d2 = !(a2 === "button" || a2 === "input" || a2 === "select" || a2 === "textarea"));
        a2 = !d2;
        break a;
      default:
        a2 = false;
    }
  if (a2)
    return null;
  if (c2 && typeof c2 !== "function")
    throw Error(v(231, b2, typeof c2));
  return c2;
}
var Pb = false;
if (ia)
  try {
    var Qb = {};
    Object.defineProperty(Qb, "passive", { get: function() {
      Pb = true;
    } });
    window.addEventListener("test", Qb, Qb);
    window.removeEventListener("test", Qb, Qb);
  } catch (a2) {
    Pb = false;
  }
function Rb(a2, b2, c2, d2, e2, f2, g2, h2, k2) {
  var l2 = Array.prototype.slice.call(arguments, 3);
  try {
    b2.apply(c2, l2);
  } catch (m2) {
    this.onError(m2);
  }
}
var Sb = false, Tb = null, Ub = false, Vb = null, Wb = { onError: function(a2) {
  Sb = true;
  Tb = a2;
} };
function Xb(a2, b2, c2, d2, e2, f2, g2, h2, k2) {
  Sb = false;
  Tb = null;
  Rb.apply(Wb, arguments);
}
function Yb(a2, b2, c2, d2, e2, f2, g2, h2, k2) {
  Xb.apply(this, arguments);
  if (Sb) {
    if (Sb) {
      var l2 = Tb;
      Sb = false;
      Tb = null;
    } else
      throw Error(v(198));
    Ub || (Ub = true, Vb = l2);
  }
}
function Zb(a2) {
  var b2 = a2, c2 = a2;
  if (a2.alternate)
    for (; b2.return; )
      b2 = b2.return;
  else {
    a2 = b2;
    do
      b2 = a2, (b2.flags & 2050) !== 0 && (c2 = b2.return), a2 = b2.return;
    while (a2);
  }
  return b2.tag === 3 ? c2 : null;
}
function $b(a2) {
  if (a2.tag === 13) {
    var b2 = a2.memoizedState;
    b2 === null && (a2 = a2.alternate, a2 !== null && (b2 = a2.memoizedState));
    if (b2 !== null)
      return b2.dehydrated;
  }
  return null;
}
function ac(a2) {
  if (Zb(a2) !== a2)
    throw Error(v(188));
}
function bc(a2) {
  var b2 = a2.alternate;
  if (!b2) {
    b2 = Zb(a2);
    if (b2 === null)
      throw Error(v(188));
    return b2 !== a2 ? null : a2;
  }
  for (var c2 = a2, d2 = b2; ; ) {
    var e2 = c2.return;
    if (e2 === null)
      break;
    var f2 = e2.alternate;
    if (f2 === null) {
      d2 = e2.return;
      if (d2 !== null) {
        c2 = d2;
        continue;
      }
      break;
    }
    if (e2.child === f2.child) {
      for (f2 = e2.child; f2; ) {
        if (f2 === c2)
          return ac(e2), a2;
        if (f2 === d2)
          return ac(e2), b2;
        f2 = f2.sibling;
      }
      throw Error(v(188));
    }
    if (c2.return !== d2.return)
      c2 = e2, d2 = f2;
    else {
      for (var g2 = false, h2 = e2.child; h2; ) {
        if (h2 === c2) {
          g2 = true;
          c2 = e2;
          d2 = f2;
          break;
        }
        if (h2 === d2) {
          g2 = true;
          d2 = e2;
          c2 = f2;
          break;
        }
        h2 = h2.sibling;
      }
      if (!g2) {
        for (h2 = f2.child; h2; ) {
          if (h2 === c2) {
            g2 = true;
            c2 = f2;
            d2 = e2;
            break;
          }
          if (h2 === d2) {
            g2 = true;
            d2 = f2;
            c2 = e2;
            break;
          }
          h2 = h2.sibling;
        }
        if (!g2)
          throw Error(v(189));
      }
    }
    if (c2.alternate !== d2)
      throw Error(v(190));
  }
  if (c2.tag !== 3)
    throw Error(v(188));
  return c2.stateNode.current === c2 ? a2 : b2;
}
function cc(a2) {
  a2 = bc(a2);
  return a2 !== null ? dc(a2) : null;
}
function dc(a2) {
  if (a2.tag === 5 || a2.tag === 6)
    return a2;
  for (a2 = a2.child; a2 !== null; ) {
    var b2 = dc(a2);
    if (b2 !== null)
      return b2;
    a2 = a2.sibling;
  }
  return null;
}
function ec(a2, b2) {
  for (var c2 = a2.alternate; b2 !== null; ) {
    if (b2 === a2 || b2 === c2)
      return true;
    b2 = b2.return;
  }
  return false;
}
var fc = ba.unstable_scheduleCallback, gc = ba.unstable_cancelCallback, hc = ba.unstable_shouldYield, ic = ba.unstable_requestPaint, D = ba.unstable_now, jc = ba.unstable_getCurrentPriorityLevel, kc = ba.unstable_ImmediatePriority, lc = ba.unstable_UserBlockingPriority, mc = ba.unstable_NormalPriority, nc = ba.unstable_LowPriority, oc = ba.unstable_IdlePriority, pc = null, qc = null;
function rc(a2) {
  if (qc && typeof qc.onCommitFiberRoot === "function")
    try {
      qc.onCommitFiberRoot(pc, a2, void 0, (a2.current.flags & 128) === 128);
    } catch (b2) {
    }
}
var sc = 64, tc = 4194304;
function uc(a2) {
  switch (a2 & -a2) {
    case 1:
      return 1;
    case 2:
      return 2;
    case 4:
      return 4;
    case 8:
      return 8;
    case 16:
      return 16;
    case 32:
      return 32;
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return a2 & 4194240;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return a2 & 130023424;
    case 134217728:
      return 134217728;
    case 268435456:
      return 268435456;
    case 536870912:
      return 536870912;
    case 1073741824:
      return 1073741824;
    default:
      return a2;
  }
}
function vc(a2, b2) {
  var c2 = a2.pendingLanes;
  if (c2 === 0)
    return 0;
  var d2 = 0, e2 = a2.suspendedLanes, f2 = a2.pingedLanes, g2 = c2 & 268435455;
  if (g2 !== 0) {
    var h2 = g2 & ~e2;
    h2 !== 0 ? d2 = uc(h2) : (f2 &= g2, f2 !== 0 && (d2 = uc(f2)));
  } else
    g2 = c2 & ~e2, g2 !== 0 ? d2 = uc(g2) : f2 !== 0 && (d2 = uc(f2));
  if (d2 === 0)
    return 0;
  if (b2 !== 0 && b2 !== d2 && (b2 & e2) === 0 && (e2 = d2 & -d2, f2 = b2 & -b2, e2 >= f2 || e2 === 16 && (f2 & 4194240) !== 0))
    return b2;
  (d2 & 4) !== 0 && (d2 |= c2 & 16);
  b2 = a2.entangledLanes;
  if (b2 !== 0)
    for (a2 = a2.entanglements, b2 &= d2; 0 < b2; )
      c2 = 31 - wc(b2), e2 = 1 << c2, d2 |= a2[c2], b2 &= ~e2;
  return d2;
}
function xc(a2, b2) {
  switch (a2) {
    case 1:
    case 2:
    case 4:
      return b2 + 250;
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return b2 + 5e3;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return -1;
    case 134217728:
    case 268435456:
    case 536870912:
    case 1073741824:
      return -1;
    default:
      return -1;
  }
}
function yc(a2) {
  a2 = a2.pendingLanes & -1073741825;
  return a2 !== 0 ? a2 : a2 & 1073741824 ? 1073741824 : 0;
}
function zc(a2) {
  for (var b2 = [], c2 = 0; 31 > c2; c2++)
    b2.push(a2);
  return b2;
}
function Ac(a2, b2, c2) {
  a2.pendingLanes |= b2;
  b2 !== 536870912 && (a2.suspendedLanes = 0, a2.pingedLanes = 0);
  a2 = a2.eventTimes;
  b2 = 31 - wc(b2);
  a2[b2] = c2;
}
function Bc(a2, b2) {
  var c2 = a2.pendingLanes & ~b2;
  a2.pendingLanes = b2;
  a2.suspendedLanes = 0;
  a2.pingedLanes = 0;
  a2.expiredLanes &= b2;
  a2.mutableReadLanes &= b2;
  a2.entangledLanes &= b2;
  b2 = a2.entanglements;
  var d2 = a2.eventTimes;
  for (a2 = a2.expirationTimes; 0 < c2; ) {
    var e2 = 31 - wc(c2), f2 = 1 << e2;
    b2[e2] = 0;
    d2[e2] = -1;
    a2[e2] = -1;
    c2 &= ~f2;
  }
}
function Cc(a2, b2) {
  var c2 = a2.entangledLanes |= b2;
  for (a2 = a2.entanglements; c2; ) {
    var d2 = 31 - wc(c2), e2 = 1 << d2;
    e2 & b2 | a2[d2] & b2 && (a2[d2] |= b2);
    c2 &= ~e2;
  }
}
var wc = Math.clz32 ? Math.clz32 : Dc, Ec = Math.log, Fc = Math.LN2;
function Dc(a2) {
  return a2 === 0 ? 32 : 31 - (Ec(a2) / Fc | 0) | 0;
}
var E = 0;
function Gc(a2) {
  a2 &= -a2;
  return 1 < a2 ? 4 < a2 ? (a2 & 268435455) !== 0 ? 16 : 536870912 : 4 : 1;
}
var Hc, Ic, Jc, Kc, Lc, Mc = false, Nc = [], Oc = null, Pc = null, Qc = null, Rc = new Map(), Sc = new Map(), Tc = [], Uc = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
function Vc(a2, b2, c2, d2, e2) {
  return { blockedOn: a2, domEventName: b2, eventSystemFlags: c2 | 16, nativeEvent: e2, targetContainers: [d2] };
}
function Wc(a2, b2, c2, d2, e2) {
  a2 = Vc(a2, b2, c2, d2, e2);
  Nc.push(a2);
  if (Nc.length === 1)
    for (; a2.blockedOn !== null; ) {
      b2 = Cb(a2.blockedOn);
      if (b2 === null)
        break;
      Hc(b2);
      if (a2.blockedOn === null)
        Xc();
      else
        break;
    }
}
function Yc(a2, b2) {
  switch (a2) {
    case "focusin":
    case "focusout":
      Oc = null;
      break;
    case "dragenter":
    case "dragleave":
      Pc = null;
      break;
    case "mouseover":
    case "mouseout":
      Qc = null;
      break;
    case "pointerover":
    case "pointerout":
      Rc.delete(b2.pointerId);
      break;
    case "gotpointercapture":
    case "lostpointercapture":
      Sc.delete(b2.pointerId);
  }
}
function Zc(a2, b2, c2, d2, e2, f2) {
  if (a2 === null || a2.nativeEvent !== f2)
    return a2 = Vc(b2, c2, d2, e2, f2), b2 !== null && (b2 = Cb(b2), b2 !== null && Jc(b2)), a2;
  a2.eventSystemFlags |= d2;
  b2 = a2.targetContainers;
  e2 !== null && b2.indexOf(e2) === -1 && b2.push(e2);
  return a2;
}
function $c(a2, b2, c2, d2, e2) {
  switch (b2) {
    case "focusin":
      return Oc = Zc(Oc, a2, b2, c2, d2, e2), true;
    case "dragenter":
      return Pc = Zc(Pc, a2, b2, c2, d2, e2), true;
    case "mouseover":
      return Qc = Zc(Qc, a2, b2, c2, d2, e2), true;
    case "pointerover":
      var f2 = e2.pointerId;
      Rc.set(f2, Zc(Rc.get(f2) || null, a2, b2, c2, d2, e2));
      return true;
    case "gotpointercapture":
      return f2 = e2.pointerId, Sc.set(f2, Zc(Sc.get(f2) || null, a2, b2, c2, d2, e2)), true;
  }
  return false;
}
function ad(a2) {
  var b2 = bd(a2.target);
  if (b2 !== null) {
    var c2 = Zb(b2);
    if (c2 !== null) {
      if (b2 = c2.tag, b2 === 13) {
        if (b2 = $b(c2), b2 !== null) {
          a2.blockedOn = b2;
          Lc(a2.priority, function() {
            Kc(c2);
          });
          return;
        }
      } else if (b2 === 3 && c2.stateNode.hydrate) {
        a2.blockedOn = c2.tag === 3 ? c2.stateNode.containerInfo : null;
        return;
      }
    }
  }
  a2.blockedOn = null;
}
function cd(a2) {
  if (a2.blockedOn !== null)
    return false;
  for (var b2 = a2.targetContainers; 0 < b2.length; ) {
    var c2 = dd(a2.domEventName, a2.eventSystemFlags, b2[0], a2.nativeEvent);
    if (c2 !== null)
      return b2 = Cb(c2), b2 !== null && Jc(b2), a2.blockedOn = c2, false;
    b2.shift();
  }
  return true;
}
function ed(a2, b2, c2) {
  cd(a2) && c2.delete(b2);
}
function Xc() {
  for (Mc = false; 0 < Nc.length; ) {
    var a2 = Nc[0];
    if (a2.blockedOn !== null) {
      a2 = Cb(a2.blockedOn);
      a2 !== null && Ic(a2);
      break;
    }
    for (var b2 = a2.targetContainers; 0 < b2.length; ) {
      var c2 = dd(a2.domEventName, a2.eventSystemFlags, b2[0], a2.nativeEvent);
      if (c2 !== null) {
        a2.blockedOn = c2;
        break;
      }
      b2.shift();
    }
    a2.blockedOn === null && Nc.shift();
  }
  Oc !== null && cd(Oc) && (Oc = null);
  Pc !== null && cd(Pc) && (Pc = null);
  Qc !== null && cd(Qc) && (Qc = null);
  Rc.forEach(ed);
  Sc.forEach(ed);
}
function fd(a2, b2) {
  a2.blockedOn === b2 && (a2.blockedOn = null, Mc || (Mc = true, ba.unstable_scheduleCallback(ba.unstable_NormalPriority, Xc)));
}
function gd(a2) {
  function b2(b3) {
    return fd(b3, a2);
  }
  if (0 < Nc.length) {
    fd(Nc[0], a2);
    for (var c2 = 1; c2 < Nc.length; c2++) {
      var d2 = Nc[c2];
      d2.blockedOn === a2 && (d2.blockedOn = null);
    }
  }
  Oc !== null && fd(Oc, a2);
  Pc !== null && fd(Pc, a2);
  Qc !== null && fd(Qc, a2);
  Rc.forEach(b2);
  Sc.forEach(b2);
  for (c2 = 0; c2 < Tc.length; c2++)
    d2 = Tc[c2], d2.blockedOn === a2 && (d2.blockedOn = null);
  for (; 0 < Tc.length && (c2 = Tc[0], c2.blockedOn === null); )
    ad(c2), c2.blockedOn === null && Tc.shift();
}
var hd = ta.ReactCurrentBatchConfig, id$1 = true;
function jd(a2, b2, c2, d2) {
  var e2 = kd, f2 = Kb;
  Kb = true;
  try {
    Hb(e2, a2, b2, c2, d2);
  } finally {
    (Kb = f2) || Mb();
  }
}
function ld(a2, b2, c2, d2) {
  var e2 = E, f2 = hd.transition;
  hd.transition = 0;
  try {
    E = 4, kd(a2, b2, c2, d2);
  } finally {
    E = e2, hd.transition = f2;
  }
}
function kd(a2, b2, c2, d2) {
  if (id$1) {
    var e2 = (b2 & 4) === 0;
    if (e2 && 0 < Nc.length && -1 < Uc.indexOf(a2))
      Wc(null, a2, b2, c2, d2);
    else {
      var f2 = dd(a2, b2, c2, d2);
      if (f2 === null)
        e2 && Yc(a2, d2);
      else {
        if (e2) {
          if (-1 < Uc.indexOf(a2)) {
            Wc(f2, a2, b2, c2, d2);
            return;
          }
          if ($c(f2, a2, b2, c2, d2))
            return;
          Yc(a2, d2);
        }
        md(a2, b2, d2, null, c2);
      }
    }
  }
}
function dd(a2, b2, c2, d2) {
  var e2 = xb(d2);
  e2 = bd(e2);
  if (e2 !== null) {
    var f2 = Zb(e2);
    if (f2 === null)
      e2 = null;
    else {
      var g2 = f2.tag;
      if (g2 === 13) {
        e2 = $b(f2);
        if (e2 !== null)
          return e2;
        e2 = null;
      } else if (g2 === 3) {
        if (f2.stateNode.hydrate)
          return f2.tag === 3 ? f2.stateNode.containerInfo : null;
        e2 = null;
      } else
        f2 !== e2 && (e2 = null);
    }
  }
  md(a2, b2, d2, e2, c2);
  return null;
}
function nd(a2) {
  switch (a2) {
    case "cancel":
    case "click":
    case "close":
    case "contextmenu":
    case "copy":
    case "cut":
    case "auxclick":
    case "dblclick":
    case "dragend":
    case "dragstart":
    case "drop":
    case "focusin":
    case "focusout":
    case "input":
    case "invalid":
    case "keydown":
    case "keypress":
    case "keyup":
    case "mousedown":
    case "mouseup":
    case "paste":
    case "pause":
    case "play":
    case "pointercancel":
    case "pointerdown":
    case "pointerup":
    case "ratechange":
    case "reset":
    case "seeked":
    case "submit":
    case "touchcancel":
    case "touchend":
    case "touchstart":
    case "volumechange":
    case "change":
    case "selectionchange":
    case "textInput":
    case "compositionstart":
    case "compositionend":
    case "compositionupdate":
    case "beforeblur":
    case "afterblur":
    case "beforeinput":
    case "blur":
    case "fullscreenchange":
    case "focus":
    case "hashchange":
    case "popstate":
    case "select":
    case "selectstart":
      return 1;
    case "drag":
    case "dragenter":
    case "dragexit":
    case "dragleave":
    case "dragover":
    case "mousemove":
    case "mouseout":
    case "mouseover":
    case "pointermove":
    case "pointerout":
    case "pointerover":
    case "scroll":
    case "toggle":
    case "touchmove":
    case "wheel":
    case "mouseenter":
    case "mouseleave":
    case "pointerenter":
    case "pointerleave":
      return 4;
    case "message":
      switch (jc()) {
        case kc:
          return 1;
        case lc:
          return 4;
        case mc:
        case nc:
          return 16;
        case oc:
          return 536870912;
        default:
          return 16;
      }
    default:
      return 16;
  }
}
var od = null, pd = null, qd = null;
function rd() {
  if (qd)
    return qd;
  var a2, b2 = pd, c2 = b2.length, d2, e2 = "value" in od ? od.value : od.textContent, f2 = e2.length;
  for (a2 = 0; a2 < c2 && b2[a2] === e2[a2]; a2++)
    ;
  var g2 = c2 - a2;
  for (d2 = 1; d2 <= g2 && b2[c2 - d2] === e2[f2 - d2]; d2++)
    ;
  return qd = e2.slice(a2, 1 < d2 ? 1 - d2 : void 0);
}
function sd(a2) {
  var b2 = a2.keyCode;
  "charCode" in a2 ? (a2 = a2.charCode, a2 === 0 && b2 === 13 && (a2 = 13)) : a2 = b2;
  a2 === 10 && (a2 = 13);
  return 32 <= a2 || a2 === 13 ? a2 : 0;
}
function td() {
  return true;
}
function ud() {
  return false;
}
function vd(a2) {
  function b2(b3, d2, e2, f2, g2) {
    this._reactName = b3;
    this._targetInst = e2;
    this.type = d2;
    this.nativeEvent = f2;
    this.target = g2;
    this.currentTarget = null;
    for (var c2 in a2)
      a2.hasOwnProperty(c2) && (b3 = a2[c2], this[c2] = b3 ? b3(f2) : f2[c2]);
    this.isDefaultPrevented = (f2.defaultPrevented != null ? f2.defaultPrevented : f2.returnValue === false) ? td : ud;
    this.isPropagationStopped = ud;
    return this;
  }
  p$1(b2.prototype, { preventDefault: function() {
    this.defaultPrevented = true;
    var a3 = this.nativeEvent;
    a3 && (a3.preventDefault ? a3.preventDefault() : typeof a3.returnValue !== "unknown" && (a3.returnValue = false), this.isDefaultPrevented = td);
  }, stopPropagation: function() {
    var a3 = this.nativeEvent;
    a3 && (a3.stopPropagation ? a3.stopPropagation() : typeof a3.cancelBubble !== "unknown" && (a3.cancelBubble = true), this.isPropagationStopped = td);
  }, persist: function() {
  }, isPersistent: td });
  return b2;
}
var wd = { eventPhase: 0, bubbles: 0, cancelable: 0, timeStamp: function(a2) {
  return a2.timeStamp || Date.now();
}, defaultPrevented: 0, isTrusted: 0 }, xd = vd(wd), yd = p$1({}, wd, { view: 0, detail: 0 }), zd = vd(yd), Ad, Bd, Cd, Ed = p$1({}, yd, { screenX: 0, screenY: 0, clientX: 0, clientY: 0, pageX: 0, pageY: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, getModifierState: Dd, button: 0, buttons: 0, relatedTarget: function(a2) {
  return a2.relatedTarget === void 0 ? a2.fromElement === a2.srcElement ? a2.toElement : a2.fromElement : a2.relatedTarget;
}, movementX: function(a2) {
  if ("movementX" in a2)
    return a2.movementX;
  a2 !== Cd && (Cd && a2.type === "mousemove" ? (Ad = a2.screenX - Cd.screenX, Bd = a2.screenY - Cd.screenY) : Bd = Ad = 0, Cd = a2);
  return Ad;
}, movementY: function(a2) {
  return "movementY" in a2 ? a2.movementY : Bd;
} }), Fd = vd(Ed), Gd = p$1({}, Ed, { dataTransfer: 0 }), Hd = vd(Gd), Id = p$1({}, yd, { relatedTarget: 0 }), Jd = vd(Id), Kd = p$1({}, wd, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }), Ld = vd(Kd), Md = p$1({}, wd, { clipboardData: function(a2) {
  return "clipboardData" in a2 ? a2.clipboardData : window.clipboardData;
} }), Nd = vd(Md), Od = p$1({}, wd, { data: 0 }), Pd = vd(Od), Qd = {
  Esc: "Escape",
  Spacebar: " ",
  Left: "ArrowLeft",
  Up: "ArrowUp",
  Right: "ArrowRight",
  Down: "ArrowDown",
  Del: "Delete",
  Win: "OS",
  Menu: "ContextMenu",
  Apps: "ContextMenu",
  Scroll: "ScrollLock",
  MozPrintableKey: "Unidentified"
}, Rd = {
  8: "Backspace",
  9: "Tab",
  12: "Clear",
  13: "Enter",
  16: "Shift",
  17: "Control",
  18: "Alt",
  19: "Pause",
  20: "CapsLock",
  27: "Escape",
  32: " ",
  33: "PageUp",
  34: "PageDown",
  35: "End",
  36: "Home",
  37: "ArrowLeft",
  38: "ArrowUp",
  39: "ArrowRight",
  40: "ArrowDown",
  45: "Insert",
  46: "Delete",
  112: "F1",
  113: "F2",
  114: "F3",
  115: "F4",
  116: "F5",
  117: "F6",
  118: "F7",
  119: "F8",
  120: "F9",
  121: "F10",
  122: "F11",
  123: "F12",
  144: "NumLock",
  145: "ScrollLock",
  224: "Meta"
}, Sd = { Alt: "altKey", Control: "ctrlKey", Meta: "metaKey", Shift: "shiftKey" };
function Td(a2) {
  var b2 = this.nativeEvent;
  return b2.getModifierState ? b2.getModifierState(a2) : (a2 = Sd[a2]) ? !!b2[a2] : false;
}
function Dd() {
  return Td;
}
var Ud = p$1({}, yd, { key: function(a2) {
  if (a2.key) {
    var b2 = Qd[a2.key] || a2.key;
    if (b2 !== "Unidentified")
      return b2;
  }
  return a2.type === "keypress" ? (a2 = sd(a2), a2 === 13 ? "Enter" : String.fromCharCode(a2)) : a2.type === "keydown" || a2.type === "keyup" ? Rd[a2.keyCode] || "Unidentified" : "";
}, code: 0, location: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, repeat: 0, locale: 0, getModifierState: Dd, charCode: function(a2) {
  return a2.type === "keypress" ? sd(a2) : 0;
}, keyCode: function(a2) {
  return a2.type === "keydown" || a2.type === "keyup" ? a2.keyCode : 0;
}, which: function(a2) {
  return a2.type === "keypress" ? sd(a2) : a2.type === "keydown" || a2.type === "keyup" ? a2.keyCode : 0;
} }), Vd = vd(Ud), Wd = p$1({}, Ed, { pointerId: 0, width: 0, height: 0, pressure: 0, tangentialPressure: 0, tiltX: 0, tiltY: 0, twist: 0, pointerType: 0, isPrimary: 0 }), Xd = vd(Wd), Yd = p$1({}, yd, { touches: 0, targetTouches: 0, changedTouches: 0, altKey: 0, metaKey: 0, ctrlKey: 0, shiftKey: 0, getModifierState: Dd }), Zd = vd(Yd), $d = p$1({}, wd, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }), ae = vd($d), be = p$1({}, Ed, {
  deltaX: function(a2) {
    return "deltaX" in a2 ? a2.deltaX : "wheelDeltaX" in a2 ? -a2.wheelDeltaX : 0;
  },
  deltaY: function(a2) {
    return "deltaY" in a2 ? a2.deltaY : "wheelDeltaY" in a2 ? -a2.wheelDeltaY : "wheelDelta" in a2 ? -a2.wheelDelta : 0;
  },
  deltaZ: 0,
  deltaMode: 0
}), ce = vd(be), de = [9, 13, 27, 32], ee = ia && "CompositionEvent" in window, fe = null;
ia && "documentMode" in document && (fe = document.documentMode);
var ge = ia && "TextEvent" in window && !fe, he = ia && (!ee || fe && 8 < fe && 11 >= fe), ie = String.fromCharCode(32), je = false;
function ke(a2, b2) {
  switch (a2) {
    case "keyup":
      return de.indexOf(b2.keyCode) !== -1;
    case "keydown":
      return b2.keyCode !== 229;
    case "keypress":
    case "mousedown":
    case "focusout":
      return true;
    default:
      return false;
  }
}
function le(a2) {
  a2 = a2.detail;
  return typeof a2 === "object" && "data" in a2 ? a2.data : null;
}
var me = false;
function ne(a2, b2) {
  switch (a2) {
    case "compositionend":
      return le(b2);
    case "keypress":
      if (b2.which !== 32)
        return null;
      je = true;
      return ie;
    case "textInput":
      return a2 = b2.data, a2 === ie && je ? null : a2;
    default:
      return null;
  }
}
function oe(a2, b2) {
  if (me)
    return a2 === "compositionend" || !ee && ke(a2, b2) ? (a2 = rd(), qd = pd = od = null, me = false, a2) : null;
  switch (a2) {
    case "paste":
      return null;
    case "keypress":
      if (!(b2.ctrlKey || b2.altKey || b2.metaKey) || b2.ctrlKey && b2.altKey) {
        if (b2.char && 1 < b2.char.length)
          return b2.char;
        if (b2.which)
          return String.fromCharCode(b2.which);
      }
      return null;
    case "compositionend":
      return he && b2.locale !== "ko" ? null : b2.data;
    default:
      return null;
  }
}
var pe = { color: true, date: true, datetime: true, "datetime-local": true, email: true, month: true, number: true, password: true, range: true, search: true, tel: true, text: true, time: true, url: true, week: true };
function qe(a2) {
  var b2 = a2 && a2.nodeName && a2.nodeName.toLowerCase();
  return b2 === "input" ? !!pe[a2.type] : b2 === "textarea" ? true : false;
}
function re(a2, b2, c2, d2) {
  Eb(d2);
  b2 = se(b2, "onChange");
  0 < b2.length && (c2 = new xd("onChange", "change", null, c2, d2), a2.push({ event: c2, listeners: b2 }));
}
var te = null, ue = null;
function ve(a2) {
  we(a2, 0);
}
function xe(a2) {
  var b2 = ye(a2);
  if (Ya(b2))
    return a2;
}
function ze(a2, b2) {
  if (a2 === "change")
    return b2;
}
var Ae = false;
if (ia) {
  var Be;
  if (ia) {
    var Ce = "oninput" in document;
    if (!Ce) {
      var De = document.createElement("div");
      De.setAttribute("oninput", "return;");
      Ce = typeof De.oninput === "function";
    }
    Be = Ce;
  } else
    Be = false;
  Ae = Be && (!document.documentMode || 9 < document.documentMode);
}
function Ee() {
  te && (te.detachEvent("onpropertychange", Fe), ue = te = null);
}
function Fe(a2) {
  if (a2.propertyName === "value" && xe(ue)) {
    var b2 = [];
    re(b2, ue, a2, xb(a2));
    a2 = ve;
    if (Kb)
      a2(b2);
    else {
      Kb = true;
      try {
        Gb(a2, b2);
      } finally {
        Kb = false, Mb();
      }
    }
  }
}
function Ge(a2, b2, c2) {
  a2 === "focusin" ? (Ee(), te = b2, ue = c2, te.attachEvent("onpropertychange", Fe)) : a2 === "focusout" && Ee();
}
function He(a2) {
  if (a2 === "selectionchange" || a2 === "keyup" || a2 === "keydown")
    return xe(ue);
}
function Ie(a2, b2) {
  if (a2 === "click")
    return xe(b2);
}
function Je(a2, b2) {
  if (a2 === "input" || a2 === "change")
    return xe(b2);
}
function Ke(a2, b2) {
  return a2 === b2 && (a2 !== 0 || 1 / a2 === 1 / b2) || a2 !== a2 && b2 !== b2;
}
var Le = typeof Object.is === "function" ? Object.is : Ke;
function Me(a2, b2) {
  if (Le(a2, b2))
    return true;
  if (typeof a2 !== "object" || a2 === null || typeof b2 !== "object" || b2 === null)
    return false;
  var c2 = Object.keys(a2), d2 = Object.keys(b2);
  if (c2.length !== d2.length)
    return false;
  for (d2 = 0; d2 < c2.length; d2++)
    if (!ja.call(b2, c2[d2]) || !Le(a2[c2[d2]], b2[c2[d2]]))
      return false;
  return true;
}
function Ne(a2) {
  for (; a2 && a2.firstChild; )
    a2 = a2.firstChild;
  return a2;
}
function Oe(a2, b2) {
  var c2 = Ne(a2);
  a2 = 0;
  for (var d2; c2; ) {
    if (c2.nodeType === 3) {
      d2 = a2 + c2.textContent.length;
      if (a2 <= b2 && d2 >= b2)
        return { node: c2, offset: b2 - a2 };
      a2 = d2;
    }
    a: {
      for (; c2; ) {
        if (c2.nextSibling) {
          c2 = c2.nextSibling;
          break a;
        }
        c2 = c2.parentNode;
      }
      c2 = void 0;
    }
    c2 = Ne(c2);
  }
}
function Pe(a2, b2) {
  return a2 && b2 ? a2 === b2 ? true : a2 && a2.nodeType === 3 ? false : b2 && b2.nodeType === 3 ? Pe(a2, b2.parentNode) : "contains" in a2 ? a2.contains(b2) : a2.compareDocumentPosition ? !!(a2.compareDocumentPosition(b2) & 16) : false : false;
}
function Qe() {
  for (var a2 = window, b2 = Za(); b2 instanceof a2.HTMLIFrameElement; ) {
    try {
      var c2 = typeof b2.contentWindow.location.href === "string";
    } catch (d2) {
      c2 = false;
    }
    if (c2)
      a2 = b2.contentWindow;
    else
      break;
    b2 = Za(a2.document);
  }
  return b2;
}
function Re(a2) {
  var b2 = a2 && a2.nodeName && a2.nodeName.toLowerCase();
  return b2 && (b2 === "input" && (a2.type === "text" || a2.type === "search" || a2.type === "tel" || a2.type === "url" || a2.type === "password") || b2 === "textarea" || a2.contentEditable === "true");
}
function Se(a2) {
  var b2 = Qe(), c2 = a2.focusedElem, d2 = a2.selectionRange;
  if (b2 !== c2 && c2 && c2.ownerDocument && Pe(c2.ownerDocument.documentElement, c2)) {
    if (d2 !== null && Re(c2)) {
      if (b2 = d2.start, a2 = d2.end, a2 === void 0 && (a2 = b2), "selectionStart" in c2)
        c2.selectionStart = b2, c2.selectionEnd = Math.min(a2, c2.value.length);
      else if (a2 = (b2 = c2.ownerDocument || document) && b2.defaultView || window, a2.getSelection) {
        a2 = a2.getSelection();
        var e2 = c2.textContent.length, f2 = Math.min(d2.start, e2);
        d2 = d2.end === void 0 ? f2 : Math.min(d2.end, e2);
        !a2.extend && f2 > d2 && (e2 = d2, d2 = f2, f2 = e2);
        e2 = Oe(c2, f2);
        var g2 = Oe(c2, d2);
        e2 && g2 && (a2.rangeCount !== 1 || a2.anchorNode !== e2.node || a2.anchorOffset !== e2.offset || a2.focusNode !== g2.node || a2.focusOffset !== g2.offset) && (b2 = b2.createRange(), b2.setStart(e2.node, e2.offset), a2.removeAllRanges(), f2 > d2 ? (a2.addRange(b2), a2.extend(g2.node, g2.offset)) : (b2.setEnd(g2.node, g2.offset), a2.addRange(b2)));
      }
    }
    b2 = [];
    for (a2 = c2; a2 = a2.parentNode; )
      a2.nodeType === 1 && b2.push({ element: a2, left: a2.scrollLeft, top: a2.scrollTop });
    typeof c2.focus === "function" && c2.focus();
    for (c2 = 0; c2 < b2.length; c2++)
      a2 = b2[c2], a2.element.scrollLeft = a2.left, a2.element.scrollTop = a2.top;
  }
}
var Te = ia && "documentMode" in document && 11 >= document.documentMode, Ue = null, Ve = null, We = null, Xe = false;
function Ye(a2, b2, c2) {
  var d2 = c2.window === c2 ? c2.document : c2.nodeType === 9 ? c2 : c2.ownerDocument;
  Xe || Ue == null || Ue !== Za(d2) || (d2 = Ue, "selectionStart" in d2 && Re(d2) ? d2 = { start: d2.selectionStart, end: d2.selectionEnd } : (d2 = (d2.ownerDocument && d2.ownerDocument.defaultView || window).getSelection(), d2 = { anchorNode: d2.anchorNode, anchorOffset: d2.anchorOffset, focusNode: d2.focusNode, focusOffset: d2.focusOffset }), We && Me(We, d2) || (We = d2, d2 = se(Ve, "onSelect"), 0 < d2.length && (b2 = new xd("onSelect", "select", null, b2, c2), a2.push({ event: b2, listeners: d2 }), b2.target = Ue)));
}
function Ze(a2, b2) {
  var c2 = {};
  c2[a2.toLowerCase()] = b2.toLowerCase();
  c2["Webkit" + a2] = "webkit" + b2;
  c2["Moz" + a2] = "moz" + b2;
  return c2;
}
var $e = { animationend: Ze("Animation", "AnimationEnd"), animationiteration: Ze("Animation", "AnimationIteration"), animationstart: Ze("Animation", "AnimationStart"), transitionend: Ze("Transition", "TransitionEnd") }, af = {}, bf = {};
ia && (bf = document.createElement("div").style, "AnimationEvent" in window || (delete $e.animationend.animation, delete $e.animationiteration.animation, delete $e.animationstart.animation), "TransitionEvent" in window || delete $e.transitionend.transition);
function cf(a2) {
  if (af[a2])
    return af[a2];
  if (!$e[a2])
    return a2;
  var b2 = $e[a2], c2;
  for (c2 in b2)
    if (b2.hasOwnProperty(c2) && c2 in bf)
      return af[a2] = b2[c2];
  return a2;
}
var df = cf("animationend"), ef = cf("animationiteration"), ff = cf("animationstart"), gf = cf("transitionend"), hf = new Map(), jf = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
function kf(a2, b2) {
  hf.set(a2, b2);
  ea(b2, [a2]);
}
for (var lf = 0; lf < jf.length; lf++) {
  var mf = jf[lf], nf = mf.toLowerCase(), of = mf[0].toUpperCase() + mf.slice(1);
  kf(nf, "on" + of);
}
kf(df, "onAnimationEnd");
kf(ef, "onAnimationIteration");
kf(ff, "onAnimationStart");
kf("dblclick", "onDoubleClick");
kf("focusin", "onFocus");
kf("focusout", "onBlur");
kf(gf, "onTransitionEnd");
fa("onMouseEnter", ["mouseout", "mouseover"]);
fa("onMouseLeave", ["mouseout", "mouseover"]);
fa("onPointerEnter", ["pointerout", "pointerover"]);
fa("onPointerLeave", ["pointerout", "pointerover"]);
ea("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));
ea("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));
ea("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
ea("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));
ea("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));
ea("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
var pf = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), qf = new Set("cancel close invalid load scroll toggle".split(" ").concat(pf));
function rf(a2, b2, c2) {
  var d2 = a2.type || "unknown-event";
  a2.currentTarget = c2;
  Yb(d2, b2, void 0, a2);
  a2.currentTarget = null;
}
function we(a2, b2) {
  b2 = (b2 & 4) !== 0;
  for (var c2 = 0; c2 < a2.length; c2++) {
    var d2 = a2[c2], e2 = d2.event;
    d2 = d2.listeners;
    a: {
      var f2 = void 0;
      if (b2)
        for (var g2 = d2.length - 1; 0 <= g2; g2--) {
          var h2 = d2[g2], k2 = h2.instance, l2 = h2.currentTarget;
          h2 = h2.listener;
          if (k2 !== f2 && e2.isPropagationStopped())
            break a;
          rf(e2, h2, l2);
          f2 = k2;
        }
      else
        for (g2 = 0; g2 < d2.length; g2++) {
          h2 = d2[g2];
          k2 = h2.instance;
          l2 = h2.currentTarget;
          h2 = h2.listener;
          if (k2 !== f2 && e2.isPropagationStopped())
            break a;
          rf(e2, h2, l2);
          f2 = k2;
        }
    }
  }
  if (Ub)
    throw a2 = Vb, Ub = false, Vb = null, a2;
}
function F(a2, b2) {
  var c2 = b2[sf];
  c2 === void 0 && (c2 = b2[sf] = new Set());
  var d2 = a2 + "__bubble";
  c2.has(d2) || (tf(b2, a2, 2, false), c2.add(d2));
}
function uf(a2, b2, c2) {
  var d2 = 0;
  b2 && (d2 |= 4);
  tf(c2, a2, d2, b2);
}
var vf = "_reactListening" + Math.random().toString(36).slice(2);
function wf(a2) {
  if (!a2[vf]) {
    a2[vf] = true;
    ca.forEach(function(b3) {
      b3 !== "selectionchange" && (qf.has(b3) || uf(b3, false, a2), uf(b3, true, a2));
    });
    var b2 = a2.nodeType === 9 ? a2 : a2.ownerDocument;
    b2 === null || b2[vf] || (b2[vf] = true, uf("selectionchange", false, b2));
  }
}
function tf(a2, b2, c2, d2) {
  switch (nd(b2)) {
    case 1:
      var e2 = jd;
      break;
    case 4:
      e2 = ld;
      break;
    default:
      e2 = kd;
  }
  c2 = e2.bind(null, b2, c2, a2);
  e2 = void 0;
  !Pb || b2 !== "touchstart" && b2 !== "touchmove" && b2 !== "wheel" || (e2 = true);
  d2 ? e2 !== void 0 ? a2.addEventListener(b2, c2, { capture: true, passive: e2 }) : a2.addEventListener(b2, c2, true) : e2 !== void 0 ? a2.addEventListener(b2, c2, { passive: e2 }) : a2.addEventListener(b2, c2, false);
}
function md(a2, b2, c2, d2, e2) {
  var f2 = d2;
  if ((b2 & 1) === 0 && (b2 & 2) === 0 && d2 !== null)
    a:
      for (; ; ) {
        if (d2 === null)
          return;
        var g2 = d2.tag;
        if (g2 === 3 || g2 === 4) {
          var h2 = d2.stateNode.containerInfo;
          if (h2 === e2 || h2.nodeType === 8 && h2.parentNode === e2)
            break;
          if (g2 === 4)
            for (g2 = d2.return; g2 !== null; ) {
              var k2 = g2.tag;
              if (k2 === 3 || k2 === 4) {
                if (k2 = g2.stateNode.containerInfo, k2 === e2 || k2.nodeType === 8 && k2.parentNode === e2)
                  return;
              }
              g2 = g2.return;
            }
          for (; h2 !== null; ) {
            g2 = bd(h2);
            if (g2 === null)
              return;
            k2 = g2.tag;
            if (k2 === 5 || k2 === 6) {
              d2 = f2 = g2;
              continue a;
            }
            h2 = h2.parentNode;
          }
        }
        d2 = d2.return;
      }
  Nb(function() {
    var d3 = f2, e3 = xb(c2), g3 = [];
    a: {
      var h3 = hf.get(a2);
      if (h3 !== void 0) {
        var k3 = xd, n2 = a2;
        switch (a2) {
          case "keypress":
            if (sd(c2) === 0)
              break a;
          case "keydown":
          case "keyup":
            k3 = Vd;
            break;
          case "focusin":
            n2 = "focus";
            k3 = Jd;
            break;
          case "focusout":
            n2 = "blur";
            k3 = Jd;
            break;
          case "beforeblur":
          case "afterblur":
            k3 = Jd;
            break;
          case "click":
            if (c2.button === 2)
              break a;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            k3 = Fd;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            k3 = Hd;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            k3 = Zd;
            break;
          case df:
          case ef:
          case ff:
            k3 = Ld;
            break;
          case gf:
            k3 = ae;
            break;
          case "scroll":
            k3 = zd;
            break;
          case "wheel":
            k3 = ce;
            break;
          case "copy":
          case "cut":
          case "paste":
            k3 = Nd;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            k3 = Xd;
        }
        var x2 = (b2 & 4) !== 0, I2 = !x2 && a2 === "scroll", z2 = x2 ? h3 !== null ? h3 + "Capture" : null : h3;
        x2 = [];
        for (var r2 = d3, u2; r2 !== null; ) {
          u2 = r2;
          var B2 = u2.stateNode;
          u2.tag === 5 && B2 !== null && (u2 = B2, z2 !== null && (B2 = Ob(r2, z2), B2 != null && x2.push(xf(r2, B2, u2))));
          if (I2)
            break;
          r2 = r2.return;
        }
        0 < x2.length && (h3 = new k3(h3, n2, null, c2, e3), g3.push({ event: h3, listeners: x2 }));
      }
    }
    if ((b2 & 7) === 0) {
      a: {
        h3 = a2 === "mouseover" || a2 === "pointerover";
        k3 = a2 === "mouseout" || a2 === "pointerout";
        if (h3 && (b2 & 16) === 0 && (n2 = c2.relatedTarget || c2.fromElement) && (bd(n2) || n2[yf]))
          break a;
        if (k3 || h3) {
          h3 = e3.window === e3 ? e3 : (h3 = e3.ownerDocument) ? h3.defaultView || h3.parentWindow : window;
          if (k3) {
            if (n2 = c2.relatedTarget || c2.toElement, k3 = d3, n2 = n2 ? bd(n2) : null, n2 !== null && (I2 = Zb(n2), n2 !== I2 || n2.tag !== 5 && n2.tag !== 6))
              n2 = null;
          } else
            k3 = null, n2 = d3;
          if (k3 !== n2) {
            x2 = Fd;
            B2 = "onMouseLeave";
            z2 = "onMouseEnter";
            r2 = "mouse";
            if (a2 === "pointerout" || a2 === "pointerover")
              x2 = Xd, B2 = "onPointerLeave", z2 = "onPointerEnter", r2 = "pointer";
            I2 = k3 == null ? h3 : ye(k3);
            u2 = n2 == null ? h3 : ye(n2);
            h3 = new x2(B2, r2 + "leave", k3, c2, e3);
            h3.target = I2;
            h3.relatedTarget = u2;
            B2 = null;
            bd(e3) === d3 && (x2 = new x2(z2, r2 + "enter", n2, c2, e3), x2.target = u2, x2.relatedTarget = I2, B2 = x2);
            I2 = B2;
            if (k3 && n2)
              b: {
                x2 = k3;
                z2 = n2;
                r2 = 0;
                for (u2 = x2; u2; u2 = zf(u2))
                  r2++;
                u2 = 0;
                for (B2 = z2; B2; B2 = zf(B2))
                  u2++;
                for (; 0 < r2 - u2; )
                  x2 = zf(x2), r2--;
                for (; 0 < u2 - r2; )
                  z2 = zf(z2), u2--;
                for (; r2--; ) {
                  if (x2 === z2 || z2 !== null && x2 === z2.alternate)
                    break b;
                  x2 = zf(x2);
                  z2 = zf(z2);
                }
                x2 = null;
              }
            else
              x2 = null;
            k3 !== null && Af(g3, h3, k3, x2, false);
            n2 !== null && I2 !== null && Af(g3, I2, n2, x2, true);
          }
        }
      }
      a: {
        h3 = d3 ? ye(d3) : window;
        k3 = h3.nodeName && h3.nodeName.toLowerCase();
        if (k3 === "select" || k3 === "input" && h3.type === "file")
          var S2 = ze;
        else if (qe(h3))
          if (Ae)
            S2 = Je;
          else {
            S2 = He;
            var W2 = Ge;
          }
        else
          (k3 = h3.nodeName) && k3.toLowerCase() === "input" && (h3.type === "checkbox" || h3.type === "radio") && (S2 = Ie);
        if (S2 && (S2 = S2(a2, d3))) {
          re(g3, S2, c2, e3);
          break a;
        }
        W2 && W2(a2, h3, d3);
        a2 === "focusout" && (W2 = h3._wrapperState) && W2.controlled && h3.type === "number" && db(h3, "number", h3.value);
      }
      W2 = d3 ? ye(d3) : window;
      switch (a2) {
        case "focusin":
          if (qe(W2) || W2.contentEditable === "true")
            Ue = W2, Ve = d3, We = null;
          break;
        case "focusout":
          We = Ve = Ue = null;
          break;
        case "mousedown":
          Xe = true;
          break;
        case "contextmenu":
        case "mouseup":
        case "dragend":
          Xe = false;
          Ye(g3, c2, e3);
          break;
        case "selectionchange":
          if (Te)
            break;
        case "keydown":
        case "keyup":
          Ye(g3, c2, e3);
      }
      var ha2;
      if (ee)
        b: {
          switch (a2) {
            case "compositionstart":
              var L2 = "onCompositionStart";
              break b;
            case "compositionend":
              L2 = "onCompositionEnd";
              break b;
            case "compositionupdate":
              L2 = "onCompositionUpdate";
              break b;
          }
          L2 = void 0;
        }
      else
        me ? ke(a2, c2) && (L2 = "onCompositionEnd") : a2 === "keydown" && c2.keyCode === 229 && (L2 = "onCompositionStart");
      L2 && (he && c2.locale !== "ko" && (me || L2 !== "onCompositionStart" ? L2 === "onCompositionEnd" && me && (ha2 = rd()) : (od = e3, pd = "value" in od ? od.value : od.textContent, me = true)), W2 = se(d3, L2), 0 < W2.length && (L2 = new Pd(L2, a2, null, c2, e3), g3.push({ event: L2, listeners: W2 }), ha2 ? L2.data = ha2 : (ha2 = le(c2), ha2 !== null && (L2.data = ha2))));
      if (ha2 = ge ? ne(a2, c2) : oe(a2, c2))
        d3 = se(d3, "onBeforeInput"), 0 < d3.length && (e3 = new Pd("onBeforeInput", "beforeinput", null, c2, e3), g3.push({ event: e3, listeners: d3 }), e3.data = ha2);
    }
    we(g3, b2);
  });
}
function xf(a2, b2, c2) {
  return { instance: a2, listener: b2, currentTarget: c2 };
}
function se(a2, b2) {
  for (var c2 = b2 + "Capture", d2 = []; a2 !== null; ) {
    var e2 = a2, f2 = e2.stateNode;
    e2.tag === 5 && f2 !== null && (e2 = f2, f2 = Ob(a2, c2), f2 != null && d2.unshift(xf(a2, f2, e2)), f2 = Ob(a2, b2), f2 != null && d2.push(xf(a2, f2, e2)));
    a2 = a2.return;
  }
  return d2;
}
function zf(a2) {
  if (a2 === null)
    return null;
  do
    a2 = a2.return;
  while (a2 && a2.tag !== 5);
  return a2 ? a2 : null;
}
function Af(a2, b2, c2, d2, e2) {
  for (var f2 = b2._reactName, g2 = []; c2 !== null && c2 !== d2; ) {
    var h2 = c2, k2 = h2.alternate, l2 = h2.stateNode;
    if (k2 !== null && k2 === d2)
      break;
    h2.tag === 5 && l2 !== null && (h2 = l2, e2 ? (k2 = Ob(c2, f2), k2 != null && g2.unshift(xf(c2, k2, h2))) : e2 || (k2 = Ob(c2, f2), k2 != null && g2.push(xf(c2, k2, h2))));
    c2 = c2.return;
  }
  g2.length !== 0 && a2.push({ event: b2, listeners: g2 });
}
function Bf() {
}
var Cf = null, Df = null;
function Ef(a2, b2) {
  switch (a2) {
    case "button":
    case "input":
    case "select":
    case "textarea":
      return !!b2.autoFocus;
  }
  return false;
}
function Ff(a2, b2) {
  return a2 === "textarea" || a2 === "noscript" || typeof b2.children === "string" || typeof b2.children === "number" || typeof b2.dangerouslySetInnerHTML === "object" && b2.dangerouslySetInnerHTML !== null && b2.dangerouslySetInnerHTML.__html != null;
}
var Gf = typeof setTimeout === "function" ? setTimeout : void 0, Hf = typeof clearTimeout === "function" ? clearTimeout : void 0, Jf = typeof queueMicrotask === "function" ? queueMicrotask : typeof Promise !== "undefined" ? function(a2) {
  return Promise.resolve(null).then(a2).catch(If);
} : Gf;
function If(a2) {
  setTimeout(function() {
    throw a2;
  });
}
function Kf(a2, b2) {
  var c2 = b2, d2 = 0;
  do {
    var e2 = c2.nextSibling;
    a2.removeChild(c2);
    if (e2 && e2.nodeType === 8)
      if (c2 = e2.data, c2 === "/$") {
        if (d2 === 0) {
          a2.removeChild(e2);
          gd(b2);
          return;
        }
        d2--;
      } else
        c2 !== "$" && c2 !== "$?" && c2 !== "$!" || d2++;
    c2 = e2;
  } while (c2);
  gd(b2);
}
function Lf(a2) {
  a2.nodeType === 1 ? a2.textContent = "" : a2.nodeType === 9 && (a2 = a2.body, a2 != null && (a2.textContent = ""));
}
function Mf(a2) {
  for (; a2 != null; a2 = a2.nextSibling) {
    var b2 = a2.nodeType;
    if (b2 === 1 || b2 === 3)
      break;
    if (b2 === 8 && (b2 = a2.data, b2 === "$" || b2 === "$!" || b2 === "$?"))
      break;
  }
  return a2;
}
function Nf(a2) {
  a2 = a2.previousSibling;
  for (var b2 = 0; a2; ) {
    if (a2.nodeType === 8) {
      var c2 = a2.data;
      if (c2 === "$" || c2 === "$!" || c2 === "$?") {
        if (b2 === 0)
          return a2;
        b2--;
      } else
        c2 === "/$" && b2++;
    }
    a2 = a2.previousSibling;
  }
  return null;
}
var Of = 0;
function Pf(a2) {
  return { $$typeof: Ga, toString: a2, valueOf: a2 };
}
var Qf = Math.random().toString(36).slice(2), Rf = "__reactFiber$" + Qf, Sf = "__reactProps$" + Qf, yf = "__reactContainer$" + Qf, sf = "__reactEvents$" + Qf;
function bd(a2) {
  var b2 = a2[Rf];
  if (b2)
    return b2;
  for (var c2 = a2.parentNode; c2; ) {
    if (b2 = c2[yf] || c2[Rf]) {
      c2 = b2.alternate;
      if (b2.child !== null || c2 !== null && c2.child !== null)
        for (a2 = Nf(a2); a2 !== null; ) {
          if (c2 = a2[Rf])
            return c2;
          a2 = Nf(a2);
        }
      return b2;
    }
    a2 = c2;
    c2 = a2.parentNode;
  }
  return null;
}
function Cb(a2) {
  a2 = a2[Rf] || a2[yf];
  return !a2 || a2.tag !== 5 && a2.tag !== 6 && a2.tag !== 13 && a2.tag !== 3 ? null : a2;
}
function ye(a2) {
  if (a2.tag === 5 || a2.tag === 6)
    return a2.stateNode;
  throw Error(v(33));
}
function Db(a2) {
  return a2[Sf] || null;
}
var Tf = [], Uf = -1;
function Vf(a2) {
  return { current: a2 };
}
function G(a2) {
  0 > Uf || (a2.current = Tf[Uf], Tf[Uf] = null, Uf--);
}
function H(a2, b2) {
  Uf++;
  Tf[Uf] = a2.current;
  a2.current = b2;
}
var Wf = {}, J = Vf(Wf), K = Vf(false), Xf = Wf;
function Yf(a2, b2) {
  var c2 = a2.type.contextTypes;
  if (!c2)
    return Wf;
  var d2 = a2.stateNode;
  if (d2 && d2.__reactInternalMemoizedUnmaskedChildContext === b2)
    return d2.__reactInternalMemoizedMaskedChildContext;
  var e2 = {}, f2;
  for (f2 in c2)
    e2[f2] = b2[f2];
  d2 && (a2 = a2.stateNode, a2.__reactInternalMemoizedUnmaskedChildContext = b2, a2.__reactInternalMemoizedMaskedChildContext = e2);
  return e2;
}
function Zf(a2) {
  a2 = a2.childContextTypes;
  return a2 !== null && a2 !== void 0;
}
function $f() {
  G(K);
  G(J);
}
function ag(a2, b2, c2) {
  if (J.current !== Wf)
    throw Error(v(168));
  H(J, b2);
  H(K, c2);
}
function bg(a2, b2, c2) {
  var d2 = a2.stateNode;
  b2 = b2.childContextTypes;
  if (typeof d2.getChildContext !== "function")
    return c2;
  d2 = d2.getChildContext();
  for (var e2 in d2)
    if (!(e2 in b2))
      throw Error(v(108, Ta(a2) || "Unknown", e2));
  return p$1({}, c2, d2);
}
function cg(a2) {
  a2 = (a2 = a2.stateNode) && a2.__reactInternalMemoizedMergedChildContext || Wf;
  Xf = J.current;
  H(J, a2);
  H(K, K.current);
  return true;
}
function dg(a2, b2, c2) {
  var d2 = a2.stateNode;
  if (!d2)
    throw Error(v(169));
  c2 ? (a2 = bg(a2, b2, Xf), d2.__reactInternalMemoizedMergedChildContext = a2, G(K), G(J), H(J, a2)) : G(K);
  H(K, c2);
}
var eg = null, fg = false, gg = false;
function hg() {
  if (!gg && eg !== null) {
    gg = true;
    var a2 = 0, b2 = E;
    try {
      var c2 = eg;
      for (E = 1; a2 < c2.length; a2++) {
        var d2 = c2[a2];
        do
          d2 = d2(true);
        while (d2 !== null);
      }
      eg = null;
      fg = false;
    } catch (e2) {
      throw eg !== null && (eg = eg.slice(a2 + 1)), fc(kc, hg), e2;
    } finally {
      E = b2, gg = false;
    }
  }
  return null;
}
var ig = ta.ReactCurrentBatchConfig;
function jg(a2, b2) {
  if (a2 && a2.defaultProps) {
    b2 = p$1({}, b2);
    a2 = a2.defaultProps;
    for (var c2 in a2)
      b2[c2] === void 0 && (b2[c2] = a2[c2]);
    return b2;
  }
  return b2;
}
var kg = Vf(null), lg = null, mg = null, ng = null;
function og() {
  ng = mg = lg = null;
}
function pg(a2) {
  var b2 = kg.current;
  G(kg);
  a2._currentValue = b2;
}
function qg(a2, b2) {
  for (; a2 !== null; ) {
    var c2 = a2.alternate;
    if ((a2.childLanes & b2) === b2)
      if (c2 === null || (c2.childLanes & b2) === b2)
        break;
      else
        c2.childLanes |= b2;
    else
      a2.childLanes |= b2, c2 !== null && (c2.childLanes |= b2);
    a2 = a2.return;
  }
}
function rg(a2, b2) {
  lg = a2;
  ng = mg = null;
  a2 = a2.dependencies;
  a2 !== null && a2.firstContext !== null && ((a2.lanes & b2) !== 0 && (sg = true), a2.firstContext = null);
}
function tg(a2) {
  var b2 = a2._currentValue;
  if (ng !== a2)
    if (a2 = { context: a2, memoizedValue: b2, next: null }, mg === null) {
      if (lg === null)
        throw Error(v(308));
      mg = a2;
      lg.dependencies = { lanes: 0, firstContext: a2 };
    } else
      mg = mg.next = a2;
  return b2;
}
var ug = null, vg = false;
function wg(a2) {
  a2.updateQueue = { baseState: a2.memoizedState, firstBaseUpdate: null, lastBaseUpdate: null, shared: { pending: null, interleaved: null, lanes: 0 }, effects: null };
}
function xg(a2, b2) {
  a2 = a2.updateQueue;
  b2.updateQueue === a2 && (b2.updateQueue = { baseState: a2.baseState, firstBaseUpdate: a2.firstBaseUpdate, lastBaseUpdate: a2.lastBaseUpdate, shared: a2.shared, effects: a2.effects });
}
function yg(a2, b2) {
  return { eventTime: a2, lane: b2, tag: 0, payload: null, callback: null, next: null };
}
function zg(a2, b2) {
  var c2 = a2.updateQueue;
  c2 !== null && (c2 = c2.shared, M !== null && (a2.mode & 1) !== 0 && (N & 8) === 0 ? (a2 = c2.interleaved, a2 === null ? (b2.next = b2, ug === null ? ug = [c2] : ug.push(c2)) : (b2.next = a2.next, a2.next = b2), c2.interleaved = b2) : (a2 = c2.pending, a2 === null ? b2.next = b2 : (b2.next = a2.next, a2.next = b2), c2.pending = b2));
}
function Ag(a2, b2, c2) {
  b2 = b2.updateQueue;
  if (b2 !== null && (b2 = b2.shared, (c2 & 4194240) !== 0)) {
    var d2 = b2.lanes;
    d2 &= a2.pendingLanes;
    c2 |= d2;
    b2.lanes = c2;
    Cc(a2, c2);
  }
}
function Bg(a2, b2) {
  var c2 = a2.updateQueue, d2 = a2.alternate;
  if (d2 !== null && (d2 = d2.updateQueue, c2 === d2)) {
    var e2 = null, f2 = null;
    c2 = c2.firstBaseUpdate;
    if (c2 !== null) {
      do {
        var g2 = { eventTime: c2.eventTime, lane: c2.lane, tag: c2.tag, payload: c2.payload, callback: c2.callback, next: null };
        f2 === null ? e2 = f2 = g2 : f2 = f2.next = g2;
        c2 = c2.next;
      } while (c2 !== null);
      f2 === null ? e2 = f2 = b2 : f2 = f2.next = b2;
    } else
      e2 = f2 = b2;
    c2 = { baseState: d2.baseState, firstBaseUpdate: e2, lastBaseUpdate: f2, shared: d2.shared, effects: d2.effects };
    a2.updateQueue = c2;
    return;
  }
  a2 = c2.lastBaseUpdate;
  a2 === null ? c2.firstBaseUpdate = b2 : a2.next = b2;
  c2.lastBaseUpdate = b2;
}
function Cg(a2, b2, c2, d2) {
  var e2 = a2.updateQueue;
  vg = false;
  var f2 = e2.firstBaseUpdate, g2 = e2.lastBaseUpdate, h2 = e2.shared.pending;
  if (h2 !== null) {
    e2.shared.pending = null;
    var k2 = h2, l2 = k2.next;
    k2.next = null;
    g2 === null ? f2 = l2 : g2.next = l2;
    g2 = k2;
    var m2 = a2.alternate;
    m2 !== null && (m2 = m2.updateQueue, h2 = m2.lastBaseUpdate, h2 !== g2 && (h2 === null ? m2.firstBaseUpdate = l2 : h2.next = l2, m2.lastBaseUpdate = k2));
  }
  if (f2 !== null) {
    var w2 = e2.baseState;
    g2 = 0;
    m2 = l2 = k2 = null;
    h2 = f2;
    do {
      var t2 = h2.lane, q2 = h2.eventTime;
      if ((d2 & t2) === t2) {
        m2 !== null && (m2 = m2.next = {
          eventTime: q2,
          lane: 0,
          tag: h2.tag,
          payload: h2.payload,
          callback: h2.callback,
          next: null
        });
        a: {
          var n2 = a2, x2 = h2;
          t2 = b2;
          q2 = c2;
          switch (x2.tag) {
            case 1:
              n2 = x2.payload;
              if (typeof n2 === "function") {
                w2 = n2.call(q2, w2, t2);
                break a;
              }
              w2 = n2;
              break a;
            case 3:
              n2.flags = n2.flags & -16385 | 128;
            case 0:
              n2 = x2.payload;
              t2 = typeof n2 === "function" ? n2.call(q2, w2, t2) : n2;
              if (t2 === null || t2 === void 0)
                break a;
              w2 = p$1({}, w2, t2);
              break a;
            case 2:
              vg = true;
          }
        }
        h2.callback !== null && h2.lane !== 0 && (a2.flags |= 64, t2 = e2.effects, t2 === null ? e2.effects = [h2] : t2.push(h2));
      } else
        q2 = { eventTime: q2, lane: t2, tag: h2.tag, payload: h2.payload, callback: h2.callback, next: null }, m2 === null ? (l2 = m2 = q2, k2 = w2) : m2 = m2.next = q2, g2 |= t2;
      h2 = h2.next;
      if (h2 === null)
        if (h2 = e2.shared.pending, h2 === null)
          break;
        else
          t2 = h2, h2 = t2.next, t2.next = null, e2.lastBaseUpdate = t2, e2.shared.pending = null;
    } while (1);
    m2 === null && (k2 = w2);
    e2.baseState = k2;
    e2.firstBaseUpdate = l2;
    e2.lastBaseUpdate = m2;
    b2 = e2.shared.interleaved;
    if (b2 !== null) {
      e2 = b2;
      do
        g2 |= e2.lane, e2 = e2.next;
      while (e2 !== b2);
    } else
      f2 === null && (e2.shared.lanes = 0);
    Dg |= g2;
    a2.lanes = g2;
    a2.memoizedState = w2;
  }
}
function Eg(a2, b2, c2) {
  a2 = b2.effects;
  b2.effects = null;
  if (a2 !== null)
    for (b2 = 0; b2 < a2.length; b2++) {
      var d2 = a2[b2], e2 = d2.callback;
      if (e2 !== null) {
        d2.callback = null;
        d2 = c2;
        if (typeof e2 !== "function")
          throw Error(v(191, e2));
        e2.call(d2);
      }
    }
}
var Fg = new aa.Component().refs;
function Gg(a2, b2, c2, d2) {
  b2 = a2.memoizedState;
  c2 = c2(d2, b2);
  c2 = c2 === null || c2 === void 0 ? b2 : p$1({}, b2, c2);
  a2.memoizedState = c2;
  a2.lanes === 0 && (a2.updateQueue.baseState = c2);
}
var Kg = { isMounted: function(a2) {
  return (a2 = a2._reactInternals) ? Zb(a2) === a2 : false;
}, enqueueSetState: function(a2, b2, c2) {
  a2 = a2._reactInternals;
  var d2 = Hg(), e2 = Ig(a2), f2 = yg(d2, e2);
  f2.payload = b2;
  c2 !== void 0 && c2 !== null && (f2.callback = c2);
  zg(a2, f2);
  b2 = Jg(a2, e2, d2);
  b2 !== null && Ag(b2, a2, e2);
}, enqueueReplaceState: function(a2, b2, c2) {
  a2 = a2._reactInternals;
  var d2 = Hg(), e2 = Ig(a2), f2 = yg(d2, e2);
  f2.tag = 1;
  f2.payload = b2;
  c2 !== void 0 && c2 !== null && (f2.callback = c2);
  zg(a2, f2);
  b2 = Jg(a2, e2, d2);
  b2 !== null && Ag(b2, a2, e2);
}, enqueueForceUpdate: function(a2, b2) {
  a2 = a2._reactInternals;
  var c2 = Hg(), d2 = Ig(a2), e2 = yg(c2, d2);
  e2.tag = 2;
  b2 !== void 0 && b2 !== null && (e2.callback = b2);
  zg(a2, e2);
  b2 = Jg(a2, d2, c2);
  b2 !== null && Ag(b2, a2, d2);
} };
function Lg(a2, b2, c2, d2, e2, f2, g2) {
  a2 = a2.stateNode;
  return typeof a2.shouldComponentUpdate === "function" ? a2.shouldComponentUpdate(d2, f2, g2) : b2.prototype && b2.prototype.isPureReactComponent ? !Me(c2, d2) || !Me(e2, f2) : true;
}
function Mg(a2, b2, c2) {
  var d2 = false, e2 = Wf;
  var f2 = b2.contextType;
  typeof f2 === "object" && f2 !== null ? f2 = tg(f2) : (e2 = Zf(b2) ? Xf : J.current, d2 = b2.contextTypes, f2 = (d2 = d2 !== null && d2 !== void 0) ? Yf(a2, e2) : Wf);
  b2 = new b2(c2, f2);
  a2.memoizedState = b2.state !== null && b2.state !== void 0 ? b2.state : null;
  b2.updater = Kg;
  a2.stateNode = b2;
  b2._reactInternals = a2;
  d2 && (a2 = a2.stateNode, a2.__reactInternalMemoizedUnmaskedChildContext = e2, a2.__reactInternalMemoizedMaskedChildContext = f2);
  return b2;
}
function Ng(a2, b2, c2, d2) {
  a2 = b2.state;
  typeof b2.componentWillReceiveProps === "function" && b2.componentWillReceiveProps(c2, d2);
  typeof b2.UNSAFE_componentWillReceiveProps === "function" && b2.UNSAFE_componentWillReceiveProps(c2, d2);
  b2.state !== a2 && Kg.enqueueReplaceState(b2, b2.state, null);
}
function Og(a2, b2, c2, d2) {
  var e2 = a2.stateNode;
  e2.props = c2;
  e2.state = a2.memoizedState;
  e2.refs = Fg;
  wg(a2);
  var f2 = b2.contextType;
  typeof f2 === "object" && f2 !== null ? e2.context = tg(f2) : (f2 = Zf(b2) ? Xf : J.current, e2.context = Yf(a2, f2));
  e2.state = a2.memoizedState;
  f2 = b2.getDerivedStateFromProps;
  typeof f2 === "function" && (Gg(a2, b2, f2, c2), e2.state = a2.memoizedState);
  typeof b2.getDerivedStateFromProps === "function" || typeof e2.getSnapshotBeforeUpdate === "function" || typeof e2.UNSAFE_componentWillMount !== "function" && typeof e2.componentWillMount !== "function" || (b2 = e2.state, typeof e2.componentWillMount === "function" && e2.componentWillMount(), typeof e2.UNSAFE_componentWillMount === "function" && e2.UNSAFE_componentWillMount(), b2 !== e2.state && Kg.enqueueReplaceState(e2, e2.state, null), Cg(a2, c2, e2, d2), e2.state = a2.memoizedState);
  typeof e2.componentDidMount === "function" && (a2.flags |= 524292);
}
function Pg(a2, b2, c2) {
  a2 = c2.ref;
  if (a2 !== null && typeof a2 !== "function" && typeof a2 !== "object") {
    if (c2._owner) {
      c2 = c2._owner;
      if (c2) {
        if (c2.tag !== 1)
          throw Error(v(309));
        var d2 = c2.stateNode;
      }
      if (!d2)
        throw Error(v(147, a2));
      var e2 = "" + a2;
      if (b2 !== null && b2.ref !== null && typeof b2.ref === "function" && b2.ref._stringRef === e2)
        return b2.ref;
      b2 = function(a3) {
        var b3 = d2.refs;
        b3 === Fg && (b3 = d2.refs = {});
        a3 === null ? delete b3[e2] : b3[e2] = a3;
      };
      b2._stringRef = e2;
      return b2;
    }
    if (typeof a2 !== "string")
      throw Error(v(284));
    if (!c2._owner)
      throw Error(v(290, a2));
  }
  return a2;
}
function Qg(a2, b2) {
  a2 = Object.prototype.toString.call(b2);
  throw Error(v(31, a2 === "[object Object]" ? "object with keys {" + Object.keys(b2).join(", ") + "}" : a2));
}
function Rg(a2) {
  var b2 = a2._init;
  return b2(a2._payload);
}
function Sg(a2) {
  function b2(b3, c3) {
    if (a2) {
      var d3 = b3.deletions;
      d3 === null ? (b3.deletions = [c3], b3.flags |= 16) : d3.push(c3);
    }
  }
  function c2(c3, d3) {
    if (!a2)
      return null;
    for (; d3 !== null; )
      b2(c3, d3), d3 = d3.sibling;
    return null;
  }
  function d2(a3, b3) {
    for (a3 = new Map(); b3 !== null; )
      b3.key !== null ? a3.set(b3.key, b3) : a3.set(b3.index, b3), b3 = b3.sibling;
    return a3;
  }
  function e2(a3, b3) {
    a3 = Tg(a3, b3);
    a3.index = 0;
    a3.sibling = null;
    return a3;
  }
  function f2(b3, c3, d3) {
    b3.index = d3;
    if (!a2)
      return c3;
    d3 = b3.alternate;
    if (d3 !== null)
      return d3 = d3.index, d3 < c3 ? (b3.flags |= 2, c3) : d3;
    b3.flags |= 2;
    return c3;
  }
  function g2(b3) {
    a2 && b3.alternate === null && (b3.flags |= 2);
    return b3;
  }
  function h2(a3, b3, c3, d3) {
    if (b3 === null || b3.tag !== 6)
      return b3 = Ug(c3, a3.mode, d3), b3.return = a3, b3;
    b3 = e2(b3, c3);
    b3.return = a3;
    return b3;
  }
  function k2(a3, b3, c3, d3) {
    var f3 = c3.type;
    if (f3 === wa)
      return m2(a3, b3, c3.props.children, d3, c3.key);
    if (b3 !== null && (b3.elementType === f3 || typeof f3 === "object" && f3 !== null && f3.$$typeof === Fa && Rg(f3) === b3.type))
      return d3 = e2(b3, c3.props), d3.ref = Pg(a3, b3, c3), d3.return = a3, d3;
    d3 = Vg(c3.type, c3.key, c3.props, null, a3.mode, d3);
    d3.ref = Pg(a3, b3, c3);
    d3.return = a3;
    return d3;
  }
  function l2(a3, b3, c3, d3) {
    if (b3 === null || b3.tag !== 4 || b3.stateNode.containerInfo !== c3.containerInfo || b3.stateNode.implementation !== c3.implementation)
      return b3 = Wg(c3, a3.mode, d3), b3.return = a3, b3;
    b3 = e2(b3, c3.children || []);
    b3.return = a3;
    return b3;
  }
  function m2(a3, b3, c3, d3, f3) {
    if (b3 === null || b3.tag !== 7)
      return b3 = Xg(c3, a3.mode, d3, f3), b3.return = a3, b3;
    b3 = e2(b3, c3);
    b3.return = a3;
    return b3;
  }
  function w2(a3, b3, c3) {
    if (typeof b3 === "string" || typeof b3 === "number")
      return b3 = Ug("" + b3, a3.mode, c3), b3.return = a3, b3;
    if (typeof b3 === "object" && b3 !== null) {
      switch (b3.$$typeof) {
        case ua:
          return c3 = Vg(b3.type, b3.key, b3.props, null, a3.mode, c3), c3.ref = Pg(a3, null, b3), c3.return = a3, c3;
        case va:
          return b3 = Wg(b3, a3.mode, c3), b3.return = a3, b3;
        case Fa:
          var d3 = b3._init;
          return w2(a3, d3(b3._payload), c3);
      }
      if (fb(b3) || Ma(b3))
        return b3 = Xg(b3, a3.mode, c3, null), b3.return = a3, b3;
      Qg(a3, b3);
    }
    return null;
  }
  function t2(a3, b3, c3, d3) {
    var e3 = b3 !== null ? b3.key : null;
    if (typeof c3 === "string" || typeof c3 === "number")
      return e3 !== null ? null : h2(a3, b3, "" + c3, d3);
    if (typeof c3 === "object" && c3 !== null) {
      switch (c3.$$typeof) {
        case ua:
          return c3.key === e3 ? k2(a3, b3, c3, d3) : null;
        case va:
          return c3.key === e3 ? l2(a3, b3, c3, d3) : null;
        case Fa:
          return e3 = c3._init, t2(a3, b3, e3(c3._payload), d3);
      }
      if (fb(c3) || Ma(c3))
        return e3 !== null ? null : m2(a3, b3, c3, d3, null);
      Qg(a3, c3);
    }
    return null;
  }
  function q2(a3, b3, c3, d3, e3) {
    if (typeof d3 === "string" || typeof d3 === "number")
      return a3 = a3.get(c3) || null, h2(b3, a3, "" + d3, e3);
    if (typeof d3 === "object" && d3 !== null) {
      switch (d3.$$typeof) {
        case ua:
          return a3 = a3.get(d3.key === null ? c3 : d3.key) || null, k2(b3, a3, d3, e3);
        case va:
          return a3 = a3.get(d3.key === null ? c3 : d3.key) || null, l2(b3, a3, d3, e3);
        case Fa:
          var f3 = d3._init;
          return q2(a3, b3, c3, f3(d3._payload), e3);
      }
      if (fb(d3) || Ma(d3))
        return a3 = a3.get(c3) || null, m2(b3, a3, d3, e3, null);
      Qg(b3, d3);
    }
    return null;
  }
  function n2(e3, g3, h3, k3) {
    for (var l3 = null, m3 = null, r2 = g3, u2 = g3 = 0, z2 = null; r2 !== null && u2 < h3.length; u2++) {
      r2.index > u2 ? (z2 = r2, r2 = null) : z2 = r2.sibling;
      var n3 = t2(e3, r2, h3[u2], k3);
      if (n3 === null) {
        r2 === null && (r2 = z2);
        break;
      }
      a2 && r2 && n3.alternate === null && b2(e3, r2);
      g3 = f2(n3, g3, u2);
      m3 === null ? l3 = n3 : m3.sibling = n3;
      m3 = n3;
      r2 = z2;
    }
    if (u2 === h3.length)
      return c2(e3, r2), l3;
    if (r2 === null) {
      for (; u2 < h3.length; u2++)
        r2 = w2(e3, h3[u2], k3), r2 !== null && (g3 = f2(r2, g3, u2), m3 === null ? l3 = r2 : m3.sibling = r2, m3 = r2);
      return l3;
    }
    for (r2 = d2(e3, r2); u2 < h3.length; u2++)
      z2 = q2(r2, e3, u2, h3[u2], k3), z2 !== null && (a2 && z2.alternate !== null && r2.delete(z2.key === null ? u2 : z2.key), g3 = f2(z2, g3, u2), m3 === null ? l3 = z2 : m3.sibling = z2, m3 = z2);
    a2 && r2.forEach(function(a3) {
      return b2(e3, a3);
    });
    return l3;
  }
  function x2(e3, g3, h3, k3) {
    var l3 = Ma(h3);
    if (typeof l3 !== "function")
      throw Error(v(150));
    h3 = l3.call(h3);
    if (h3 == null)
      throw Error(v(151));
    for (var r2 = l3 = null, m3 = g3, u2 = g3 = 0, z2 = null, n3 = h3.next(); m3 !== null && !n3.done; u2++, n3 = h3.next()) {
      m3.index > u2 ? (z2 = m3, m3 = null) : z2 = m3.sibling;
      var x3 = t2(e3, m3, n3.value, k3);
      if (x3 === null) {
        m3 === null && (m3 = z2);
        break;
      }
      a2 && m3 && x3.alternate === null && b2(e3, m3);
      g3 = f2(x3, g3, u2);
      r2 === null ? l3 = x3 : r2.sibling = x3;
      r2 = x3;
      m3 = z2;
    }
    if (n3.done)
      return c2(e3, m3), l3;
    if (m3 === null) {
      for (; !n3.done; u2++, n3 = h3.next())
        n3 = w2(e3, n3.value, k3), n3 !== null && (g3 = f2(n3, g3, u2), r2 === null ? l3 = n3 : r2.sibling = n3, r2 = n3);
      return l3;
    }
    for (m3 = d2(e3, m3); !n3.done; u2++, n3 = h3.next())
      n3 = q2(m3, e3, u2, n3.value, k3), n3 !== null && (a2 && n3.alternate !== null && m3.delete(n3.key === null ? u2 : n3.key), g3 = f2(n3, g3, u2), r2 === null ? l3 = n3 : r2.sibling = n3, r2 = n3);
    a2 && m3.forEach(function(a3) {
      return b2(e3, a3);
    });
    return l3;
  }
  function I2(a3, d3, f3, h3) {
    var k3 = typeof f3 === "object" && f3 !== null && f3.type === wa && f3.key === null;
    k3 && (f3 = f3.props.children);
    if (typeof f3 === "object" && f3 !== null) {
      switch (f3.$$typeof) {
        case ua:
          a: {
            var l3 = f3.key;
            for (k3 = d3; k3 !== null; ) {
              if (k3.key === l3) {
                l3 = f3.type;
                if (l3 === wa) {
                  if (k3.tag === 7) {
                    c2(a3, k3.sibling);
                    d3 = e2(k3, f3.props.children);
                    d3.return = a3;
                    a3 = d3;
                    break a;
                  }
                } else if (k3.elementType === l3 || typeof l3 === "object" && l3 !== null && l3.$$typeof === Fa && Rg(l3) === k3.type) {
                  c2(a3, k3.sibling);
                  d3 = e2(k3, f3.props);
                  d3.ref = Pg(a3, k3, f3);
                  d3.return = a3;
                  a3 = d3;
                  break a;
                }
                c2(a3, k3);
                break;
              } else
                b2(a3, k3);
              k3 = k3.sibling;
            }
            f3.type === wa ? (d3 = Xg(f3.props.children, a3.mode, h3, f3.key), d3.return = a3, a3 = d3) : (h3 = Vg(f3.type, f3.key, f3.props, null, a3.mode, h3), h3.ref = Pg(a3, d3, f3), h3.return = a3, a3 = h3);
          }
          return g2(a3);
        case va:
          a: {
            for (k3 = f3.key; d3 !== null; ) {
              if (d3.key === k3)
                if (d3.tag === 4 && d3.stateNode.containerInfo === f3.containerInfo && d3.stateNode.implementation === f3.implementation) {
                  c2(a3, d3.sibling);
                  d3 = e2(d3, f3.children || []);
                  d3.return = a3;
                  a3 = d3;
                  break a;
                } else {
                  c2(a3, d3);
                  break;
                }
              else
                b2(a3, d3);
              d3 = d3.sibling;
            }
            d3 = Wg(f3, a3.mode, h3);
            d3.return = a3;
            a3 = d3;
          }
          return g2(a3);
        case Fa:
          return k3 = f3._init, I2(a3, d3, k3(f3._payload), h3);
      }
      if (fb(f3))
        return n2(a3, d3, f3, h3);
      if (Ma(f3))
        return x2(a3, d3, f3, h3);
      Qg(a3, f3);
    }
    if (typeof f3 === "string" || typeof f3 === "number")
      return f3 = "" + f3, d3 !== null && d3.tag === 6 ? (c2(a3, d3.sibling), d3 = e2(d3, f3), d3.return = a3, a3 = d3) : (c2(a3, d3), d3 = Ug(f3, a3.mode, h3), d3.return = a3, a3 = d3), g2(a3);
    if (typeof f3 === "undefined" && !k3)
      switch (a3.tag) {
        case 1:
        case 0:
        case 11:
        case 15:
          throw Error(v(152, Ta(a3) || "Component"));
      }
    return c2(a3, d3);
  }
  return I2;
}
var Yg = Sg(true), Zg = Sg(false), $g = {}, ah = Vf($g), bh = Vf($g), ch = Vf($g);
function dh(a2) {
  if (a2 === $g)
    throw Error(v(174));
  return a2;
}
function eh(a2, b2) {
  H(ch, b2);
  H(bh, a2);
  H(ah, $g);
  a2 = b2.nodeType;
  switch (a2) {
    case 9:
    case 11:
      b2 = (b2 = b2.documentElement) ? b2.namespaceURI : mb(null, "");
      break;
    default:
      a2 = a2 === 8 ? b2.parentNode : b2, b2 = a2.namespaceURI || null, a2 = a2.tagName, b2 = mb(b2, a2);
  }
  G(ah);
  H(ah, b2);
}
function fh() {
  G(ah);
  G(bh);
  G(ch);
}
function gh(a2) {
  dh(ch.current);
  var b2 = dh(ah.current);
  var c2 = mb(b2, a2.type);
  b2 !== c2 && (H(bh, a2), H(ah, c2));
}
function hh(a2) {
  bh.current === a2 && (G(ah), G(bh));
}
var O = Vf(0);
function ih(a2) {
  for (var b2 = a2; b2 !== null; ) {
    if (b2.tag === 13) {
      var c2 = b2.memoizedState;
      if (c2 !== null && (c2 = c2.dehydrated, c2 === null || c2.data === "$?" || c2.data === "$!"))
        return b2;
    } else if (b2.tag === 19 && b2.memoizedProps.revealOrder !== void 0) {
      if ((b2.flags & 128) !== 0)
        return b2;
    } else if (b2.child !== null) {
      b2.child.return = b2;
      b2 = b2.child;
      continue;
    }
    if (b2 === a2)
      break;
    for (; b2.sibling === null; ) {
      if (b2.return === null || b2.return === a2)
        return null;
      b2 = b2.return;
    }
    b2.sibling.return = b2.return;
    b2 = b2.sibling;
  }
  return null;
}
var jh = null, kh = null, lh = false;
function mh(a2, b2) {
  var c2 = nh(5, null, null, 0);
  c2.elementType = "DELETED";
  c2.stateNode = b2;
  c2.return = a2;
  b2 = a2.deletions;
  b2 === null ? (a2.deletions = [c2], a2.flags |= 16) : b2.push(c2);
}
function oh(a2, b2) {
  switch (a2.tag) {
    case 5:
      var c2 = a2.type;
      b2 = b2.nodeType !== 1 || c2.toLowerCase() !== b2.nodeName.toLowerCase() ? null : b2;
      return b2 !== null ? (a2.stateNode = b2, true) : false;
    case 6:
      return b2 = a2.pendingProps === "" || b2.nodeType !== 3 ? null : b2, b2 !== null ? (a2.stateNode = b2, true) : false;
    case 13:
      return b2 = b2.nodeType !== 8 ? null : b2, b2 !== null ? (a2.memoizedState = { dehydrated: b2, retryLane: 1073741824 }, c2 = nh(18, null, null, 0), c2.stateNode = b2, c2.return = a2, a2.child = c2, true) : false;
    default:
      return false;
  }
}
function ph(a2) {
  if (lh) {
    var b2 = kh;
    if (b2) {
      var c2 = b2;
      if (!oh(a2, b2)) {
        b2 = Mf(c2.nextSibling);
        if (!b2 || !oh(a2, b2)) {
          a2.flags = a2.flags & -2049 | 2;
          lh = false;
          jh = a2;
          return;
        }
        mh(jh, c2);
      }
      jh = a2;
      kh = Mf(b2.firstChild);
    } else
      a2.flags = a2.flags & -2049 | 2, lh = false, jh = a2;
  }
}
function qh(a2) {
  for (a2 = a2.return; a2 !== null && a2.tag !== 5 && a2.tag !== 3 && a2.tag !== 13; )
    a2 = a2.return;
  jh = a2;
}
function rh(a2) {
  if (a2 !== jh)
    return false;
  if (!lh)
    return qh(a2), lh = true, false;
  var b2;
  (b2 = a2.tag !== 3) && !(b2 = a2.tag !== 5) && (b2 = a2.type, b2 = b2 !== "head" && b2 !== "body" && !Ff(a2.type, a2.memoizedProps));
  if (b2)
    for (b2 = kh; b2; )
      mh(a2, b2), b2 = Mf(b2.nextSibling);
  qh(a2);
  if (a2.tag === 13) {
    a2 = a2.memoizedState;
    a2 = a2 !== null ? a2.dehydrated : null;
    if (!a2)
      throw Error(v(317));
    a: {
      a2 = a2.nextSibling;
      for (b2 = 0; a2; ) {
        if (a2.nodeType === 8) {
          var c2 = a2.data;
          if (c2 === "/$") {
            if (b2 === 0) {
              kh = Mf(a2.nextSibling);
              break a;
            }
            b2--;
          } else
            c2 !== "$" && c2 !== "$!" && c2 !== "$?" || b2++;
        }
        a2 = a2.nextSibling;
      }
      kh = null;
    }
  } else
    kh = jh ? Mf(a2.stateNode.nextSibling) : null;
  return true;
}
function sh() {
  kh = jh = null;
  lh = false;
}
var th = [];
function uh() {
  for (var a2 = 0; a2 < th.length; a2++)
    th[a2]._workInProgressVersionPrimary = null;
  th.length = 0;
}
var vh = ta.ReactCurrentDispatcher, wh = ta.ReactCurrentBatchConfig, xh = 0, P = null, Q = null, R = null, yh = false, zh = false;
function Ah() {
  throw Error(v(321));
}
function Bh(a2, b2) {
  if (b2 === null)
    return false;
  for (var c2 = 0; c2 < b2.length && c2 < a2.length; c2++)
    if (!Le(a2[c2], b2[c2]))
      return false;
  return true;
}
function Ch(a2, b2, c2, d2, e2, f2) {
  xh = f2;
  P = b2;
  b2.memoizedState = null;
  b2.updateQueue = null;
  b2.lanes = 0;
  vh.current = a2 === null || a2.memoizedState === null ? Dh : Eh;
  a2 = c2(d2, e2);
  if (zh) {
    f2 = 0;
    do {
      zh = false;
      if (!(25 > f2))
        throw Error(v(301));
      f2 += 1;
      R = Q = null;
      b2.updateQueue = null;
      vh.current = Fh;
      a2 = c2(d2, e2);
    } while (zh);
  }
  vh.current = Gh;
  b2 = Q !== null && Q.next !== null;
  xh = 0;
  R = Q = P = null;
  yh = false;
  if (b2)
    throw Error(v(300));
  return a2;
}
function Hh() {
  var a2 = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null };
  R === null ? P.memoizedState = R = a2 : R = R.next = a2;
  return R;
}
function Ih() {
  if (Q === null) {
    var a2 = P.alternate;
    a2 = a2 !== null ? a2.memoizedState : null;
  } else
    a2 = Q.next;
  var b2 = R === null ? P.memoizedState : R.next;
  if (b2 !== null)
    R = b2, Q = a2;
  else {
    if (a2 === null)
      throw Error(v(310));
    Q = a2;
    a2 = { memoizedState: Q.memoizedState, baseState: Q.baseState, baseQueue: Q.baseQueue, queue: Q.queue, next: null };
    R === null ? P.memoizedState = R = a2 : R = R.next = a2;
  }
  return R;
}
function Jh(a2, b2) {
  return typeof b2 === "function" ? b2(a2) : b2;
}
function Kh(a2) {
  var b2 = Ih(), c2 = b2.queue;
  if (c2 === null)
    throw Error(v(311));
  c2.lastRenderedReducer = a2;
  var d2 = Q, e2 = d2.baseQueue, f2 = c2.pending;
  if (f2 !== null) {
    if (e2 !== null) {
      var g2 = e2.next;
      e2.next = f2.next;
      f2.next = g2;
    }
    d2.baseQueue = e2 = f2;
    c2.pending = null;
  }
  if (e2 !== null) {
    f2 = e2.next;
    d2 = d2.baseState;
    var h2 = g2 = null, k2 = null, l2 = f2;
    do {
      var m2 = l2.lane;
      if ((xh & m2) === m2)
        k2 !== null && (k2 = k2.next = { lane: 0, action: l2.action, eagerReducer: l2.eagerReducer, eagerState: l2.eagerState, next: null }), d2 = l2.eagerReducer === a2 ? l2.eagerState : a2(d2, l2.action);
      else {
        var w2 = {
          lane: m2,
          action: l2.action,
          eagerReducer: l2.eagerReducer,
          eagerState: l2.eagerState,
          next: null
        };
        k2 === null ? (h2 = k2 = w2, g2 = d2) : k2 = k2.next = w2;
        P.lanes |= m2;
        Dg |= m2;
      }
      l2 = l2.next;
    } while (l2 !== null && l2 !== f2);
    k2 === null ? g2 = d2 : k2.next = h2;
    Le(d2, b2.memoizedState) || (sg = true);
    b2.memoizedState = d2;
    b2.baseState = g2;
    b2.baseQueue = k2;
    c2.lastRenderedState = d2;
  }
  a2 = c2.interleaved;
  if (a2 !== null) {
    e2 = a2;
    do
      f2 = e2.lane, P.lanes |= f2, Dg |= f2, e2 = e2.next;
    while (e2 !== a2);
  } else
    e2 === null && (c2.lanes = 0);
  return [b2.memoizedState, c2.dispatch];
}
function Lh(a2) {
  var b2 = Ih(), c2 = b2.queue;
  if (c2 === null)
    throw Error(v(311));
  c2.lastRenderedReducer = a2;
  var d2 = c2.dispatch, e2 = c2.pending, f2 = b2.memoizedState;
  if (e2 !== null) {
    c2.pending = null;
    var g2 = e2 = e2.next;
    do
      f2 = a2(f2, g2.action), g2 = g2.next;
    while (g2 !== e2);
    Le(f2, b2.memoizedState) || (sg = true);
    b2.memoizedState = f2;
    b2.baseQueue === null && (b2.baseState = f2);
    c2.lastRenderedState = f2;
  }
  return [f2, d2];
}
function Mh(a2, b2, c2) {
  var d2 = b2._getVersion;
  d2 = d2(b2._source);
  var e2 = b2._workInProgressVersionPrimary;
  if (e2 !== null)
    a2 = e2 === d2;
  else if (a2 = a2.mutableReadLanes, a2 = (xh & a2) === a2)
    b2._workInProgressVersionPrimary = d2, th.push(b2);
  if (a2)
    return c2(b2._source);
  th.push(b2);
  throw Error(v(350));
}
function Nh(a2, b2, c2, d2) {
  var e2 = M;
  if (e2 === null)
    throw Error(v(349));
  var f2 = b2._getVersion, g2 = f2(b2._source), h2 = vh.current, k2 = h2.useState(function() {
    return Mh(e2, b2, c2);
  }), l2 = k2[1], m2 = k2[0];
  k2 = R;
  var w2 = a2.memoizedState, t2 = w2.refs, q2 = t2.getSnapshot, n2 = w2.source;
  w2 = w2.subscribe;
  var x2 = P;
  a2.memoizedState = { refs: t2, source: b2, subscribe: d2 };
  h2.useEffect(function() {
    t2.getSnapshot = c2;
    t2.setSnapshot = l2;
    var a3 = f2(b2._source);
    Le(g2, a3) || (a3 = c2(b2._source), Le(m2, a3) || (l2(a3), a3 = Ig(x2), e2.mutableReadLanes |= a3 & e2.pendingLanes), Cc(e2, e2.mutableReadLanes));
  }, [c2, b2, d2]);
  h2.useEffect(function() {
    return d2(b2._source, function() {
      var a3 = t2.getSnapshot, c3 = t2.setSnapshot;
      try {
        c3(a3(b2._source));
        var d3 = Ig(x2);
        e2.mutableReadLanes |= d3 & e2.pendingLanes;
      } catch (u2) {
        c3(function() {
          throw u2;
        });
      }
    });
  }, [b2, d2]);
  Le(q2, c2) && Le(n2, b2) && Le(w2, d2) || (a2 = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: Jh, lastRenderedState: m2 }, a2.dispatch = l2 = Oh.bind(null, P, a2), k2.queue = a2, k2.baseQueue = null, m2 = Mh(e2, b2, c2), k2.memoizedState = k2.baseState = m2);
  return m2;
}
function Ph(a2, b2, c2) {
  var d2 = Ih();
  return Nh(d2, a2, b2, c2);
}
function Qh(a2) {
  var b2 = Hh();
  typeof a2 === "function" && (a2 = a2());
  b2.memoizedState = b2.baseState = a2;
  a2 = b2.queue = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: Jh, lastRenderedState: a2 };
  a2 = a2.dispatch = Oh.bind(null, P, a2);
  return [b2.memoizedState, a2];
}
function Rh(a2, b2, c2, d2) {
  a2 = { tag: a2, create: b2, destroy: c2, deps: d2, next: null };
  b2 = P.updateQueue;
  b2 === null ? (b2 = { lastEffect: null }, P.updateQueue = b2, b2.lastEffect = a2.next = a2) : (c2 = b2.lastEffect, c2 === null ? b2.lastEffect = a2.next = a2 : (d2 = c2.next, c2.next = a2, a2.next = d2, b2.lastEffect = a2));
  return a2;
}
function Sh() {
  return Ih().memoizedState;
}
function Th(a2, b2, c2, d2) {
  var e2 = Hh();
  P.flags |= a2;
  e2.memoizedState = Rh(1 | b2, c2, void 0, d2 === void 0 ? null : d2);
}
function Uh(a2, b2, c2, d2) {
  var e2 = Ih();
  d2 = d2 === void 0 ? null : d2;
  var f2 = void 0;
  if (Q !== null) {
    var g2 = Q.memoizedState;
    f2 = g2.destroy;
    if (d2 !== null && Bh(d2, g2.deps)) {
      e2.memoizedState = Rh(b2, c2, f2, d2);
      return;
    }
  }
  P.flags |= a2;
  e2.memoizedState = Rh(1 | b2, c2, f2, d2);
}
function Vh(a2, b2) {
  return Th(1049600, 4, a2, b2);
}
function Wh(a2, b2) {
  return Uh(1024, 4, a2, b2);
}
function Xh(a2, b2) {
  return Uh(4, 2, a2, b2);
}
function Yh(a2, b2) {
  if (typeof b2 === "function")
    return a2 = a2(), b2(a2), function() {
      b2(null);
    };
  if (b2 !== null && b2 !== void 0)
    return a2 = a2(), b2.current = a2, function() {
      b2.current = null;
    };
}
function Zh(a2, b2, c2) {
  c2 = c2 !== null && c2 !== void 0 ? c2.concat([a2]) : null;
  return Uh(4, 2, Yh.bind(null, b2, a2), c2);
}
function $h() {
}
function ai(a2, b2) {
  var c2 = Ih();
  b2 = b2 === void 0 ? null : b2;
  var d2 = c2.memoizedState;
  if (d2 !== null && b2 !== null && Bh(b2, d2[1]))
    return d2[0];
  c2.memoizedState = [a2, b2];
  return a2;
}
function bi(a2, b2) {
  var c2 = Ih();
  b2 = b2 === void 0 ? null : b2;
  var d2 = c2.memoizedState;
  if (d2 !== null && b2 !== null && Bh(b2, d2[1]))
    return d2[0];
  a2 = a2();
  c2.memoizedState = [a2, b2];
  return a2;
}
function ci(a2, b2) {
  var c2 = E;
  E = c2 !== 0 && 4 > c2 ? c2 : 4;
  a2(true);
  var d2 = wh.transition;
  wh.transition = 1;
  try {
    a2(false), b2();
  } finally {
    E = c2, wh.transition = d2;
  }
}
function Oh(a2, b2, c2) {
  var d2 = Hg(), e2 = Ig(a2), f2 = { lane: e2, action: c2, eagerReducer: null, eagerState: null, next: null }, g2 = a2.alternate;
  if (a2 === P || g2 !== null && g2 === P)
    zh = yh = true, e2 = b2.pending, e2 === null ? f2.next = f2 : (f2.next = e2.next, e2.next = f2), b2.pending = f2;
  else {
    if (M !== null && (a2.mode & 1) !== 0 && (N & 8) === 0) {
      var h2 = b2.interleaved;
      h2 === null ? (f2.next = f2, ug === null ? ug = [b2] : ug.push(b2)) : (f2.next = h2.next, h2.next = f2);
      b2.interleaved = f2;
    } else
      h2 = b2.pending, h2 === null ? f2.next = f2 : (f2.next = h2.next, h2.next = f2), b2.pending = f2;
    if (a2.lanes === 0 && (g2 === null || g2.lanes === 0) && (g2 = b2.lastRenderedReducer, g2 !== null))
      try {
        var k2 = b2.lastRenderedState, l2 = g2(k2, c2);
        f2.eagerReducer = g2;
        f2.eagerState = l2;
        if (Le(l2, k2))
          return;
      } catch (m2) {
      } finally {
      }
    f2 = Jg(a2, e2, d2);
    (e2 & 4194240) !== 0 && f2 !== null && (a2 = b2.lanes, a2 &= f2.pendingLanes, e2 |= a2, b2.lanes = e2, Cc(f2, e2));
  }
}
var Gh = { readContext: tg, useCallback: Ah, useContext: Ah, useEffect: Ah, useImperativeHandle: Ah, useLayoutEffect: Ah, useMemo: Ah, useReducer: Ah, useRef: Ah, useState: Ah, useDebugValue: Ah, useDeferredValue: Ah, useTransition: Ah, useMutableSource: Ah, useOpaqueIdentifier: Ah, unstable_isNewReconciler: false }, Dh = {
  readContext: tg,
  useCallback: function(a2, b2) {
    Hh().memoizedState = [a2, b2 === void 0 ? null : b2];
    return a2;
  },
  useContext: tg,
  useEffect: Vh,
  useImperativeHandle: function(a2, b2, c2) {
    c2 = c2 !== null && c2 !== void 0 ? c2.concat([a2]) : null;
    return Th(524292, 2, Yh.bind(null, b2, a2), c2);
  },
  useLayoutEffect: function(a2, b2) {
    return Th(524292, 2, a2, b2);
  },
  useMemo: function(a2, b2) {
    var c2 = Hh();
    b2 = b2 === void 0 ? null : b2;
    a2 = a2();
    c2.memoizedState = [a2, b2];
    return a2;
  },
  useReducer: function(a2, b2, c2) {
    var d2 = Hh();
    b2 = c2 !== void 0 ? c2(b2) : b2;
    d2.memoizedState = d2.baseState = b2;
    a2 = d2.queue = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: a2, lastRenderedState: b2 };
    a2 = a2.dispatch = Oh.bind(null, P, a2);
    return [d2.memoizedState, a2];
  },
  useRef: function(a2) {
    var b2 = Hh();
    a2 = { current: a2 };
    return b2.memoizedState = a2;
  },
  useState: Qh,
  useDebugValue: $h,
  useDeferredValue: function(a2) {
    var b2 = Qh(a2), c2 = b2[0], d2 = b2[1];
    Vh(function() {
      var b3 = wh.transition;
      wh.transition = 1;
      try {
        d2(a2);
      } finally {
        wh.transition = b3;
      }
    }, [a2]);
    return c2;
  },
  useTransition: function() {
    var a2 = Qh(false), b2 = a2[0];
    a2 = ci.bind(null, a2[1]);
    Hh().memoizedState = a2;
    return [b2, a2];
  },
  useMutableSource: function(a2, b2, c2) {
    var d2 = Hh();
    d2.memoizedState = { refs: { getSnapshot: b2, setSnapshot: null }, source: a2, subscribe: c2 };
    return Nh(d2, a2, b2, c2);
  },
  useOpaqueIdentifier: function() {
    if (lh) {
      var a2 = false, b2 = Pf(function() {
        a2 || (a2 = true, c2("r:" + (Of++).toString(36)));
        throw Error(v(355));
      }), c2 = Qh(b2)[1];
      (P.mode & 1) === 0 && (P.flags |= 1024, Rh(5, function() {
        c2("r:" + (Of++).toString(36));
      }, void 0, null));
      return b2;
    }
    b2 = "r:" + (Of++).toString(36);
    Qh(b2);
    return b2;
  },
  unstable_isNewReconciler: false
}, Eh = { readContext: tg, useCallback: ai, useContext: tg, useEffect: Wh, useImperativeHandle: Zh, useLayoutEffect: Xh, useMemo: bi, useReducer: Kh, useRef: Sh, useState: function() {
  return Kh(Jh);
}, useDebugValue: $h, useDeferredValue: function(a2) {
  var b2 = Kh(Jh), c2 = b2[0], d2 = b2[1];
  Wh(function() {
    var b3 = wh.transition;
    wh.transition = 1;
    try {
      d2(a2);
    } finally {
      wh.transition = b3;
    }
  }, [a2]);
  return c2;
}, useTransition: function() {
  var a2 = Kh(Jh)[0], b2 = Ih().memoizedState;
  return [a2, b2];
}, useMutableSource: Ph, useOpaqueIdentifier: function() {
  return Kh(Jh)[0];
}, unstable_isNewReconciler: false }, Fh = { readContext: tg, useCallback: ai, useContext: tg, useEffect: Wh, useImperativeHandle: Zh, useLayoutEffect: Xh, useMemo: bi, useReducer: Lh, useRef: Sh, useState: function() {
  return Lh(Jh);
}, useDebugValue: $h, useDeferredValue: function(a2) {
  var b2 = Lh(Jh), c2 = b2[0], d2 = b2[1];
  Wh(function() {
    var b3 = wh.transition;
    wh.transition = 1;
    try {
      d2(a2);
    } finally {
      wh.transition = b3;
    }
  }, [a2]);
  return c2;
}, useTransition: function() {
  var a2 = Lh(Jh)[0], b2 = Ih().memoizedState;
  return [a2, b2];
}, useMutableSource: Ph, useOpaqueIdentifier: function() {
  return Lh(Jh)[0];
}, unstable_isNewReconciler: false };
function di(a2, b2) {
  try {
    var c2 = "", d2 = b2;
    do
      c2 += Ra(d2), d2 = d2.return;
    while (d2);
    var e2 = c2;
  } catch (f2) {
    e2 = "\nError generating stack: " + f2.message + "\n" + f2.stack;
  }
  return { value: a2, source: b2, stack: e2 };
}
function ei(a2, b2) {
  try {
    console.error(b2.value);
  } catch (c2) {
    setTimeout(function() {
      throw c2;
    });
  }
}
var fi = typeof WeakMap === "function" ? WeakMap : Map;
function gi(a2, b2, c2) {
  c2 = yg(-1, c2);
  c2.tag = 3;
  c2.payload = { element: null };
  var d2 = b2.value;
  c2.callback = function() {
    hi || (hi = true, ii = d2);
    ei(a2, b2);
  };
  return c2;
}
function ji(a2, b2, c2) {
  c2 = yg(-1, c2);
  c2.tag = 3;
  var d2 = a2.type.getDerivedStateFromError;
  if (typeof d2 === "function") {
    var e2 = b2.value;
    c2.payload = function() {
      ei(a2, b2);
      return d2(e2);
    };
  }
  var f2 = a2.stateNode;
  f2 !== null && typeof f2.componentDidCatch === "function" && (c2.callback = function() {
    typeof d2 !== "function" && (ki === null ? ki = new Set([this]) : ki.add(this), ei(a2, b2));
    var c3 = b2.stack;
    this.componentDidCatch(b2.value, { componentStack: c3 !== null ? c3 : "" });
  });
  return c2;
}
var li = ta.ReactCurrentOwner, sg = false;
function mi(a2, b2, c2, d2) {
  b2.child = a2 === null ? Zg(b2, null, c2, d2) : Yg(b2, a2.child, c2, d2);
}
function ni(a2, b2, c2, d2, e2) {
  c2 = c2.render;
  var f2 = b2.ref;
  rg(b2, e2);
  d2 = Ch(a2, b2, c2, d2, f2, e2);
  if (a2 !== null && !sg)
    return b2.updateQueue = a2.updateQueue, b2.flags &= -1029, a2.lanes &= ~e2, oi(a2, b2, e2);
  b2.flags |= 1;
  mi(a2, b2, d2, e2);
  return b2.child;
}
function pi(a2, b2, c2, d2, e2, f2) {
  if (a2 === null) {
    var g2 = c2.type;
    if (typeof g2 === "function" && !qi(g2) && g2.defaultProps === void 0 && c2.compare === null && c2.defaultProps === void 0)
      return b2.tag = 15, b2.type = g2, ri(a2, b2, g2, d2, e2, f2);
    a2 = Vg(c2.type, null, d2, b2, b2.mode, f2);
    a2.ref = b2.ref;
    a2.return = b2;
    return b2.child = a2;
  }
  g2 = a2.child;
  if ((e2 & f2) === 0 && (e2 = g2.memoizedProps, c2 = c2.compare, c2 = c2 !== null ? c2 : Me, c2(e2, d2) && a2.ref === b2.ref))
    return oi(a2, b2, f2);
  b2.flags |= 1;
  a2 = Tg(g2, d2);
  a2.ref = b2.ref;
  a2.return = b2;
  return b2.child = a2;
}
function ri(a2, b2, c2, d2, e2, f2) {
  if (a2 !== null && Me(a2.memoizedProps, d2) && a2.ref === b2.ref) {
    sg = false;
    if ((f2 & e2) === 0)
      return b2.lanes = a2.lanes, oi(a2, b2, f2);
    (a2.flags & 32768) !== 0 && (sg = true);
  }
  return si(a2, b2, c2, d2, f2);
}
function ti(a2, b2, c2) {
  var d2 = b2.pendingProps, e2 = d2.children, f2 = a2 !== null ? a2.memoizedState : null;
  if (d2.mode === "hidden" || d2.mode === "unstable-defer-without-hiding")
    if ((b2.mode & 1) === 0)
      b2.memoizedState = { baseLanes: 0, cachePool: null }, H(ui, vi), vi |= c2;
    else {
      if ((c2 & 1073741824) === 0)
        return a2 = f2 !== null ? f2.baseLanes | c2 : c2, b2.lanes = b2.childLanes = 1073741824, b2.memoizedState = { baseLanes: a2, cachePool: null }, b2.updateQueue = null, H(ui, vi), vi |= a2, null;
      b2.memoizedState = { baseLanes: 0, cachePool: null };
      d2 = f2 !== null ? f2.baseLanes : c2;
      H(ui, vi);
      vi |= d2;
    }
  else
    f2 !== null ? (d2 = f2.baseLanes | c2, b2.memoizedState = null) : d2 = c2, H(ui, vi), vi |= d2;
  mi(a2, b2, e2, c2);
  return b2.child;
}
function wi(a2, b2) {
  var c2 = b2.ref;
  if (a2 === null && c2 !== null || a2 !== null && a2.ref !== c2)
    b2.flags |= 256, b2.flags |= 262144;
}
function si(a2, b2, c2, d2, e2) {
  var f2 = Zf(c2) ? Xf : J.current;
  f2 = Yf(b2, f2);
  rg(b2, e2);
  c2 = Ch(a2, b2, c2, d2, f2, e2);
  if (a2 !== null && !sg)
    return b2.updateQueue = a2.updateQueue, b2.flags &= -1029, a2.lanes &= ~e2, oi(a2, b2, e2);
  b2.flags |= 1;
  mi(a2, b2, c2, e2);
  return b2.child;
}
function xi(a2, b2, c2, d2, e2) {
  if (Zf(c2)) {
    var f2 = true;
    cg(b2);
  } else
    f2 = false;
  rg(b2, e2);
  if (b2.stateNode === null)
    a2 !== null && (a2.alternate = null, b2.alternate = null, b2.flags |= 2), Mg(b2, c2, d2), Og(b2, c2, d2, e2), d2 = true;
  else if (a2 === null) {
    var g2 = b2.stateNode, h2 = b2.memoizedProps;
    g2.props = h2;
    var k2 = g2.context, l2 = c2.contextType;
    typeof l2 === "object" && l2 !== null ? l2 = tg(l2) : (l2 = Zf(c2) ? Xf : J.current, l2 = Yf(b2, l2));
    var m2 = c2.getDerivedStateFromProps, w2 = typeof m2 === "function" || typeof g2.getSnapshotBeforeUpdate === "function";
    w2 || typeof g2.UNSAFE_componentWillReceiveProps !== "function" && typeof g2.componentWillReceiveProps !== "function" || (h2 !== d2 || k2 !== l2) && Ng(b2, g2, d2, l2);
    vg = false;
    var t2 = b2.memoizedState;
    g2.state = t2;
    Cg(b2, d2, g2, e2);
    k2 = b2.memoizedState;
    h2 !== d2 || t2 !== k2 || K.current || vg ? (typeof m2 === "function" && (Gg(b2, c2, m2, d2), k2 = b2.memoizedState), (h2 = vg || Lg(b2, c2, h2, d2, t2, k2, l2)) ? (w2 || typeof g2.UNSAFE_componentWillMount !== "function" && typeof g2.componentWillMount !== "function" || (typeof g2.componentWillMount === "function" && g2.componentWillMount(), typeof g2.UNSAFE_componentWillMount === "function" && g2.UNSAFE_componentWillMount()), typeof g2.componentDidMount === "function" && (b2.flags |= 524292)) : (typeof g2.componentDidMount === "function" && (b2.flags |= 524292), b2.memoizedProps = d2, b2.memoizedState = k2), g2.props = d2, g2.state = k2, g2.context = l2, d2 = h2) : (typeof g2.componentDidMount === "function" && (b2.flags |= 524292), d2 = false);
  } else {
    g2 = b2.stateNode;
    xg(a2, b2);
    h2 = b2.memoizedProps;
    l2 = b2.type === b2.elementType ? h2 : jg(b2.type, h2);
    g2.props = l2;
    w2 = b2.pendingProps;
    t2 = g2.context;
    k2 = c2.contextType;
    typeof k2 === "object" && k2 !== null ? k2 = tg(k2) : (k2 = Zf(c2) ? Xf : J.current, k2 = Yf(b2, k2));
    var q2 = c2.getDerivedStateFromProps;
    (m2 = typeof q2 === "function" || typeof g2.getSnapshotBeforeUpdate === "function") || typeof g2.UNSAFE_componentWillReceiveProps !== "function" && typeof g2.componentWillReceiveProps !== "function" || (h2 !== w2 || t2 !== k2) && Ng(b2, g2, d2, k2);
    vg = false;
    t2 = b2.memoizedState;
    g2.state = t2;
    Cg(b2, d2, g2, e2);
    var n2 = b2.memoizedState;
    h2 !== w2 || t2 !== n2 || K.current || vg ? (typeof q2 === "function" && (Gg(b2, c2, q2, d2), n2 = b2.memoizedState), (l2 = vg || Lg(b2, c2, l2, d2, t2, n2, k2) || false) ? (m2 || typeof g2.UNSAFE_componentWillUpdate !== "function" && typeof g2.componentWillUpdate !== "function" || (typeof g2.componentWillUpdate === "function" && g2.componentWillUpdate(d2, n2, k2), typeof g2.UNSAFE_componentWillUpdate === "function" && g2.UNSAFE_componentWillUpdate(d2, n2, k2)), typeof g2.componentDidUpdate === "function" && (b2.flags |= 4), typeof g2.getSnapshotBeforeUpdate === "function" && (b2.flags |= 512)) : (typeof g2.componentDidUpdate !== "function" || h2 === a2.memoizedProps && t2 === a2.memoizedState || (b2.flags |= 4), typeof g2.getSnapshotBeforeUpdate !== "function" || h2 === a2.memoizedProps && t2 === a2.memoizedState || (b2.flags |= 512), b2.memoizedProps = d2, b2.memoizedState = n2), g2.props = d2, g2.state = n2, g2.context = k2, d2 = l2) : (typeof g2.componentDidUpdate !== "function" || h2 === a2.memoizedProps && t2 === a2.memoizedState || (b2.flags |= 4), typeof g2.getSnapshotBeforeUpdate !== "function" || h2 === a2.memoizedProps && t2 === a2.memoizedState || (b2.flags |= 512), d2 = false);
  }
  return yi(a2, b2, c2, d2, f2, e2);
}
function yi(a2, b2, c2, d2, e2, f2) {
  wi(a2, b2);
  var g2 = (b2.flags & 128) !== 0;
  if (!d2 && !g2)
    return e2 && dg(b2, c2, false), oi(a2, b2, f2);
  d2 = b2.stateNode;
  li.current = b2;
  var h2 = g2 && typeof c2.getDerivedStateFromError !== "function" ? null : d2.render();
  b2.flags |= 1;
  a2 !== null && g2 ? (b2.child = Yg(b2, a2.child, null, f2), b2.child = Yg(b2, null, h2, f2)) : mi(a2, b2, h2, f2);
  b2.memoizedState = d2.state;
  e2 && dg(b2, c2, true);
  return b2.child;
}
function zi(a2) {
  var b2 = a2.stateNode;
  b2.pendingContext ? ag(a2, b2.pendingContext, b2.pendingContext !== b2.context) : b2.context && ag(a2, b2.context, false);
  eh(a2, b2.containerInfo);
}
var Ai = { dehydrated: null, retryLane: 0 };
function Bi(a2) {
  return { baseLanes: a2, cachePool: null };
}
function Ci(a2, b2, c2) {
  var d2 = b2.pendingProps, e2 = O.current, f2 = false, g2 = (b2.flags & 128) !== 0, h2;
  (h2 = g2) || (h2 = a2 !== null && a2.memoizedState === null ? false : (e2 & 2) !== 0);
  h2 ? (f2 = true, b2.flags &= -129) : a2 !== null && a2.memoizedState === null || d2.fallback === void 0 || d2.unstable_avoidThisFallback === true || (e2 |= 1);
  H(O, e2 & 1);
  if (a2 === null) {
    if (d2.fallback !== void 0 && (ph(b2), a2 = b2.memoizedState, a2 !== null && (a2 = a2.dehydrated, a2 !== null)))
      return (b2.mode & 1) === 0 ? b2.lanes = 1 : a2.data === "$!" ? b2.lanes = 8 : b2.lanes = 1073741824, null;
    a2 = d2.children;
    e2 = d2.fallback;
    return f2 ? (a2 = Di(b2, a2, e2, c2), b2.child.memoizedState = Bi(c2), b2.memoizedState = Ai, a2) : typeof d2.unstable_expectedLoadTime === "number" ? (a2 = Di(b2, a2, e2, c2), b2.child.memoizedState = Bi(c2), b2.memoizedState = Ai, b2.lanes = 4194304, a2) : Ei(b2, a2, c2);
  }
  e2 = a2.memoizedState;
  if (e2 !== null) {
    h2 = e2.dehydrated;
    if (h2 !== null) {
      if (g2) {
        if (b2.memoizedState !== null)
          return b2.child = a2.child, b2.flags |= 128, null;
        f2 = d2.fallback;
        e2 = b2.mode;
        d2 = Fi(d2.children, e2, 0, null);
        f2 = Xg(f2, e2, c2, null);
        f2.flags |= 2;
        d2.return = b2;
        f2.return = b2;
        d2.sibling = f2;
        b2.child = d2;
        (b2.mode & 1) !== 0 && Yg(b2, a2.child, null, c2);
        b2.child.memoizedState = Bi(c2);
        b2.memoizedState = Ai;
        return f2;
      }
      if ((N & 32) !== 0 || (b2.mode & 1) === 0 || h2.data === "$!")
        b2 = Gi(a2, b2, c2);
      else if (d2 = (c2 & a2.childLanes) !== 0, sg || d2) {
        d2 = M;
        if (d2 !== null) {
          switch (c2 & -c2) {
            case 4:
              f2 = 2;
              break;
            case 16:
              f2 = 8;
              break;
            case 64:
            case 128:
            case 256:
            case 512:
            case 1024:
            case 2048:
            case 4096:
            case 8192:
            case 16384:
            case 32768:
            case 65536:
            case 131072:
            case 262144:
            case 524288:
            case 1048576:
            case 2097152:
            case 4194304:
            case 8388608:
            case 16777216:
            case 33554432:
            case 67108864:
              f2 = 32;
              break;
            case 536870912:
              f2 = 268435456;
              break;
            default:
              f2 = 0;
          }
          d2 = (f2 & (d2.suspendedLanes | c2)) !== 0 ? 0 : f2;
          d2 !== 0 && d2 !== e2.retryLane && (e2.retryLane = d2, Jg(a2, d2, -1));
        }
        Hi();
        b2 = Gi(a2, b2, c2);
      } else
        h2.data === "$?" ? (b2.flags |= 128, b2.child = a2.child, b2 = Ii.bind(null, a2), h2._reactRetry = b2, b2 = null) : (kh = Mf(h2.nextSibling), qh(b2), lh = true, b2 = Ei(b2, b2.pendingProps.children, c2), b2.flags |= 2048);
      return b2;
    }
    if (f2)
      return d2 = Ji(a2, b2, d2.children, d2.fallback, c2), f2 = b2.child, e2 = a2.child.memoizedState, f2.memoizedState = e2 === null ? Bi(c2) : { baseLanes: e2.baseLanes | c2, cachePool: null }, f2.childLanes = a2.childLanes & ~c2, b2.memoizedState = Ai, d2;
    c2 = Ki(a2, b2, d2.children, c2);
    b2.memoizedState = null;
    return c2;
  }
  if (f2)
    return d2 = Ji(a2, b2, d2.children, d2.fallback, c2), f2 = b2.child, e2 = a2.child.memoizedState, f2.memoizedState = e2 === null ? Bi(c2) : { baseLanes: e2.baseLanes | c2, cachePool: null }, f2.childLanes = a2.childLanes & ~c2, b2.memoizedState = Ai, d2;
  c2 = Ki(a2, b2, d2.children, c2);
  b2.memoizedState = null;
  return c2;
}
function Ei(a2, b2, c2) {
  b2 = Fi({ mode: "visible", children: b2 }, a2.mode, c2, null);
  b2.return = a2;
  return a2.child = b2;
}
function Di(a2, b2, c2, d2) {
  var e2 = a2.mode, f2 = a2.child;
  b2 = { mode: "hidden", children: b2 };
  (e2 & 1) === 0 && f2 !== null ? (f2.childLanes = 0, f2.pendingProps = b2) : f2 = Fi(b2, e2, 0, null);
  c2 = Xg(c2, e2, d2, null);
  f2.return = a2;
  c2.return = a2;
  f2.sibling = c2;
  a2.child = f2;
  return c2;
}
function Ki(a2, b2, c2, d2) {
  var e2 = a2.child;
  a2 = e2.sibling;
  c2 = Tg(e2, { mode: "visible", children: c2 });
  (b2.mode & 1) === 0 && (c2.lanes = d2);
  c2.return = b2;
  c2.sibling = null;
  a2 !== null && (d2 = b2.deletions, d2 === null ? (b2.deletions = [a2], b2.flags |= 16) : d2.push(a2));
  return b2.child = c2;
}
function Ji(a2, b2, c2, d2, e2) {
  var f2 = b2.mode;
  a2 = a2.child;
  var g2 = a2.sibling, h2 = { mode: "hidden", children: c2 };
  (f2 & 1) === 0 && b2.child !== a2 ? (c2 = b2.child, c2.childLanes = 0, c2.pendingProps = h2, b2.deletions = null) : (c2 = Tg(a2, h2), c2.subtreeFlags = a2.subtreeFlags & 1835008);
  g2 !== null ? d2 = Tg(g2, d2) : (d2 = Xg(d2, f2, e2, null), d2.flags |= 2);
  d2.return = b2;
  c2.return = b2;
  c2.sibling = d2;
  b2.child = c2;
  return d2;
}
function Gi(a2, b2, c2) {
  Yg(b2, a2.child, null, c2);
  a2 = Ei(b2, b2.pendingProps.children, c2);
  a2.flags |= 2;
  b2.memoizedState = null;
  return a2;
}
function Li(a2, b2) {
  a2.lanes |= b2;
  var c2 = a2.alternate;
  c2 !== null && (c2.lanes |= b2);
  qg(a2.return, b2);
}
function Mi(a2, b2, c2, d2, e2) {
  var f2 = a2.memoizedState;
  f2 === null ? a2.memoizedState = { isBackwards: b2, rendering: null, renderingStartTime: 0, last: d2, tail: c2, tailMode: e2 } : (f2.isBackwards = b2, f2.rendering = null, f2.renderingStartTime = 0, f2.last = d2, f2.tail = c2, f2.tailMode = e2);
}
function Ni(a2, b2, c2) {
  var d2 = b2.pendingProps, e2 = d2.revealOrder, f2 = d2.tail;
  mi(a2, b2, d2.children, c2);
  d2 = O.current;
  if ((d2 & 2) !== 0)
    d2 = d2 & 1 | 2, b2.flags |= 128;
  else {
    if (a2 !== null && (a2.flags & 128) !== 0)
      a:
        for (a2 = b2.child; a2 !== null; ) {
          if (a2.tag === 13)
            a2.memoizedState !== null && Li(a2, c2);
          else if (a2.tag === 19)
            Li(a2, c2);
          else if (a2.child !== null) {
            a2.child.return = a2;
            a2 = a2.child;
            continue;
          }
          if (a2 === b2)
            break a;
          for (; a2.sibling === null; ) {
            if (a2.return === null || a2.return === b2)
              break a;
            a2 = a2.return;
          }
          a2.sibling.return = a2.return;
          a2 = a2.sibling;
        }
    d2 &= 1;
  }
  H(O, d2);
  if ((b2.mode & 1) === 0)
    b2.memoizedState = null;
  else
    switch (e2) {
      case "forwards":
        c2 = b2.child;
        for (e2 = null; c2 !== null; )
          a2 = c2.alternate, a2 !== null && ih(a2) === null && (e2 = c2), c2 = c2.sibling;
        c2 = e2;
        c2 === null ? (e2 = b2.child, b2.child = null) : (e2 = c2.sibling, c2.sibling = null);
        Mi(b2, false, e2, c2, f2);
        break;
      case "backwards":
        c2 = null;
        e2 = b2.child;
        for (b2.child = null; e2 !== null; ) {
          a2 = e2.alternate;
          if (a2 !== null && ih(a2) === null) {
            b2.child = e2;
            break;
          }
          a2 = e2.sibling;
          e2.sibling = c2;
          c2 = e2;
          e2 = a2;
        }
        Mi(b2, true, c2, null, f2);
        break;
      case "together":
        Mi(b2, false, null, null, void 0);
        break;
      default:
        b2.memoizedState = null;
    }
  return b2.child;
}
function oi(a2, b2, c2) {
  a2 !== null && (b2.dependencies = a2.dependencies);
  Dg |= b2.lanes;
  if ((c2 & b2.childLanes) === 0)
    return null;
  if (a2 !== null && b2.child !== a2.child)
    throw Error(v(153));
  if (b2.child !== null) {
    a2 = b2.child;
    c2 = Tg(a2, a2.pendingProps);
    b2.child = c2;
    for (c2.return = b2; a2.sibling !== null; )
      a2 = a2.sibling, c2 = c2.sibling = Tg(a2, a2.pendingProps), c2.return = b2;
    c2.sibling = null;
  }
  return b2.child;
}
var Oi, Pi, Qi, Ri;
Oi = function(a2, b2) {
  for (var c2 = b2.child; c2 !== null; ) {
    if (c2.tag === 5 || c2.tag === 6)
      a2.appendChild(c2.stateNode);
    else if (c2.tag !== 4 && c2.child !== null) {
      c2.child.return = c2;
      c2 = c2.child;
      continue;
    }
    if (c2 === b2)
      break;
    for (; c2.sibling === null; ) {
      if (c2.return === null || c2.return === b2)
        return;
      c2 = c2.return;
    }
    c2.sibling.return = c2.return;
    c2 = c2.sibling;
  }
};
Pi = function() {
};
Qi = function(a2, b2, c2, d2) {
  var e2 = a2.memoizedProps;
  if (e2 !== d2) {
    a2 = b2.stateNode;
    dh(ah.current);
    var f2 = null;
    switch (c2) {
      case "input":
        e2 = $a(a2, e2);
        d2 = $a(a2, d2);
        f2 = [];
        break;
      case "select":
        e2 = p$1({}, e2, { value: void 0 });
        d2 = p$1({}, d2, { value: void 0 });
        f2 = [];
        break;
      case "textarea":
        e2 = hb(a2, e2);
        d2 = hb(a2, d2);
        f2 = [];
        break;
      default:
        typeof e2.onClick !== "function" && typeof d2.onClick === "function" && (a2.onclick = Bf);
    }
    vb(c2, d2);
    var g2;
    c2 = null;
    for (l2 in e2)
      if (!d2.hasOwnProperty(l2) && e2.hasOwnProperty(l2) && e2[l2] != null)
        if (l2 === "style") {
          var h2 = e2[l2];
          for (g2 in h2)
            h2.hasOwnProperty(g2) && (c2 || (c2 = {}), c2[g2] = "");
        } else
          l2 !== "dangerouslySetInnerHTML" && l2 !== "children" && l2 !== "suppressContentEditableWarning" && l2 !== "suppressHydrationWarning" && l2 !== "autoFocus" && (da.hasOwnProperty(l2) ? f2 || (f2 = []) : (f2 = f2 || []).push(l2, null));
    for (l2 in d2) {
      var k2 = d2[l2];
      h2 = e2 != null ? e2[l2] : void 0;
      if (d2.hasOwnProperty(l2) && k2 !== h2 && (k2 != null || h2 != null))
        if (l2 === "style")
          if (h2) {
            for (g2 in h2)
              !h2.hasOwnProperty(g2) || k2 && k2.hasOwnProperty(g2) || (c2 || (c2 = {}), c2[g2] = "");
            for (g2 in k2)
              k2.hasOwnProperty(g2) && h2[g2] !== k2[g2] && (c2 || (c2 = {}), c2[g2] = k2[g2]);
          } else
            c2 || (f2 || (f2 = []), f2.push(l2, c2)), c2 = k2;
        else
          l2 === "dangerouslySetInnerHTML" ? (k2 = k2 ? k2.__html : void 0, h2 = h2 ? h2.__html : void 0, k2 != null && h2 !== k2 && (f2 = f2 || []).push(l2, k2)) : l2 === "children" ? typeof k2 !== "string" && typeof k2 !== "number" || (f2 = f2 || []).push(l2, "" + k2) : l2 !== "suppressContentEditableWarning" && l2 !== "suppressHydrationWarning" && (da.hasOwnProperty(l2) ? (k2 != null && l2 === "onScroll" && F("scroll", a2), f2 || h2 === k2 || (f2 = [])) : typeof k2 === "object" && k2 !== null && k2.$$typeof === Ga ? k2.toString() : (f2 = f2 || []).push(l2, k2));
    }
    c2 && (f2 = f2 || []).push("style", c2);
    var l2 = f2;
    if (b2.updateQueue = l2)
      b2.flags |= 4;
  }
};
Ri = function(a2, b2, c2, d2) {
  c2 !== d2 && (b2.flags |= 4);
};
function Si(a2, b2) {
  if (!lh)
    switch (a2.tailMode) {
      case "hidden":
        b2 = a2.tail;
        for (var c2 = null; b2 !== null; )
          b2.alternate !== null && (c2 = b2), b2 = b2.sibling;
        c2 === null ? a2.tail = null : c2.sibling = null;
        break;
      case "collapsed":
        c2 = a2.tail;
        for (var d2 = null; c2 !== null; )
          c2.alternate !== null && (d2 = c2), c2 = c2.sibling;
        d2 === null ? b2 || a2.tail === null ? a2.tail = null : a2.tail.sibling = null : d2.sibling = null;
    }
}
function T(a2) {
  var b2 = a2.alternate !== null && a2.alternate.child === a2.child, c2 = 0, d2 = 0;
  if (b2)
    for (var e2 = a2.child; e2 !== null; )
      c2 |= e2.lanes | e2.childLanes, d2 |= e2.subtreeFlags & 1835008, d2 |= e2.flags & 1835008, e2.return = a2, e2 = e2.sibling;
  else
    for (e2 = a2.child; e2 !== null; )
      c2 |= e2.lanes | e2.childLanes, d2 |= e2.subtreeFlags, d2 |= e2.flags, e2.return = a2, e2 = e2.sibling;
  a2.subtreeFlags |= d2;
  a2.childLanes = c2;
  return b2;
}
function Ti(a2, b2, c2) {
  var d2 = b2.pendingProps;
  switch (b2.tag) {
    case 2:
    case 16:
    case 15:
    case 0:
    case 11:
    case 7:
    case 8:
    case 12:
    case 9:
    case 14:
      return T(b2), null;
    case 1:
      return Zf(b2.type) && $f(), T(b2), null;
    case 3:
      d2 = b2.stateNode;
      fh();
      G(K);
      G(J);
      uh();
      d2.pendingContext && (d2.context = d2.pendingContext, d2.pendingContext = null);
      if (a2 === null || a2.child === null)
        rh(b2) ? b2.flags |= 4 : d2.hydrate || (b2.flags |= 512);
      Pi(a2, b2);
      T(b2);
      return null;
    case 5:
      hh(b2);
      var e2 = dh(ch.current);
      c2 = b2.type;
      if (a2 !== null && b2.stateNode != null)
        Qi(a2, b2, c2, d2, e2), a2.ref !== b2.ref && (b2.flags |= 256, b2.flags |= 262144);
      else {
        if (!d2) {
          if (b2.stateNode === null)
            throw Error(v(166));
          T(b2);
          return null;
        }
        a2 = dh(ah.current);
        if (rh(b2)) {
          d2 = b2.stateNode;
          c2 = b2.type;
          var f2 = b2.memoizedProps;
          d2[Rf] = b2;
          d2[Sf] = f2;
          switch (c2) {
            case "dialog":
              F("cancel", d2);
              F("close", d2);
              break;
            case "iframe":
            case "object":
            case "embed":
              F("load", d2);
              break;
            case "video":
            case "audio":
              for (a2 = 0; a2 < pf.length; a2++)
                F(pf[a2], d2);
              break;
            case "source":
              F("error", d2);
              break;
            case "img":
            case "image":
            case "link":
              F("error", d2);
              F("load", d2);
              break;
            case "details":
              F("toggle", d2);
              break;
            case "input":
              ab(d2, f2);
              F("invalid", d2);
              break;
            case "select":
              d2._wrapperState = { wasMultiple: !!f2.multiple };
              F("invalid", d2);
              break;
            case "textarea":
              ib(d2, f2), F("invalid", d2);
          }
          vb(c2, f2);
          a2 = null;
          for (var g2 in f2)
            f2.hasOwnProperty(g2) && (e2 = f2[g2], g2 === "children" ? typeof e2 === "string" ? d2.textContent !== e2 && (a2 = ["children", e2]) : typeof e2 === "number" && d2.textContent !== "" + e2 && (a2 = ["children", "" + e2]) : da.hasOwnProperty(g2) && e2 != null && g2 === "onScroll" && F("scroll", d2));
          switch (c2) {
            case "input":
              Xa(d2);
              eb(d2, f2, true);
              break;
            case "textarea":
              Xa(d2);
              kb(d2);
              break;
            case "select":
            case "option":
              break;
            default:
              typeof f2.onClick === "function" && (d2.onclick = Bf);
          }
          d2 = a2;
          b2.updateQueue = d2;
          d2 !== null && (b2.flags |= 4);
        } else {
          g2 = e2.nodeType === 9 ? e2 : e2.ownerDocument;
          a2 === "http://www.w3.org/1999/xhtml" && (a2 = lb(c2));
          a2 === "http://www.w3.org/1999/xhtml" ? c2 === "script" ? (a2 = g2.createElement("div"), a2.innerHTML = "<script><\/script>", a2 = a2.removeChild(a2.firstChild)) : typeof d2.is === "string" ? a2 = g2.createElement(c2, { is: d2.is }) : (a2 = g2.createElement(c2), c2 === "select" && (g2 = a2, d2.multiple ? g2.multiple = true : d2.size && (g2.size = d2.size))) : a2 = g2.createElementNS(a2, c2);
          a2[Rf] = b2;
          a2[Sf] = d2;
          Oi(a2, b2, false, false);
          b2.stateNode = a2;
          g2 = wb(c2, d2);
          switch (c2) {
            case "dialog":
              F("cancel", a2);
              F("close", a2);
              e2 = d2;
              break;
            case "iframe":
            case "object":
            case "embed":
              F("load", a2);
              e2 = d2;
              break;
            case "video":
            case "audio":
              for (e2 = 0; e2 < pf.length; e2++)
                F(pf[e2], a2);
              e2 = d2;
              break;
            case "source":
              F("error", a2);
              e2 = d2;
              break;
            case "img":
            case "image":
            case "link":
              F("error", a2);
              F("load", a2);
              e2 = d2;
              break;
            case "details":
              F("toggle", a2);
              e2 = d2;
              break;
            case "input":
              ab(a2, d2);
              e2 = $a(a2, d2);
              F("invalid", a2);
              break;
            case "option":
              e2 = d2;
              break;
            case "select":
              a2._wrapperState = { wasMultiple: !!d2.multiple };
              e2 = p$1({}, d2, { value: void 0 });
              F("invalid", a2);
              break;
            case "textarea":
              ib(a2, d2);
              e2 = hb(a2, d2);
              F("invalid", a2);
              break;
            default:
              e2 = d2;
          }
          vb(c2, e2);
          var h2 = e2;
          for (f2 in h2)
            if (h2.hasOwnProperty(f2)) {
              var k2 = h2[f2];
              f2 === "style" ? tb(a2, k2) : f2 === "dangerouslySetInnerHTML" ? (k2 = k2 ? k2.__html : void 0, k2 != null && ob(a2, k2)) : f2 === "children" ? typeof k2 === "string" ? (c2 !== "textarea" || k2 !== "") && pb(a2, k2) : typeof k2 === "number" && pb(a2, "" + k2) : f2 !== "suppressContentEditableWarning" && f2 !== "suppressHydrationWarning" && f2 !== "autoFocus" && (da.hasOwnProperty(f2) ? k2 != null && f2 === "onScroll" && F("scroll", a2) : k2 != null && sa(a2, f2, k2, g2));
            }
          switch (c2) {
            case "input":
              Xa(a2);
              eb(a2, d2, false);
              break;
            case "textarea":
              Xa(a2);
              kb(a2);
              break;
            case "option":
              d2.value != null && a2.setAttribute("value", "" + Ua(d2.value));
              break;
            case "select":
              a2.multiple = !!d2.multiple;
              f2 = d2.value;
              f2 != null ? gb(a2, !!d2.multiple, f2, false) : d2.defaultValue != null && gb(a2, !!d2.multiple, d2.defaultValue, true);
              break;
            default:
              typeof e2.onClick === "function" && (a2.onclick = Bf);
          }
          Ef(c2, d2) && (b2.flags |= 4);
        }
        b2.ref !== null && (b2.flags |= 256, b2.flags |= 262144);
      }
      T(b2);
      return null;
    case 6:
      if (a2 && b2.stateNode != null)
        Ri(a2, b2, a2.memoizedProps, d2);
      else {
        if (typeof d2 !== "string" && b2.stateNode === null)
          throw Error(v(166));
        c2 = dh(ch.current);
        dh(ah.current);
        rh(b2) ? (d2 = b2.stateNode, c2 = b2.memoizedProps, d2[Rf] = b2, d2.nodeValue !== c2 && (b2.flags |= 4)) : (d2 = (c2.nodeType === 9 ? c2 : c2.ownerDocument).createTextNode(d2), d2[Rf] = b2, b2.stateNode = d2);
      }
      T(b2);
      return null;
    case 13:
      G(O);
      d2 = b2.memoizedState;
      if (d2 !== null && d2.dehydrated !== null) {
        if (a2 === null) {
          if (!rh(b2))
            throw Error(v(318));
          d2 = b2.memoizedState;
          d2 = d2 !== null ? d2.dehydrated : null;
          if (!d2)
            throw Error(v(317));
          d2[Rf] = b2;
        } else
          sh(), (b2.flags & 128) === 0 && (b2.memoizedState = null), b2.flags |= 4;
        T(b2);
        return null;
      }
      if ((b2.flags & 128) !== 0)
        return b2.lanes = c2, b2;
      d2 = d2 !== null;
      c2 = false;
      a2 === null ? b2.memoizedProps.fallback !== void 0 && rh(b2) : c2 = a2.memoizedState !== null;
      d2 && !c2 && (b2.mode & 1) !== 0 && (a2 === null && b2.memoizedProps.unstable_avoidThisFallback !== true || (O.current & 1) !== 0 ? U === 0 && (U = 3) : Hi());
      if (d2 || c2)
        b2.flags |= 4;
      T(b2);
      return null;
    case 4:
      return fh(), Pi(a2, b2), a2 === null && wf(b2.stateNode.containerInfo), T(b2), null;
    case 10:
      return pg(b2.type._context), T(b2), null;
    case 17:
      return Zf(b2.type) && $f(), T(b2), null;
    case 19:
      G(O);
      f2 = b2.memoizedState;
      if (f2 === null)
        return T(b2), null;
      d2 = (b2.flags & 128) !== 0;
      g2 = f2.rendering;
      if (g2 === null)
        if (d2)
          Si(f2, false);
        else {
          if (U !== 0 || a2 !== null && (a2.flags & 128) !== 0)
            for (a2 = b2.child; a2 !== null; ) {
              g2 = ih(a2);
              if (g2 !== null) {
                b2.flags |= 128;
                Si(f2, false);
                d2 = g2.updateQueue;
                d2 !== null && (b2.updateQueue = d2, b2.flags |= 4);
                b2.subtreeFlags = 0;
                d2 = c2;
                for (c2 = b2.child; c2 !== null; )
                  f2 = c2, a2 = d2, f2.flags &= 1835010, g2 = f2.alternate, g2 === null ? (f2.childLanes = 0, f2.lanes = a2, f2.child = null, f2.subtreeFlags = 0, f2.memoizedProps = null, f2.memoizedState = null, f2.updateQueue = null, f2.dependencies = null, f2.stateNode = null) : (f2.childLanes = g2.childLanes, f2.lanes = g2.lanes, f2.child = g2.child, f2.subtreeFlags = 0, f2.deletions = null, f2.memoizedProps = g2.memoizedProps, f2.memoizedState = g2.memoizedState, f2.updateQueue = g2.updateQueue, f2.type = g2.type, a2 = g2.dependencies, f2.dependencies = a2 === null ? null : { lanes: a2.lanes, firstContext: a2.firstContext }), c2 = c2.sibling;
                H(O, O.current & 1 | 2);
                return b2.child;
              }
              a2 = a2.sibling;
            }
          f2.tail !== null && D() > Ui && (b2.flags |= 128, d2 = true, Si(f2, false), b2.lanes = 4194304);
        }
      else {
        if (!d2)
          if (a2 = ih(g2), a2 !== null) {
            if (b2.flags |= 128, d2 = true, c2 = a2.updateQueue, c2 !== null && (b2.updateQueue = c2, b2.flags |= 4), Si(f2, true), f2.tail === null && f2.tailMode === "hidden" && !g2.alternate && !lh)
              return T(b2), null;
          } else
            2 * D() - f2.renderingStartTime > Ui && c2 !== 1073741824 && (b2.flags |= 128, d2 = true, Si(f2, false), b2.lanes = 4194304);
        f2.isBackwards ? (g2.sibling = b2.child, b2.child = g2) : (c2 = f2.last, c2 !== null ? c2.sibling = g2 : b2.child = g2, f2.last = g2);
      }
      if (f2.tail !== null)
        return b2 = f2.tail, f2.rendering = b2, f2.tail = b2.sibling, f2.renderingStartTime = D(), b2.sibling = null, c2 = O.current, H(O, d2 ? c2 & 1 | 2 : c2 & 1), b2;
      T(b2);
      return null;
    case 22:
    case 23:
      return Vi(), c2 = b2.memoizedState !== null, a2 !== null && a2.memoizedState !== null !== c2 && d2.mode !== "unstable-defer-without-hiding" && (b2.flags |= 4), c2 && (vi & 1073741824) === 0 && (b2.mode & 1) !== 0 || T(b2), null;
  }
  throw Error(v(156, b2.tag));
}
function Wi(a2) {
  switch (a2.tag) {
    case 1:
      Zf(a2.type) && $f();
      var b2 = a2.flags;
      return b2 & 16384 ? (a2.flags = b2 & -16385 | 128, a2) : null;
    case 3:
      fh();
      G(K);
      G(J);
      uh();
      b2 = a2.flags;
      if ((b2 & 128) !== 0)
        throw Error(v(285));
      a2.flags = b2 & -16385 | 128;
      return a2;
    case 5:
      return hh(a2), null;
    case 13:
      G(O);
      b2 = a2.memoizedState;
      if (b2 !== null && b2.dehydrated !== null) {
        if (a2.alternate === null)
          throw Error(v(340));
        sh();
      }
      b2 = a2.flags;
      return b2 & 16384 ? (a2.flags = b2 & -16385 | 128, a2) : null;
    case 19:
      return G(O), null;
    case 4:
      return fh(), null;
    case 10:
      return pg(a2.type._context), null;
    case 22:
    case 23:
      return Vi(), null;
    case 24:
      return null;
    default:
      return null;
  }
}
var Xi = false, Yi = false, Zi = typeof WeakSet === "function" ? WeakSet : Set, V = null;
function $i(a2, b2) {
  var c2 = a2.ref;
  if (c2 !== null)
    if (typeof c2 === "function")
      try {
        c2(null);
      } catch (d2) {
        aj(a2, b2, d2);
      }
    else
      c2.current = null;
}
var bj = null, cj = false;
function dj(a2, b2) {
  Cf = id$1;
  a2 = Qe();
  if (Re(a2)) {
    if ("selectionStart" in a2)
      var c2 = { start: a2.selectionStart, end: a2.selectionEnd };
    else
      a: {
        c2 = (c2 = a2.ownerDocument) && c2.defaultView || window;
        var d2 = c2.getSelection && c2.getSelection();
        if (d2 && d2.rangeCount !== 0) {
          c2 = d2.anchorNode;
          var e2 = d2.anchorOffset, f2 = d2.focusNode;
          d2 = d2.focusOffset;
          try {
            c2.nodeType, f2.nodeType;
          } catch (ha2) {
            c2 = null;
            break a;
          }
          var g2 = 0, h2 = -1, k2 = -1, l2 = 0, m2 = 0, w2 = a2, t2 = null;
          b:
            for (; ; ) {
              for (var q2; ; ) {
                w2 !== c2 || e2 !== 0 && w2.nodeType !== 3 || (h2 = g2 + e2);
                w2 !== f2 || d2 !== 0 && w2.nodeType !== 3 || (k2 = g2 + d2);
                w2.nodeType === 3 && (g2 += w2.nodeValue.length);
                if ((q2 = w2.firstChild) === null)
                  break;
                t2 = w2;
                w2 = q2;
              }
              for (; ; ) {
                if (w2 === a2)
                  break b;
                t2 === c2 && ++l2 === e2 && (h2 = g2);
                t2 === f2 && ++m2 === d2 && (k2 = g2);
                if ((q2 = w2.nextSibling) !== null)
                  break;
                w2 = t2;
                t2 = w2.parentNode;
              }
              w2 = q2;
            }
          c2 = h2 === -1 || k2 === -1 ? null : { start: h2, end: k2 };
        } else
          c2 = null;
      }
    c2 = c2 || { start: 0, end: 0 };
  } else
    c2 = null;
  Df = { focusedElem: a2, selectionRange: c2 };
  id$1 = false;
  bj = null;
  for (V = b2; V !== null; ) {
    b2 = V;
    a2 = b2.deletions;
    if (a2 !== null)
      for (c2 = 0; c2 < a2.length; c2++)
        ec(a2[c2], bj) && (cj = true);
    a2 = b2.child;
    if ((b2.subtreeFlags & 516) !== 0 && a2 !== null)
      a2.return = b2, V = a2;
    else
      for (; V !== null; ) {
        b2 = V;
        try {
          var n2 = b2.alternate, x2 = b2.flags;
          if (!cj && bj !== null) {
            var I2;
            if (I2 = b2.tag === 13)
              a: {
                if (n2 !== null) {
                  var z2 = n2.memoizedState;
                  if (z2 === null || z2.dehydrated !== null) {
                    var r2 = b2.memoizedState;
                    I2 = r2 !== null && r2.dehydrated === null;
                    break a;
                  }
                }
                I2 = false;
              }
            I2 && ec(b2, bj) && (cj = true);
          }
          if ((x2 & 512) !== 0)
            switch (b2.tag) {
              case 0:
              case 11:
              case 15:
                break;
              case 1:
                if (n2 !== null) {
                  var u2 = n2.memoizedProps, B2 = n2.memoizedState, S2 = b2.stateNode, W2 = S2.getSnapshotBeforeUpdate(b2.elementType === b2.type ? u2 : jg(b2.type, u2), B2);
                  S2.__reactInternalSnapshotBeforeUpdate = W2;
                }
                break;
              case 3:
                Lf(b2.stateNode.containerInfo);
                break;
              case 5:
              case 6:
              case 4:
              case 17:
                break;
              default:
                throw Error(v(163));
            }
        } catch (ha2) {
          aj(b2, b2.return, ha2);
        }
        a2 = b2.sibling;
        if (a2 !== null) {
          a2.return = b2.return;
          V = a2;
          break;
        }
        V = b2.return;
      }
  }
  n2 = cj;
  cj = false;
  bj = null;
  return n2;
}
function ej(a2, b2, c2) {
  var d2 = b2.updateQueue;
  d2 = d2 !== null ? d2.lastEffect : null;
  if (d2 !== null) {
    var e2 = d2 = d2.next;
    do {
      if ((e2.tag & a2) === a2) {
        var f2 = e2.destroy;
        e2.destroy = void 0;
        if (f2 !== void 0) {
          var g2 = b2, h2 = c2;
          try {
            f2();
          } catch (k2) {
            aj(g2, h2, k2);
          }
        }
      }
      e2 = e2.next;
    } while (e2 !== d2);
  }
}
function fj(a2, b2) {
  b2 = b2.updateQueue;
  b2 = b2 !== null ? b2.lastEffect : null;
  if (b2 !== null) {
    var c2 = b2 = b2.next;
    do {
      if ((c2.tag & a2) === a2) {
        var d2 = c2.create;
        c2.destroy = d2();
      }
      c2 = c2.next;
    } while (c2 !== b2);
  }
}
function gj(a2, b2) {
  var c2 = (a2.mode & 1) !== 0, d2 = a2.alternate;
  d2 = d2 !== null && d2.memoizedState !== null;
  for (var e2 = null, f2 = a2; ; ) {
    if (f2.tag === 5) {
      if (e2 === null) {
        e2 = f2;
        var g2 = f2.stateNode;
        if (b2)
          g2 = g2.style, typeof g2.setProperty === "function" ? g2.setProperty("display", "none", "important") : g2.display = "none";
        else {
          g2 = f2.stateNode;
          var h2 = f2.memoizedProps.style;
          h2 = h2 !== void 0 && h2 !== null && h2.hasOwnProperty("display") ? h2.display : null;
          g2.style.display = sb("display", h2);
        }
      }
      if (c2 && (b2 && $i(f2, a2), f2.child !== null)) {
        f2.child.return = f2;
        f2 = f2.child;
        continue;
      }
    } else if (f2.tag === 6)
      e2 === null && (f2.stateNode.nodeValue = b2 ? "" : f2.memoizedProps);
    else if (f2.tag !== 22 && f2.tag !== 23 || f2.memoizedState === null || f2 === a2) {
      if (c2)
        switch (f2.tag) {
          case 0:
          case 11:
          case 14:
          case 15:
            b2 && !d2 && ej(2, f2, a2);
            break;
          case 1:
            if (b2 && !d2 && ($i(f2, a2), g2 = f2.stateNode, typeof g2.componentWillUnmount === "function")) {
              h2 = f2;
              var k2 = a2;
              try {
                var l2 = h2;
                g2.props = l2.memoizedProps;
                g2.state = l2.memoizedState;
                g2.componentWillUnmount();
              } catch (m2) {
                aj(h2, k2, m2);
              }
            }
        }
      if (f2.child !== null) {
        f2.child.return = f2;
        f2 = f2.child;
        continue;
      }
    }
    if (f2 === a2)
      break;
    for (; f2.sibling === null; ) {
      if (f2.return === null || f2.return === a2)
        return;
      e2 === f2 && (e2 = null);
      f2 = f2.return;
    }
    e2 === f2 && (e2 = null);
    f2.sibling.return = f2.return;
    f2 = f2.sibling;
  }
}
function hj(a2) {
  var b2 = a2.ref;
  if (b2 !== null) {
    var c2 = a2.stateNode;
    switch (a2.tag) {
      case 5:
        a2 = c2;
        break;
      default:
        a2 = c2;
    }
    typeof b2 === "function" ? b2(a2) : b2.current = a2;
  }
}
function ij(a2, b2, c2) {
  if (qc && typeof qc.onCommitFiberUnmount === "function")
    try {
      qc.onCommitFiberUnmount(pc, b2);
    } catch (h2) {
    }
  switch (b2.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
      a2 = b2.updateQueue;
      if (a2 !== null && (a2 = a2.lastEffect, a2 !== null)) {
        var d2 = a2 = a2.next;
        do {
          var e2 = d2, f2 = e2.destroy;
          e2 = e2.tag;
          if (f2 !== void 0 && (e2 & 2) !== 0) {
            e2 = b2;
            var g2 = c2;
            try {
              f2();
            } catch (h2) {
              aj(e2, g2, h2);
            }
          }
          d2 = d2.next;
        } while (d2 !== a2);
      }
      break;
    case 1:
      $i(b2, c2);
      a2 = b2.stateNode;
      if (typeof a2.componentWillUnmount === "function")
        try {
          a2.props = b2.memoizedProps, a2.state = b2.memoizedState, a2.componentWillUnmount();
        } catch (h2) {
          aj(b2, c2, h2);
        }
      break;
    case 5:
      $i(b2, c2);
      break;
    case 4:
      jj(a2, b2, c2);
  }
}
function kj(a2) {
  var b2 = a2.alternate;
  b2 !== null && (a2.alternate = null, kj(b2));
  a2.child = null;
  a2.deletions = null;
  a2.dependencies = null;
  a2.memoizedProps = null;
  a2.memoizedState = null;
  a2.pendingProps = null;
  a2.sibling = null;
  a2.stateNode = null;
  a2.updateQueue = null;
}
function lj(a2) {
  return a2.tag === 5 || a2.tag === 3 || a2.tag === 4;
}
function mj(a2) {
  a: {
    for (var b2 = a2.return; b2 !== null; ) {
      if (lj(b2))
        break a;
      b2 = b2.return;
    }
    throw Error(v(160));
  }
  var c2 = b2;
  b2 = c2.stateNode;
  switch (c2.tag) {
    case 5:
      var d2 = false;
      break;
    case 3:
      b2 = b2.containerInfo;
      d2 = true;
      break;
    case 4:
      b2 = b2.containerInfo;
      d2 = true;
      break;
    default:
      throw Error(v(161));
  }
  c2.flags & 32 && (pb(b2, ""), c2.flags &= -33);
  a:
    b:
      for (c2 = a2; ; ) {
        for (; c2.sibling === null; ) {
          if (c2.return === null || lj(c2.return)) {
            c2 = null;
            break a;
          }
          c2 = c2.return;
        }
        c2.sibling.return = c2.return;
        for (c2 = c2.sibling; c2.tag !== 5 && c2.tag !== 6 && c2.tag !== 18; ) {
          if (c2.flags & 2)
            continue b;
          if (c2.child === null || c2.tag === 4)
            continue b;
          else
            c2.child.return = c2, c2 = c2.child;
        }
        if (!(c2.flags & 2)) {
          c2 = c2.stateNode;
          break a;
        }
      }
  d2 ? nj(a2, c2, b2) : oj(a2, c2, b2);
}
function nj(a2, b2, c2) {
  var d2 = a2.tag;
  if (d2 === 5 || d2 === 6)
    a2 = a2.stateNode, b2 ? c2.nodeType === 8 ? c2.parentNode.insertBefore(a2, b2) : c2.insertBefore(a2, b2) : (c2.nodeType === 8 ? (b2 = c2.parentNode, b2.insertBefore(a2, c2)) : (b2 = c2, b2.appendChild(a2)), c2 = c2._reactRootContainer, c2 !== null && c2 !== void 0 || b2.onclick !== null || (b2.onclick = Bf));
  else if (d2 !== 4 && (a2 = a2.child, a2 !== null))
    for (nj(a2, b2, c2), a2 = a2.sibling; a2 !== null; )
      nj(a2, b2, c2), a2 = a2.sibling;
}
function oj(a2, b2, c2) {
  var d2 = a2.tag;
  if (d2 === 5 || d2 === 6)
    a2 = a2.stateNode, b2 ? c2.insertBefore(a2, b2) : c2.appendChild(a2);
  else if (d2 !== 4 && (a2 = a2.child, a2 !== null))
    for (oj(a2, b2, c2), a2 = a2.sibling; a2 !== null; )
      oj(a2, b2, c2), a2 = a2.sibling;
}
function jj(a2, b2, c2) {
  for (var d2 = b2, e2 = false, f2, g2; ; ) {
    if (!e2) {
      e2 = d2.return;
      a:
        for (; ; ) {
          if (e2 === null)
            throw Error(v(160));
          f2 = e2.stateNode;
          switch (e2.tag) {
            case 5:
              g2 = false;
              break a;
            case 3:
              f2 = f2.containerInfo;
              g2 = true;
              break a;
            case 4:
              f2 = f2.containerInfo;
              g2 = true;
              break a;
          }
          e2 = e2.return;
        }
      e2 = true;
    }
    if (d2.tag === 5 || d2.tag === 6) {
      a:
        for (var h2 = a2, k2 = d2, l2 = c2, m2 = k2; ; )
          if (ij(h2, m2, l2), m2.child !== null && m2.tag !== 4)
            m2.child.return = m2, m2 = m2.child;
          else {
            if (m2 === k2)
              break a;
            for (; m2.sibling === null; ) {
              if (m2.return === null || m2.return === k2)
                break a;
              m2 = m2.return;
            }
            m2.sibling.return = m2.return;
            m2 = m2.sibling;
          }
      g2 ? (h2 = f2, k2 = d2.stateNode, h2.nodeType === 8 ? h2.parentNode.removeChild(k2) : h2.removeChild(k2)) : f2.removeChild(d2.stateNode);
    } else if (d2.tag === 18)
      g2 ? (h2 = f2, k2 = d2.stateNode, h2.nodeType === 8 ? Kf(h2.parentNode, k2) : h2.nodeType === 1 && Kf(h2, k2), gd(h2)) : Kf(f2, d2.stateNode);
    else if (d2.tag === 4) {
      if (d2.child !== null) {
        f2 = d2.stateNode.containerInfo;
        g2 = true;
        d2.child.return = d2;
        d2 = d2.child;
        continue;
      }
    } else if (ij(a2, d2, c2), d2.child !== null) {
      d2.child.return = d2;
      d2 = d2.child;
      continue;
    }
    if (d2 === b2)
      break;
    for (; d2.sibling === null; ) {
      if (d2.return === null || d2.return === b2)
        return;
      d2 = d2.return;
      d2.tag === 4 && (e2 = false);
    }
    d2.sibling.return = d2.return;
    d2 = d2.sibling;
  }
}
function pj(a2, b2) {
  switch (b2.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
      ej(3, b2, b2.return);
      return;
    case 1:
      return;
    case 5:
      var c2 = b2.stateNode;
      if (c2 != null) {
        var d2 = b2.memoizedProps, e2 = a2 !== null ? a2.memoizedProps : d2;
        a2 = b2.type;
        var f2 = b2.updateQueue;
        b2.updateQueue = null;
        if (f2 !== null) {
          c2[Sf] = d2;
          a2 === "input" && d2.type === "radio" && d2.name != null && bb(c2, d2);
          wb(a2, e2);
          b2 = wb(a2, d2);
          for (e2 = 0; e2 < f2.length; e2 += 2) {
            var g2 = f2[e2], h2 = f2[e2 + 1];
            g2 === "style" ? tb(c2, h2) : g2 === "dangerouslySetInnerHTML" ? ob(c2, h2) : g2 === "children" ? pb(c2, h2) : sa(c2, g2, h2, b2);
          }
          switch (a2) {
            case "input":
              cb(c2, d2);
              break;
            case "textarea":
              jb(c2, d2);
              break;
            case "select":
              a2 = c2._wrapperState.wasMultiple, c2._wrapperState.wasMultiple = !!d2.multiple, f2 = d2.value, f2 != null ? gb(c2, !!d2.multiple, f2, false) : a2 !== !!d2.multiple && (d2.defaultValue != null ? gb(c2, !!d2.multiple, d2.defaultValue, true) : gb(c2, !!d2.multiple, d2.multiple ? [] : "", false));
          }
        }
      }
      return;
    case 6:
      if (b2.stateNode === null)
        throw Error(v(162));
      b2.stateNode.nodeValue = b2.memoizedProps;
      return;
    case 3:
      c2 = b2.stateNode;
      c2.hydrate && (c2.hydrate = false, gd(c2.containerInfo));
      return;
    case 12:
      return;
    case 13:
      b2.memoizedState !== null && (qj = D(), gj(b2.child, true));
      rj(b2);
      return;
    case 19:
      rj(b2);
      return;
    case 17:
      return;
    case 22:
    case 23:
      gj(b2, b2.memoizedState !== null);
      return;
  }
  throw Error(v(163));
}
function rj(a2) {
  var b2 = a2.updateQueue;
  if (b2 !== null) {
    a2.updateQueue = null;
    var c2 = a2.stateNode;
    c2 === null && (c2 = a2.stateNode = new Zi());
    b2.forEach(function(b3) {
      var d2 = sj.bind(null, a2, b3);
      c2.has(b3) || (c2.add(b3), b3.then(d2, d2));
    });
  }
}
function tj(a2, b2) {
  for (V = b2; V !== null; ) {
    b2 = V;
    var c2 = b2.deletions;
    if (c2 !== null)
      for (var d2 = 0; d2 < c2.length; d2++) {
        var e2 = c2[d2];
        try {
          jj(a2, e2, b2);
          var f2 = e2.alternate;
          f2 !== null && (f2.return = null);
          e2.return = null;
        } catch (l2) {
          aj(e2, b2, l2);
        }
      }
    c2 = b2.child;
    if ((b2.subtreeFlags & 6454) !== 0 && c2 !== null)
      c2.return = b2, V = c2;
    else
      for (; V !== null; ) {
        b2 = V;
        try {
          var g2 = b2.flags;
          g2 & 32 && pb(b2.stateNode, "");
          if (g2 & 256) {
            var h2 = b2.alternate;
            if (h2 !== null) {
              var k2 = h2.ref;
              k2 !== null && (typeof k2 === "function" ? k2(null) : k2.current = null);
            }
          }
          switch (g2 & 2054) {
            case 2:
              mj(b2);
              b2.flags &= -3;
              break;
            case 6:
              mj(b2);
              b2.flags &= -3;
              pj(b2.alternate, b2);
              break;
            case 2048:
              b2.flags &= -2049;
              break;
            case 2052:
              b2.flags &= -2049;
              pj(b2.alternate, b2);
              break;
            case 4:
              pj(b2.alternate, b2);
          }
        } catch (l2) {
          aj(b2, b2.return, l2);
        }
        c2 = b2.sibling;
        if (c2 !== null) {
          c2.return = b2.return;
          V = c2;
          break;
        }
        V = b2.return;
      }
  }
}
function uj(a2, b2, c2) {
  V = a2;
  vj(a2);
}
function vj(a2, b2, c2) {
  for (var d2 = (a2.mode & 1) !== 0; V !== null; ) {
    var e2 = V, f2 = e2.child;
    if (e2.tag === 22 && d2) {
      var g2 = e2.memoizedState !== null || Xi;
      if (g2) {
        wj(a2);
        continue;
      } else if ((e2.subtreeFlags & 324) !== 0) {
        var h2 = e2.alternate, k2 = h2 !== null && h2.memoizedState !== null || Yi;
        h2 = Xi;
        var l2 = Yi;
        Xi = g2;
        for (Yi = k2; f2 !== null; )
          V = f2, vj(f2), f2 = f2.sibling;
        V = e2;
        Xi = h2;
        Yi = l2;
        wj(a2);
        continue;
      }
    }
    (e2.subtreeFlags & 324) !== 0 && f2 !== null ? (f2.return = e2, V = f2) : d2 && !Xi && Yi && f2 !== null ? (f2.return = e2, V = f2) : wj(a2);
  }
}
function wj(a2) {
  for (var b2 = (a2.mode & 1) !== 0; V !== null; ) {
    var c2 = V;
    if (b2 && Yi && !Xi) {
      switch (c2.tag) {
        case 0:
        case 11:
        case 15:
          var d2 = c2.return;
          try {
            fj(2, c2);
          } catch (q2) {
            aj(c2, d2, q2);
          }
          break;
        case 1:
          if (d2 = c2.stateNode, typeof d2.componentDidMount === "function") {
            var e2 = c2.return;
            try {
              d2.componentDidMount();
            } catch (q2) {
              aj(c2, e2, q2);
            }
          }
      }
      switch (c2.tag) {
        case 1:
        case 5:
          d2 = c2.return;
          try {
            hj(c2);
          } catch (q2) {
            aj(c2, d2, q2);
          }
      }
    } else if ((c2.flags & 324) !== 0) {
      d2 = c2.alternate;
      try {
        if ((c2.flags & 68) !== 0)
          switch (c2.tag) {
            case 0:
            case 11:
            case 15:
              fj(3, c2);
              break;
            case 1:
              var f2 = c2.stateNode;
              if (c2.flags & 4)
                if (d2 === null)
                  f2.componentDidMount();
                else {
                  var g2 = c2.elementType === c2.type ? d2.memoizedProps : jg(c2.type, d2.memoizedProps);
                  f2.componentDidUpdate(g2, d2.memoizedState, f2.__reactInternalSnapshotBeforeUpdate);
                }
              var h2 = c2.updateQueue;
              h2 !== null && Eg(c2, h2, f2);
              break;
            case 3:
              var k2 = c2.updateQueue;
              if (k2 !== null) {
                d2 = null;
                if (c2.child !== null)
                  switch (c2.child.tag) {
                    case 5:
                      d2 = c2.child.stateNode;
                      break;
                    case 1:
                      d2 = c2.child.stateNode;
                  }
                Eg(c2, k2, d2);
              }
              break;
            case 5:
              var l2 = c2.stateNode;
              d2 === null && c2.flags & 4 && (d2 = l2, Ef(c2.type, c2.memoizedProps) && d2.focus());
              break;
            case 6:
              break;
            case 4:
              break;
            case 12:
              break;
            case 13:
              if (c2.memoizedState === null) {
                var m2 = c2.alternate;
                if (m2 !== null) {
                  var w2 = m2.memoizedState;
                  if (w2 !== null) {
                    var t2 = w2.dehydrated;
                    t2 !== null && gd(t2);
                  }
                }
              }
              break;
            case 19:
            case 17:
            case 21:
            case 22:
            case 23:
              break;
            default:
              throw Error(v(163));
          }
        c2.flags & 256 && hj(c2);
      } catch (q2) {
        aj(c2, c2.return, q2);
      }
    }
    if (c2 === a2) {
      V = null;
      break;
    }
    d2 = c2.sibling;
    if (d2 !== null) {
      d2.return = c2.return;
      V = d2;
      break;
    }
    V = c2.return;
  }
}
var xj = Math.ceil, yj = ta.ReactCurrentDispatcher, zj = ta.ReactCurrentOwner, X = ta.ReactCurrentBatchConfig, N = 0, M = null, Y = null, Z = 0, vi = 0, ui = Vf(0), U = 0, Aj = null, Dg = 0, Bj = 0, Cj = 0, qj = 0, Ui = Infinity;
function Dj() {
  Ui = D() + 500;
}
var hi = false, ii = null, ki = null, Ej = false, Fj = null, Gj = 0, Hj = 0, Ij = null, Jj = -1, Kj = 0;
function Hg() {
  return (N & 24) !== 0 ? D() : Jj !== -1 ? Jj : Jj = D();
}
function Ig(a2) {
  if ((a2.mode & 1) === 0)
    return 1;
  if ((N & 8) !== 0 && Z !== 0)
    return Z & -Z;
  if (ig.transition !== 0)
    return Kj === 0 && (a2 = sc, sc <<= 1, (sc & 4194240) === 0 && (sc = 64), Kj = a2), Kj;
  a2 = E;
  if (a2 !== 0)
    return a2;
  a2 = window.event;
  a2 = a2 === void 0 ? 16 : nd(a2.type);
  return a2;
}
function Jg(a2, b2, c2) {
  if (50 < Hj)
    throw Hj = 0, Ij = null, Error(v(185));
  var d2 = Lj(a2, b2);
  if (d2 === null)
    return null;
  Ac(d2, b2, c2);
  d2 === M && ((N & 8) === 0 && (Bj |= b2), U === 4 && Mj(d2, Z));
  b2 === 1 ? (N & 4) !== 0 && (N & 24) === 0 ? Nj(d2) : (Oj(d2, c2), N === 0 && (a2.mode & 1) === 0 && (Dj(), fg && hg())) : Oj(d2, c2);
  return d2;
}
function Lj(a2, b2) {
  a2.lanes |= b2;
  var c2 = a2.alternate;
  c2 !== null && (c2.lanes |= b2);
  c2 = a2;
  for (a2 = a2.return; a2 !== null; )
    a2.childLanes |= b2, c2 = a2.alternate, c2 !== null && (c2.childLanes |= b2), c2 = a2, a2 = a2.return;
  return c2.tag === 3 ? c2.stateNode : null;
}
function Oj(a2, b2) {
  for (var c2 = a2.callbackNode, d2 = a2.suspendedLanes, e2 = a2.pingedLanes, f2 = a2.expirationTimes, g2 = a2.pendingLanes; 0 < g2; ) {
    var h2 = 31 - wc(g2), k2 = 1 << h2, l2 = f2[h2];
    if (l2 === -1) {
      if ((k2 & d2) === 0 || (k2 & e2) !== 0)
        f2[h2] = xc(k2, b2);
    } else
      l2 <= b2 && (a2.expiredLanes |= k2);
    g2 &= ~k2;
  }
  d2 = vc(a2, a2 === M ? Z : 0);
  if (d2 === 0)
    c2 !== null && gc(c2), a2.callbackNode = null, a2.callbackPriority = 0;
  else if (b2 = d2 & -d2, a2.callbackPriority !== b2) {
    c2 != null && gc(c2);
    if (b2 === 1)
      a2.tag === 0 ? (c2 = Nj.bind(null, a2), fg = true, eg === null ? eg = [c2] : eg.push(c2)) : (c2 = Nj.bind(null, a2), eg === null ? eg = [c2] : eg.push(c2)), Jf(hg), c2 = null;
    else {
      switch (Gc(d2)) {
        case 1:
          c2 = kc;
          break;
        case 4:
          c2 = lc;
          break;
        case 16:
          c2 = mc;
          break;
        case 536870912:
          c2 = oc;
          break;
        default:
          c2 = mc;
      }
      c2 = fc(c2, Pj.bind(null, a2));
    }
    a2.callbackPriority = b2;
    a2.callbackNode = c2;
  }
}
function Pj(a2, b2) {
  Jj = -1;
  Kj = 0;
  if ((N & 24) !== 0)
    throw Error(v(327));
  var c2 = a2.callbackNode;
  if (Qj() && a2.callbackNode !== c2)
    return null;
  var d2 = vc(a2, a2 === M ? Z : 0);
  if (d2 === 0)
    return null;
  var e2 = (d2 & a2.expiredLanes) !== 0 ? false : (d2 & 30) === 0;
  if (e2 && !b2) {
    b2 = d2;
    e2 = N;
    N |= 8;
    var f2 = Rj();
    if (M !== a2 || Z !== b2)
      Dj(), Sj(a2, b2);
    do
      try {
        Tj();
        break;
      } catch (h2) {
        Uj(a2, h2);
      }
    while (1);
    og();
    yj.current = f2;
    N = e2;
    Y !== null ? b2 = 0 : (M = null, Z = 0, b2 = U);
  } else
    b2 = Vj(a2, d2);
  if (b2 !== 0) {
    b2 === 2 && (N |= 32, a2.hydrate && (a2.hydrate = false, Lf(a2.containerInfo)), e2 = yc(a2), e2 !== 0 && (d2 = e2, b2 = Vj(a2, e2)));
    if (b2 === 1)
      throw c2 = Aj, Sj(a2, 0), Mj(a2, d2), Oj(a2, D()), c2;
    a2.finishedWork = a2.current.alternate;
    a2.finishedLanes = d2;
    switch (b2) {
      case 0:
      case 1:
        throw Error(v(345));
      case 2:
        Wj(a2);
        break;
      case 3:
        Mj(a2, d2);
        if ((d2 & 130023424) === d2 && (b2 = qj + 500 - D(), 10 < b2)) {
          if (vc(a2, 0) !== 0)
            break;
          e2 = a2.suspendedLanes;
          if ((e2 & d2) !== d2) {
            Hg();
            a2.pingedLanes |= a2.suspendedLanes & e2;
            break;
          }
          a2.timeoutHandle = Gf(Wj.bind(null, a2), b2);
          break;
        }
        Wj(a2);
        break;
      case 4:
        Mj(a2, d2);
        if ((d2 & 4194240) === d2)
          break;
        b2 = a2.eventTimes;
        for (e2 = -1; 0 < d2; ) {
          var g2 = 31 - wc(d2);
          f2 = 1 << g2;
          g2 = b2[g2];
          g2 > e2 && (e2 = g2);
          d2 &= ~f2;
        }
        d2 = e2;
        d2 = D() - d2;
        d2 = (120 > d2 ? 120 : 480 > d2 ? 480 : 1080 > d2 ? 1080 : 1920 > d2 ? 1920 : 3e3 > d2 ? 3e3 : 4320 > d2 ? 4320 : 1960 * xj(d2 / 1960)) - d2;
        if (10 < d2) {
          a2.timeoutHandle = Gf(Wj.bind(null, a2), d2);
          break;
        }
        Wj(a2);
        break;
      case 5:
        Wj(a2);
        break;
      default:
        throw Error(v(329));
    }
  }
  Oj(a2, D());
  return a2.callbackNode === c2 ? Pj.bind(null, a2) : null;
}
function Mj(a2, b2) {
  b2 &= ~Cj;
  b2 &= ~Bj;
  a2.suspendedLanes |= b2;
  a2.pingedLanes &= ~b2;
  for (a2 = a2.expirationTimes; 0 < b2; ) {
    var c2 = 31 - wc(b2), d2 = 1 << c2;
    a2[c2] = -1;
    b2 &= ~d2;
  }
}
function Nj(a2) {
  if ((N & 24) !== 0)
    throw Error(v(327));
  Qj();
  var b2 = vc(a2, 0);
  if ((b2 & 1) === 0)
    return Oj(a2, D()), null;
  var c2 = Vj(a2, b2);
  if (a2.tag !== 0 && c2 === 2) {
    N |= 32;
    a2.hydrate && (a2.hydrate = false, Lf(a2.containerInfo));
    var d2 = yc(a2);
    d2 !== 0 && (b2 = d2, c2 = Vj(a2, b2));
  }
  if (c2 === 1)
    throw c2 = Aj, Sj(a2, 0), Mj(a2, b2), Oj(a2, D()), c2;
  a2.finishedWork = a2.current.alternate;
  a2.finishedLanes = b2;
  Wj(a2);
  Oj(a2, D());
  return null;
}
function Xj(a2, b2) {
  var c2 = N;
  N |= 1;
  try {
    return a2(b2);
  } finally {
    N = c2, N === 0 && (Dj(), fg && hg());
  }
}
function Yj(a2, b2) {
  var c2 = N;
  N &= -2;
  N |= 4;
  try {
    return a2(b2);
  } finally {
    N = c2, N === 0 && (Dj(), fg && hg());
  }
}
function Zj(a2, b2) {
  var c2 = N;
  N |= 1;
  var d2 = X.transition, e2 = E;
  try {
    if (X.transition = 0, E = 1, a2)
      return a2(b2);
  } finally {
    E = e2, X.transition = d2, N = c2, (N & 24) === 0 && hg();
  }
}
function Vi() {
  vi = ui.current;
  G(ui);
}
function Sj(a2, b2) {
  a2.finishedWork = null;
  a2.finishedLanes = 0;
  var c2 = a2.timeoutHandle;
  c2 !== -1 && (a2.timeoutHandle = -1, Hf(c2));
  if (Y !== null)
    for (c2 = Y.return; c2 !== null; ) {
      var d2 = c2;
      switch (d2.tag) {
        case 1:
          d2 = d2.type.childContextTypes;
          d2 !== null && d2 !== void 0 && $f();
          break;
        case 3:
          fh();
          G(K);
          G(J);
          uh();
          break;
        case 5:
          hh(d2);
          break;
        case 4:
          fh();
          break;
        case 13:
          G(O);
          break;
        case 19:
          G(O);
          break;
        case 10:
          pg(d2.type._context);
          break;
        case 22:
        case 23:
          Vi();
      }
      c2 = c2.return;
    }
  M = a2;
  Y = Tg(a2.current, null);
  Z = vi = b2;
  U = 0;
  Aj = null;
  Cj = Bj = Dg = 0;
  if (ug !== null) {
    for (a2 = 0; a2 < ug.length; a2++)
      if (b2 = ug[a2], c2 = b2.interleaved, c2 !== null) {
        b2.interleaved = null;
        d2 = c2.next;
        var e2 = b2.pending;
        if (e2 !== null) {
          var f2 = e2.next;
          e2.next = d2;
          c2.next = f2;
        }
        b2.pending = c2;
      }
    ug = null;
  }
}
function Uj(a2, b2) {
  do {
    var c2 = Y;
    try {
      og();
      vh.current = Gh;
      if (yh) {
        for (var d2 = P.memoizedState; d2 !== null; ) {
          var e2 = d2.queue;
          e2 !== null && (e2.pending = null);
          d2 = d2.next;
        }
        yh = false;
      }
      xh = 0;
      R = Q = P = null;
      zh = false;
      zj.current = null;
      if (c2 === null || c2.return === null) {
        U = 1;
        Aj = b2;
        Y = null;
        break;
      }
      a: {
        var f2 = a2, g2 = c2.return, h2 = c2, k2 = b2;
        b2 = Z;
        h2.flags |= 8192;
        if (k2 !== null && typeof k2 === "object" && typeof k2.then === "function") {
          var l2 = k2, m2 = h2.tag;
          if ((h2.mode & 1) === 0 && (m2 === 0 || m2 === 11 || m2 === 15)) {
            var w2 = h2.alternate;
            w2 ? (h2.updateQueue = w2.updateQueue, h2.memoizedState = w2.memoizedState, h2.lanes = w2.lanes) : (h2.updateQueue = null, h2.memoizedState = null);
          }
          var t2 = (O.current & 1) !== 0, q2 = g2;
          do {
            var n2;
            if (n2 = q2.tag === 13) {
              var x2 = q2.memoizedState;
              if (x2 !== null)
                n2 = x2.dehydrated !== null ? true : false;
              else {
                var I2 = q2.memoizedProps;
                n2 = I2.fallback === void 0 ? false : I2.unstable_avoidThisFallback !== true ? true : t2 ? false : true;
              }
            }
            if (n2) {
              var z2 = q2.updateQueue;
              if (z2 === null) {
                var r2 = new Set();
                r2.add(l2);
                q2.updateQueue = r2;
              } else
                z2.add(l2);
              if ((q2.mode & 1) === 0 && q2 !== g2) {
                q2.flags |= 128;
                h2.flags |= 32768;
                h2.flags &= -10053;
                if (h2.tag === 1)
                  if (h2.alternate === null)
                    h2.tag = 17;
                  else {
                    var u2 = yg(-1, 1);
                    u2.tag = 2;
                    zg(h2, u2);
                  }
                h2.lanes |= 1;
                break a;
              }
              k2 = void 0;
              h2 = b2;
              var B2 = f2.pingCache;
              B2 === null ? (B2 = f2.pingCache = new fi(), k2 = new Set(), B2.set(l2, k2)) : (k2 = B2.get(l2), k2 === void 0 && (k2 = new Set(), B2.set(l2, k2)));
              if (!k2.has(h2)) {
                k2.add(h2);
                var S2 = ck.bind(null, f2, l2, h2);
                l2.then(S2, S2);
              }
              q2.flags |= 16384;
              q2.lanes = b2;
              break a;
            }
            q2 = q2.return;
          } while (q2 !== null);
          k2 = Error((Ta(h2) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.");
        }
        U !== 5 && (U = 2);
        k2 = di(k2, h2);
        q2 = g2;
        do {
          switch (q2.tag) {
            case 3:
              f2 = k2;
              q2.flags |= 16384;
              b2 &= -b2;
              q2.lanes |= b2;
              var W2 = gi(q2, f2, b2);
              Bg(q2, W2);
              break a;
            case 1:
              f2 = k2;
              var ha2 = q2.type, L2 = q2.stateNode;
              if ((q2.flags & 128) === 0 && (typeof ha2.getDerivedStateFromError === "function" || L2 !== null && typeof L2.componentDidCatch === "function" && (ki === null || !ki.has(L2)))) {
                q2.flags |= 16384;
                b2 &= -b2;
                q2.lanes |= b2;
                var ak = ji(q2, f2, b2);
                Bg(q2, ak);
                break a;
              }
          }
          q2 = q2.return;
        } while (q2 !== null);
      }
      dk(c2);
    } catch (bk) {
      b2 = bk;
      Y === c2 && c2 !== null && (Y = c2 = c2.return);
      continue;
    }
    break;
  } while (1);
}
function Rj() {
  var a2 = yj.current;
  yj.current = Gh;
  return a2 === null ? Gh : a2;
}
function Hi() {
  if (U === 0 || U === 3)
    U = 4;
  M === null || (Dg & 268435455) === 0 && (Bj & 268435455) === 0 || Mj(M, Z);
}
function Vj(a2, b2) {
  var c2 = N;
  N |= 8;
  var d2 = Rj();
  M === a2 && Z === b2 || Sj(a2, b2);
  do
    try {
      ek();
      break;
    } catch (e2) {
      Uj(a2, e2);
    }
  while (1);
  og();
  N = c2;
  yj.current = d2;
  if (Y !== null)
    throw Error(v(261));
  M = null;
  Z = 0;
  return U;
}
function ek() {
  for (; Y !== null; )
    fk(Y);
}
function Tj() {
  for (; Y !== null && !hc(); )
    fk(Y);
}
function fk(a2) {
  var b2 = gk(a2.alternate, a2, vi);
  a2.memoizedProps = a2.pendingProps;
  b2 === null ? dk(a2) : Y = b2;
  zj.current = null;
}
function dk(a2) {
  var b2 = a2;
  do {
    var c2 = b2.alternate;
    a2 = b2.return;
    if ((b2.flags & 8192) === 0) {
      if (c2 = Ti(c2, b2, vi), c2 !== null) {
        Y = c2;
        return;
      }
    } else {
      c2 = Wi(b2);
      if (c2 !== null) {
        c2.flags &= 8191;
        Y = c2;
        return;
      }
      a2 !== null && (a2.flags |= 8192, a2.subtreeFlags = 0, a2.deletions = null);
    }
    b2 = b2.sibling;
    if (b2 !== null) {
      Y = b2;
      return;
    }
    Y = b2 = a2;
  } while (b2 !== null);
  U === 0 && (U = 5);
}
function Wj(a2) {
  var b2 = E, c2 = X.transition;
  try {
    X.transition = 0, E = 1, hk(a2, b2);
  } finally {
    X.transition = c2, E = b2;
  }
  return null;
}
function hk(a2, b2) {
  do
    Qj();
  while (Fj !== null);
  if ((N & 24) !== 0)
    throw Error(v(327));
  var c2 = a2.finishedWork, d2 = a2.finishedLanes;
  if (c2 === null)
    return null;
  a2.finishedWork = null;
  a2.finishedLanes = 0;
  if (c2 === a2.current)
    throw Error(v(177));
  a2.callbackNode = null;
  a2.callbackPriority = 0;
  var e2 = c2.lanes | c2.childLanes;
  Bc(a2, e2);
  a2 === M && (Y = M = null, Z = 0);
  (c2.subtreeFlags & 1040) === 0 && (c2.flags & 1040) === 0 || Ej || (Ej = true, fc(mc, function() {
    Qj();
    return null;
  }));
  e2 = (c2.flags & 8054) !== 0;
  if ((c2.subtreeFlags & 8054) !== 0 || e2) {
    e2 = X.transition;
    X.transition = 0;
    var f2 = E;
    E = 1;
    var g2 = N;
    N |= 16;
    zj.current = null;
    dj(a2, c2);
    tj(a2, c2);
    Se(Df);
    id$1 = !!Cf;
    Df = Cf = null;
    a2.current = c2;
    uj(c2);
    ic();
    N = g2;
    E = f2;
    X.transition = e2;
  } else
    a2.current = c2;
  Ej && (Ej = false, Fj = a2, Gj = d2);
  e2 = a2.pendingLanes;
  e2 === 0 && (ki = null);
  (e2 & 1) !== 0 ? a2 === Ij ? Hj++ : (Hj = 0, Ij = a2) : Hj = 0;
  rc(c2.stateNode);
  Oj(a2, D());
  if (hi)
    throw hi = false, a2 = ii, ii = null, a2;
  if ((N & 4) !== 0)
    return null;
  (Gj & 1) !== 0 && a2.tag !== 0 && Qj();
  hg();
  return null;
}
function Qj() {
  if (Fj !== null) {
    var a2 = Gc(Gj), b2 = X.transition, c2 = E;
    try {
      X.transition = 0;
      E = 16 > a2 ? 16 : a2;
      if (Fj === null)
        var d2 = false;
      else {
        a2 = Fj;
        Fj = null;
        Gj = 0;
        if ((N & 24) !== 0)
          throw Error(v(331));
        var e2 = N;
        N |= 16;
        for (V = a2.current; V !== null; ) {
          var f2 = V, g2 = f2.child;
          if ((V.flags & 16) !== 0) {
            var h2 = f2.deletions;
            if (h2 !== null) {
              for (var k2 = 0; k2 < h2.length; k2++) {
                var l2 = h2[k2];
                for (V = l2; V !== null; ) {
                  var m2 = V;
                  switch (m2.tag) {
                    case 0:
                    case 11:
                    case 15:
                      ej(4, m2, f2);
                  }
                  var w2 = m2.child;
                  if (w2 !== null)
                    w2.return = m2, V = w2;
                  else
                    for (; V !== null; ) {
                      m2 = V;
                      var t2 = m2.sibling, q2 = m2.return;
                      if (m2 === l2) {
                        kj(m2);
                        V = null;
                        break;
                      }
                      if (t2 !== null) {
                        t2.return = q2;
                        V = t2;
                        break;
                      }
                      V = q2;
                    }
                }
              }
              var n2 = f2.alternate;
              if (n2 !== null) {
                var x2 = n2.child;
                if (x2 !== null) {
                  n2.child = null;
                  do {
                    var I2 = x2.sibling;
                    x2.sibling = null;
                    x2 = I2;
                  } while (x2 !== null);
                }
              }
              V = f2;
            }
          }
          if ((f2.subtreeFlags & 1040) !== 0 && g2 !== null)
            g2.return = f2, V = g2;
          else
            b:
              for (; V !== null; ) {
                f2 = V;
                if ((f2.flags & 1024) !== 0)
                  switch (f2.tag) {
                    case 0:
                    case 11:
                    case 15:
                      ej(5, f2, f2.return);
                  }
                var z2 = f2.sibling;
                if (z2 !== null) {
                  z2.return = f2.return;
                  V = z2;
                  break b;
                }
                V = f2.return;
              }
        }
        var r2 = a2.current;
        for (V = r2; V !== null; ) {
          g2 = V;
          var u2 = g2.child;
          if ((g2.subtreeFlags & 1040) !== 0 && u2 !== null)
            u2.return = g2, V = u2;
          else
            b:
              for (g2 = r2; V !== null; ) {
                h2 = V;
                if ((h2.flags & 1024) !== 0)
                  try {
                    switch (h2.tag) {
                      case 0:
                      case 11:
                      case 15:
                        fj(5, h2);
                    }
                  } catch (S2) {
                    aj(h2, h2.return, S2);
                  }
                if (h2 === g2) {
                  V = null;
                  break b;
                }
                var B2 = h2.sibling;
                if (B2 !== null) {
                  B2.return = h2.return;
                  V = B2;
                  break b;
                }
                V = h2.return;
              }
        }
        N = e2;
        hg();
        if (qc && typeof qc.onPostCommitFiberRoot === "function")
          try {
            qc.onPostCommitFiberRoot(pc, a2);
          } catch (S2) {
          }
        d2 = true;
      }
      return d2;
    } finally {
      E = c2, X.transition = b2;
    }
  }
  return false;
}
function ik(a2, b2, c2) {
  b2 = di(c2, b2);
  b2 = gi(a2, b2, 1);
  zg(a2, b2);
  b2 = Hg();
  a2 = Lj(a2, 1);
  a2 !== null && (Ac(a2, 1, b2), Oj(a2, b2));
}
function aj(a2, b2, c2) {
  if (a2.tag === 3)
    ik(a2, a2, c2);
  else
    for (b2 = a2.return; b2 !== null; ) {
      if (b2.tag === 3) {
        ik(b2, a2, c2);
        break;
      } else if (b2.tag === 1) {
        var d2 = b2.stateNode;
        if (typeof b2.type.getDerivedStateFromError === "function" || typeof d2.componentDidCatch === "function" && (ki === null || !ki.has(d2))) {
          a2 = di(c2, a2);
          a2 = ji(b2, a2, 1);
          zg(b2, a2);
          a2 = Hg();
          b2 = Lj(b2, 1);
          b2 !== null && (Ac(b2, 1, a2), Oj(b2, a2));
          break;
        }
      }
      b2 = b2.return;
    }
}
function ck(a2, b2, c2) {
  var d2 = a2.pingCache;
  d2 !== null && d2.delete(b2);
  b2 = Hg();
  a2.pingedLanes |= a2.suspendedLanes & c2;
  M === a2 && (Z & c2) === c2 && (U === 4 || U === 3 && (Z & 130023424) === Z && 500 > D() - qj ? Sj(a2, 0) : Cj |= c2);
  Oj(a2, b2);
}
function jk(a2, b2) {
  b2 === 0 && ((a2.mode & 1) === 0 ? b2 = 1 : (b2 = tc, tc <<= 1, (tc & 130023424) === 0 && (tc = 4194304)));
  var c2 = Hg();
  a2 = Lj(a2, b2);
  a2 !== null && (Ac(a2, b2, c2), Oj(a2, c2));
}
function Ii(a2) {
  var b2 = a2.memoizedState, c2 = 0;
  b2 !== null && (c2 = b2.retryLane);
  jk(a2, c2);
}
function sj(a2, b2) {
  var c2 = 0;
  switch (a2.tag) {
    case 13:
      var d2 = a2.stateNode;
      var e2 = a2.memoizedState;
      e2 !== null && (c2 = e2.retryLane);
      break;
    case 19:
      d2 = a2.stateNode;
      break;
    default:
      throw Error(v(314));
  }
  d2 !== null && d2.delete(b2);
  jk(a2, c2);
}
var gk;
gk = function(a2, b2, c2) {
  var d2 = b2.lanes;
  if (a2 !== null)
    if (a2.memoizedProps !== b2.pendingProps || K.current)
      sg = true;
    else {
      if ((c2 & d2) === 0) {
        sg = false;
        switch (b2.tag) {
          case 3:
            zi(b2);
            sh();
            break;
          case 5:
            gh(b2);
            break;
          case 1:
            Zf(b2.type) && cg(b2);
            break;
          case 4:
            eh(b2, b2.stateNode.containerInfo);
            break;
          case 10:
            d2 = b2.type._context;
            var e2 = b2.memoizedProps.value;
            H(kg, d2._currentValue);
            d2._currentValue = e2;
            break;
          case 13:
            d2 = b2.memoizedState;
            if (d2 !== null) {
              if (d2.dehydrated !== null)
                return H(O, O.current & 1), b2.flags |= 128, null;
              if ((c2 & b2.child.childLanes) !== 0)
                return Ci(a2, b2, c2);
              H(O, O.current & 1);
              b2 = oi(a2, b2, c2);
              return b2 !== null ? b2.sibling : null;
            }
            H(O, O.current & 1);
            break;
          case 19:
            d2 = (c2 & b2.childLanes) !== 0;
            if ((a2.flags & 128) !== 0) {
              if (d2)
                return Ni(a2, b2, c2);
              b2.flags |= 128;
            }
            e2 = b2.memoizedState;
            e2 !== null && (e2.rendering = null, e2.tail = null, e2.lastEffect = null);
            H(O, O.current);
            if (d2)
              break;
            else
              return null;
          case 22:
          case 23:
            return b2.lanes = 0, ti(a2, b2, c2);
        }
        return oi(a2, b2, c2);
      }
      sg = (a2.flags & 32768) !== 0 ? true : false;
    }
  else
    sg = false;
  b2.lanes = 0;
  switch (b2.tag) {
    case 2:
      d2 = b2.type;
      a2 !== null && (a2.alternate = null, b2.alternate = null, b2.flags |= 2);
      a2 = b2.pendingProps;
      e2 = Yf(b2, J.current);
      rg(b2, c2);
      e2 = Ch(null, b2, d2, a2, e2, c2);
      b2.flags |= 1;
      if (typeof e2 === "object" && e2 !== null && typeof e2.render === "function" && e2.$$typeof === void 0) {
        b2.tag = 1;
        b2.memoizedState = null;
        b2.updateQueue = null;
        if (Zf(d2)) {
          var f2 = true;
          cg(b2);
        } else
          f2 = false;
        b2.memoizedState = e2.state !== null && e2.state !== void 0 ? e2.state : null;
        wg(b2);
        e2.updater = Kg;
        b2.stateNode = e2;
        e2._reactInternals = b2;
        Og(b2, d2, a2, c2);
        b2 = yi(null, b2, d2, true, f2, c2);
      } else
        b2.tag = 0, mi(null, b2, e2, c2), b2 = b2.child;
      return b2;
    case 16:
      e2 = b2.elementType;
      a: {
        a2 !== null && (a2.alternate = null, b2.alternate = null, b2.flags |= 2);
        a2 = b2.pendingProps;
        f2 = e2._init;
        e2 = f2(e2._payload);
        b2.type = e2;
        f2 = b2.tag = kk(e2);
        a2 = jg(e2, a2);
        switch (f2) {
          case 0:
            b2 = si(null, b2, e2, a2, c2);
            break a;
          case 1:
            b2 = xi(null, b2, e2, a2, c2);
            break a;
          case 11:
            b2 = ni(null, b2, e2, a2, c2);
            break a;
          case 14:
            b2 = pi(null, b2, e2, jg(e2.type, a2), d2, c2);
            break a;
        }
        throw Error(v(306, e2, ""));
      }
      return b2;
    case 0:
      return d2 = b2.type, e2 = b2.pendingProps, e2 = b2.elementType === d2 ? e2 : jg(d2, e2), si(a2, b2, d2, e2, c2);
    case 1:
      return d2 = b2.type, e2 = b2.pendingProps, e2 = b2.elementType === d2 ? e2 : jg(d2, e2), xi(a2, b2, d2, e2, c2);
    case 3:
      zi(b2);
      d2 = b2.updateQueue;
      if (a2 === null || d2 === null)
        throw Error(v(282));
      d2 = b2.pendingProps;
      e2 = b2.memoizedState.element;
      xg(a2, b2);
      Cg(b2, d2, null, c2);
      f2 = b2.stateNode;
      d2 = b2.memoizedState.element;
      if (d2 === e2)
        sh(), b2 = oi(a2, b2, c2);
      else {
        if (e2 = f2.hydrate)
          kh = Mf(b2.stateNode.containerInfo.firstChild), jh = b2, e2 = lh = true;
        if (e2) {
          a2 = f2.mutableSourceEagerHydrationData;
          if (a2 != null)
            for (e2 = 0; e2 < a2.length; e2 += 2)
              f2 = a2[e2], f2._workInProgressVersionPrimary = a2[e2 + 1], th.push(f2);
          c2 = Zg(b2, null, d2, c2);
          for (b2.child = c2; c2; )
            c2.flags = c2.flags & -3 | 2048, c2 = c2.sibling;
        } else
          mi(a2, b2, d2, c2), sh();
        b2 = b2.child;
      }
      return b2;
    case 5:
      gh(b2);
      a2 === null && ph(b2);
      d2 = b2.type;
      e2 = b2.pendingProps;
      f2 = a2 !== null ? a2.memoizedProps : null;
      var g2 = e2.children;
      Ff(d2, e2) ? g2 = null : f2 !== null && Ff(d2, f2) && (b2.flags |= 32);
      wi(a2, b2);
      mi(a2, b2, g2, c2);
      return b2.child;
    case 6:
      return a2 === null && ph(b2), null;
    case 13:
      return Ci(a2, b2, c2);
    case 4:
      return eh(b2, b2.stateNode.containerInfo), d2 = b2.pendingProps, a2 === null ? b2.child = Yg(b2, null, d2, c2) : mi(a2, b2, d2, c2), b2.child;
    case 11:
      return d2 = b2.type, e2 = b2.pendingProps, e2 = b2.elementType === d2 ? e2 : jg(d2, e2), ni(a2, b2, d2, e2, c2);
    case 7:
      return mi(a2, b2, b2.pendingProps, c2), b2.child;
    case 8:
      return mi(a2, b2, b2.pendingProps.children, c2), b2.child;
    case 12:
      return mi(a2, b2, b2.pendingProps.children, c2), b2.child;
    case 10:
      a: {
        d2 = b2.type._context;
        e2 = b2.pendingProps;
        f2 = b2.memoizedProps;
        g2 = e2.value;
        H(kg, d2._currentValue);
        d2._currentValue = g2;
        if (f2 !== null)
          if (Le(f2.value, g2)) {
            if (f2.children === e2.children && !K.current) {
              b2 = oi(a2, b2, c2);
              break a;
            }
          } else
            for (f2 = b2.child, f2 !== null && (f2.return = b2); f2 !== null; ) {
              var h2 = f2.dependencies;
              if (h2 !== null) {
                g2 = f2.child;
                for (var k2 = h2.firstContext; k2 !== null; ) {
                  if (k2.context === d2) {
                    if (f2.tag === 1) {
                      k2 = yg(-1, c2 & -c2);
                      k2.tag = 2;
                      var l2 = f2.updateQueue;
                      if (l2 !== null) {
                        l2 = l2.shared;
                        var m2 = l2.pending;
                        m2 === null ? k2.next = k2 : (k2.next = m2.next, m2.next = k2);
                        l2.pending = k2;
                      }
                    }
                    f2.lanes |= c2;
                    k2 = f2.alternate;
                    k2 !== null && (k2.lanes |= c2);
                    qg(f2.return, c2);
                    h2.lanes |= c2;
                    break;
                  }
                  k2 = k2.next;
                }
              } else if (f2.tag === 10)
                g2 = f2.type === b2.type ? null : f2.child;
              else if (f2.tag === 18) {
                g2 = f2.return;
                if (g2 === null)
                  throw Error(v(341));
                g2.lanes |= c2;
                h2 = g2.alternate;
                h2 !== null && (h2.lanes |= c2);
                qg(g2, c2);
                g2 = f2.sibling;
              } else
                g2 = f2.child;
              if (g2 !== null)
                g2.return = f2;
              else
                for (g2 = f2; g2 !== null; ) {
                  if (g2 === b2) {
                    g2 = null;
                    break;
                  }
                  f2 = g2.sibling;
                  if (f2 !== null) {
                    f2.return = g2.return;
                    g2 = f2;
                    break;
                  }
                  g2 = g2.return;
                }
              f2 = g2;
            }
        mi(a2, b2, e2.children, c2);
        b2 = b2.child;
      }
      return b2;
    case 9:
      return e2 = b2.type, d2 = b2.pendingProps.children, rg(b2, c2), e2 = tg(e2), d2 = d2(e2), b2.flags |= 1, mi(a2, b2, d2, c2), b2.child;
    case 14:
      return e2 = b2.type, f2 = jg(e2, b2.pendingProps), f2 = jg(e2.type, f2), pi(a2, b2, e2, f2, d2, c2);
    case 15:
      return ri(a2, b2, b2.type, b2.pendingProps, d2, c2);
    case 17:
      return d2 = b2.type, e2 = b2.pendingProps, e2 = b2.elementType === d2 ? e2 : jg(d2, e2), a2 !== null && (a2.alternate = null, b2.alternate = null, b2.flags |= 2), b2.tag = 1, Zf(d2) ? (a2 = true, cg(b2)) : a2 = false, rg(b2, c2), Mg(b2, d2, e2), Og(b2, d2, e2, c2), yi(null, b2, d2, true, a2, c2);
    case 19:
      return Ni(a2, b2, c2);
    case 22:
      return ti(a2, b2, c2);
    case 23:
      return ti(a2, b2, c2);
  }
  throw Error(v(156, b2.tag));
};
function lk(a2, b2, c2, d2) {
  this.tag = a2;
  this.key = c2;
  this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
  this.index = 0;
  this.ref = null;
  this.pendingProps = b2;
  this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
  this.mode = d2;
  this.subtreeFlags = this.flags = 0;
  this.deletions = null;
  this.childLanes = this.lanes = 0;
  this.alternate = null;
}
function nh(a2, b2, c2, d2) {
  return new lk(a2, b2, c2, d2);
}
function qi(a2) {
  a2 = a2.prototype;
  return !(!a2 || !a2.isReactComponent);
}
function kk(a2) {
  if (typeof a2 === "function")
    return qi(a2) ? 1 : 0;
  if (a2 !== void 0 && a2 !== null) {
    a2 = a2.$$typeof;
    if (a2 === Ba)
      return 11;
    if (a2 === Ea)
      return 14;
  }
  return 2;
}
function Tg(a2, b2) {
  var c2 = a2.alternate;
  c2 === null ? (c2 = nh(a2.tag, b2, a2.key, a2.mode), c2.elementType = a2.elementType, c2.type = a2.type, c2.stateNode = a2.stateNode, c2.alternate = a2, a2.alternate = c2) : (c2.pendingProps = b2, c2.type = a2.type, c2.flags = 0, c2.subtreeFlags = 0, c2.deletions = null);
  c2.flags = a2.flags & 1835008;
  c2.childLanes = a2.childLanes;
  c2.lanes = a2.lanes;
  c2.child = a2.child;
  c2.memoizedProps = a2.memoizedProps;
  c2.memoizedState = a2.memoizedState;
  c2.updateQueue = a2.updateQueue;
  b2 = a2.dependencies;
  c2.dependencies = b2 === null ? null : { lanes: b2.lanes, firstContext: b2.firstContext };
  c2.sibling = a2.sibling;
  c2.index = a2.index;
  c2.ref = a2.ref;
  return c2;
}
function Vg(a2, b2, c2, d2, e2, f2) {
  var g2 = 2;
  d2 = a2;
  if (typeof a2 === "function")
    qi(a2) && (g2 = 1);
  else if (typeof a2 === "string")
    g2 = 5;
  else
    a:
      switch (a2) {
        case wa:
          return Xg(c2.children, e2, f2, b2);
        case Ha:
          g2 = 8;
          e2 |= 4;
          break;
        case xa:
          g2 = 8;
          e2 |= 8;
          break;
        case ya:
          return a2 = nh(12, c2, b2, e2 | 2), a2.elementType = ya, a2.lanes = f2, a2;
        case Ca:
          return a2 = nh(13, c2, b2, e2), a2.elementType = Ca, a2.lanes = f2, a2;
        case Da:
          return a2 = nh(19, c2, b2, e2), a2.elementType = Da, a2.lanes = f2, a2;
        case Ia:
          return Fi(c2, e2, f2, b2);
        case Ja:
          return a2 = nh(23, c2, b2, e2), a2.elementType = Ja, a2.lanes = f2, a2;
        default:
          if (typeof a2 === "object" && a2 !== null)
            switch (a2.$$typeof) {
              case za:
                g2 = 10;
                break a;
              case Aa:
                g2 = 9;
                break a;
              case Ba:
                g2 = 11;
                break a;
              case Ea:
                g2 = 14;
                break a;
              case Fa:
                g2 = 16;
                d2 = null;
                break a;
            }
          throw Error(v(130, a2 == null ? a2 : typeof a2, ""));
      }
  b2 = nh(g2, c2, b2, e2);
  b2.elementType = a2;
  b2.type = d2;
  b2.lanes = f2;
  return b2;
}
function Xg(a2, b2, c2, d2) {
  a2 = nh(7, a2, d2, b2);
  a2.lanes = c2;
  return a2;
}
function Fi(a2, b2, c2, d2) {
  a2 = nh(22, a2, d2, b2);
  a2.elementType = Ia;
  a2.lanes = c2;
  return a2;
}
function Ug(a2, b2, c2) {
  a2 = nh(6, a2, null, b2);
  a2.lanes = c2;
  return a2;
}
function Wg(a2, b2, c2) {
  b2 = nh(4, a2.children !== null ? a2.children : [], a2.key, b2);
  b2.lanes = c2;
  b2.stateNode = { containerInfo: a2.containerInfo, pendingChildren: null, implementation: a2.implementation };
  return b2;
}
function mk(a2, b2, c2) {
  this.tag = b2;
  this.containerInfo = a2;
  this.finishedWork = this.pingCache = this.current = this.pendingChildren = null;
  this.timeoutHandle = -1;
  this.pendingContext = this.context = null;
  this.hydrate = c2;
  this.callbackNode = null;
  this.callbackPriority = 0;
  this.eventTimes = zc(0);
  this.expirationTimes = zc(-1);
  this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0;
  this.entanglements = zc(0);
  this.mutableSourceEagerHydrationData = null;
}
function nk(a2, b2, c2) {
  var d2 = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
  return { $$typeof: va, key: d2 == null ? null : "" + d2, children: a2, containerInfo: b2, implementation: c2 };
}
function ok(a2, b2, c2, d2) {
  var e2 = b2.current, f2 = Hg(), g2 = Ig(e2);
  a:
    if (c2) {
      c2 = c2._reactInternals;
      b: {
        if (Zb(c2) !== c2 || c2.tag !== 1)
          throw Error(v(170));
        var h2 = c2;
        do {
          switch (h2.tag) {
            case 3:
              h2 = h2.stateNode.context;
              break b;
            case 1:
              if (Zf(h2.type)) {
                h2 = h2.stateNode.__reactInternalMemoizedMergedChildContext;
                break b;
              }
          }
          h2 = h2.return;
        } while (h2 !== null);
        throw Error(v(171));
      }
      if (c2.tag === 1) {
        var k2 = c2.type;
        if (Zf(k2)) {
          c2 = bg(c2, k2, h2);
          break a;
        }
      }
      c2 = h2;
    } else
      c2 = Wf;
  b2.context === null ? b2.context = c2 : b2.pendingContext = c2;
  b2 = yg(f2, g2);
  b2.payload = { element: a2 };
  d2 = d2 === void 0 ? null : d2;
  d2 !== null && (b2.callback = d2);
  zg(e2, b2);
  a2 = Jg(e2, g2, f2);
  a2 !== null && Ag(a2, e2, g2);
  return g2;
}
function pk(a2) {
  a2 = a2.current;
  if (!a2.child)
    return null;
  switch (a2.child.tag) {
    case 5:
      return a2.child.stateNode;
    default:
      return a2.child.stateNode;
  }
}
function qk(a2, b2) {
  a2 = a2.memoizedState;
  if (a2 !== null && a2.dehydrated !== null) {
    var c2 = a2.retryLane;
    a2.retryLane = c2 !== 0 && c2 < b2 ? c2 : b2;
  }
}
function rk(a2, b2) {
  qk(a2, b2);
  (a2 = a2.alternate) && qk(a2, b2);
}
function sk() {
  return null;
}
function tk(a2, b2) {
  this._internalRoot = uk(a2, 1, b2);
}
function vk(a2, b2) {
  this._internalRoot = uk(a2, 0, b2);
}
tk.prototype.render = vk.prototype.render = function(a2) {
  ok(a2, this._internalRoot, null, null);
};
tk.prototype.unmount = vk.prototype.unmount = function() {
  var a2 = this._internalRoot, b2 = a2.containerInfo;
  ok(null, a2, null, function() {
    b2[yf] = null;
  });
};
function uk(a2, b2, c2) {
  var d2 = c2 != null && c2.hydrationOptions != null && c2.hydrationOptions.mutableSources || null, e2 = c2 != null && c2.unstable_strictMode === true;
  c2 = new mk(a2, b2, c2 != null && c2.hydrate === true);
  b2 === 1 ? (b2 = 1, e2 === true && (b2 |= 8)) : b2 = 0;
  e2 = nh(3, null, null, b2);
  c2.current = e2;
  e2.stateNode = c2;
  e2.memoizedState = { element: null };
  wg(e2);
  a2[yf] = c2.current;
  wf(a2.nodeType === 8 ? a2.parentNode : a2);
  if (d2)
    for (a2 = 0; a2 < d2.length; a2++)
      e2 = d2[a2], b2 = e2._getVersion, b2 = b2(e2._source), c2.mutableSourceEagerHydrationData == null ? c2.mutableSourceEagerHydrationData = [e2, b2] : c2.mutableSourceEagerHydrationData.push(e2, b2);
  return c2;
}
function wk(a2) {
  return !(!a2 || a2.nodeType !== 1 && a2.nodeType !== 9 && a2.nodeType !== 11 && (a2.nodeType !== 8 || a2.nodeValue !== " react-mount-point-unstable "));
}
function xk(a2, b2) {
  if (!b2)
    for (var c2; c2 = a2.lastChild; )
      a2.removeChild(c2);
  return new vk(a2, b2 ? { hydrate: true } : void 0);
}
function yk(a2, b2, c2, d2, e2) {
  var f2 = c2._reactRootContainer;
  if (f2) {
    var g2 = f2._internalRoot;
    if (typeof e2 === "function") {
      var h2 = e2;
      e2 = function() {
        var a3 = pk(g2);
        h2.call(a3);
      };
    }
    ok(b2, g2, a2, e2);
  } else {
    f2 = c2._reactRootContainer = xk(c2, d2);
    g2 = f2._internalRoot;
    if (typeof e2 === "function") {
      var k2 = e2;
      e2 = function() {
        var a3 = pk(g2);
        k2.call(a3);
      };
    }
    Yj(function() {
      ok(b2, g2, a2, e2);
    });
  }
  return pk(g2);
}
Hc = function(a2) {
  switch (a2.tag) {
    case 3:
      var b2 = a2.stateNode;
      if (b2.hydrate) {
        var c2 = uc(b2.pendingLanes);
        c2 !== 0 && (Cc(b2, c2 | 1), Oj(b2, D()), (N & 24) === 0 && (Dj(), hg()));
      }
      break;
    case 13:
      var d2 = Hg();
      Zj(function() {
        return Jg(a2, 1, d2);
      });
      rk(a2, 1);
  }
};
Ic = function(a2) {
  if (a2.tag === 13) {
    var b2 = Hg();
    Jg(a2, 1, b2);
    rk(a2, 1);
  }
};
Jc = function(a2) {
  if (a2.tag === 13) {
    var b2 = Hg();
    Jg(a2, 134217728, b2);
    rk(a2, 134217728);
  }
};
Kc = function(a2) {
  if (a2.tag === 13) {
    var b2 = Hg(), c2 = Ig(a2);
    Jg(a2, c2, b2);
    rk(a2, c2);
  }
};
Lc = function(a2, b2) {
  var c2 = E;
  try {
    return E = a2, b2();
  } finally {
    E = c2;
  }
};
yb = function(a2, b2, c2) {
  switch (b2) {
    case "input":
      cb(a2, c2);
      b2 = c2.name;
      if (c2.type === "radio" && b2 != null) {
        for (c2 = a2; c2.parentNode; )
          c2 = c2.parentNode;
        c2 = c2.querySelectorAll("input[name=" + JSON.stringify("" + b2) + '][type="radio"]');
        for (b2 = 0; b2 < c2.length; b2++) {
          var d2 = c2[b2];
          if (d2 !== a2 && d2.form === a2.form) {
            var e2 = Db(d2);
            if (!e2)
              throw Error(v(90));
            Ya(d2);
            cb(d2, e2);
          }
        }
      }
      break;
    case "textarea":
      jb(a2, c2);
      break;
    case "select":
      b2 = c2.value, b2 != null && gb(a2, !!c2.multiple, b2, false);
  }
};
Gb = Xj;
Hb = function(a2, b2, c2, d2, e2) {
  var f2 = E, g2 = X.transition;
  try {
    return X.transition = 0, E = 1, a2(b2, c2, d2, e2);
  } finally {
    E = f2, X.transition = g2, N === 0 && Dj();
  }
};
Ib = function() {
  (N & 25) === 0 && (hg(), Qj());
};
Jb = function(a2, b2) {
  var c2 = N;
  N |= 2;
  try {
    return a2(b2);
  } finally {
    N = c2, N === 0 && (Dj(), fg && hg());
  }
};
var zk = { Events: [Cb, ye, Db, Eb, Fb, Qj, { current: false }] }, Ak = { findFiberByHostInstance: bd, bundleType: 0, version: "18.0.0-e6be2d531", rendererPackageName: "react-dom" };
var Bk = { bundleType: Ak.bundleType, version: Ak.version, rendererPackageName: Ak.rendererPackageName, rendererConfig: Ak.rendererConfig, overrideHookState: null, overrideHookStateDeletePath: null, overrideHookStateRenamePath: null, overrideProps: null, overridePropsDeletePath: null, overridePropsRenamePath: null, setErrorHandler: null, setSuspenseHandler: null, scheduleUpdate: null, currentDispatcherRef: ta.ReactCurrentDispatcher, findHostInstanceByFiber: function(a2) {
  a2 = cc(a2);
  return a2 === null ? null : a2.stateNode;
}, findFiberByHostInstance: Ak.findFiberByHostInstance || sk, findHostInstancesForRefresh: null, scheduleRefresh: null, scheduleRoot: null, setRefreshHandler: null, getCurrentFiber: null, reconcilerVersion: "18.0.0-e6be2d531" };
if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined") {
  var Ck = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (!Ck.isDisabled && Ck.supportsFiber)
    try {
      pc = Ck.inject(Bk), qc = Ck;
    } catch (a2) {
    }
}
reactDom_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = zk;
reactDom_production_min.createPortal = function(a2, b2) {
  var c2 = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
  if (!wk(b2))
    throw Error(v(200));
  return nk(a2, b2, null, c2);
};
reactDom_production_min.createRoot = function(a2, b2) {
  if (!wk(a2))
    throw Error(v(299));
  return new tk(a2, b2);
};
reactDom_production_min.findDOMNode = function(a2) {
  if (a2 == null)
    return null;
  if (a2.nodeType === 1)
    return a2;
  var b2 = a2._reactInternals;
  if (b2 === void 0) {
    if (typeof a2.render === "function")
      throw Error(v(188));
    throw Error(v(268, Object.keys(a2)));
  }
  a2 = cc(b2);
  a2 = a2 === null ? null : a2.stateNode;
  return a2;
};
reactDom_production_min.flushSync = Zj;
reactDom_production_min.hydrate = function(a2, b2, c2) {
  if (!wk(b2))
    throw Error(v(200));
  return yk(null, a2, b2, true, c2);
};
reactDom_production_min.render = function(a2, b2, c2) {
  if (!wk(b2))
    throw Error(v(200));
  return yk(null, a2, b2, false, c2);
};
reactDom_production_min.unmountComponentAtNode = function(a2) {
  if (!wk(a2))
    throw Error(v(40));
  return a2._reactRootContainer ? (Yj(function() {
    yk(null, null, a2, false, function() {
      a2._reactRootContainer = null;
      a2[yf] = null;
    });
  }), true) : false;
};
reactDom_production_min.unstable_batchedUpdates = Xj;
reactDom_production_min.unstable_renderSubtreeIntoContainer = function(a2, b2, c2, d2) {
  if (!wk(c2))
    throw Error(v(200));
  if (a2 == null || a2._reactInternals === void 0)
    throw Error(v(38));
  return yk(a2, b2, c2, false, d2);
};
reactDom_production_min.version = "18.0.0-e6be2d531";
function checkDCE() {
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== "function") {
    return;
  }
  try {
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    console.error(err);
  }
}
{
  checkDCE();
  reactDom.exports = reactDom_production_min;
}
var ReactDOM = reactDom.exports;
var unstable_batchedUpdates = ReactDOM.unstable_batchedUpdates;
notifyManager.setBatchNotifyFunction(unstable_batchedUpdates);
var logger = console;
setLogger(logger);
var defaultContext = /* @__PURE__ */ React$2.createContext(void 0);
var QueryClientSharingContext = /* @__PURE__ */ React$2.createContext(false);
function getQueryClientContext(contextSharing) {
  if (contextSharing && typeof window !== "undefined") {
    if (!window.ReactQueryClientContext) {
      window.ReactQueryClientContext = defaultContext;
    }
    return window.ReactQueryClientContext;
  }
  return defaultContext;
}
var useQueryClient = function useQueryClient2() {
  var queryClient = React$2.useContext(getQueryClientContext(React$2.useContext(QueryClientSharingContext)));
  if (!queryClient) {
    throw new Error("No QueryClient set, use QueryClientProvider to set one");
  }
  return queryClient;
};
var QueryClientProvider = function QueryClientProvider2(_ref) {
  var client = _ref.client, _ref$contextSharing = _ref.contextSharing, contextSharing = _ref$contextSharing === void 0 ? false : _ref$contextSharing, children = _ref.children;
  React$2.useEffect(function() {
    client.mount();
    return function() {
      client.unmount();
    };
  }, [client]);
  var Context2 = getQueryClientContext(contextSharing);
  return /* @__PURE__ */ React$2.createElement(QueryClientSharingContext.Provider, {
    value: contextSharing
  }, /* @__PURE__ */ React$2.createElement(Context2.Provider, {
    value: client
  }, children));
};
function createValue() {
  var _isReset = false;
  return {
    clearReset: function clearReset() {
      _isReset = false;
    },
    reset: function reset() {
      _isReset = true;
    },
    isReset: function isReset() {
      return _isReset;
    }
  };
}
var QueryErrorResetBoundaryContext = /* @__PURE__ */ React$2.createContext(createValue());
var useQueryErrorResetBoundary = function useQueryErrorResetBoundary2() {
  return React$2.useContext(QueryErrorResetBoundaryContext);
};
function shouldThrowError(suspense, _useErrorBoundary, error) {
  if (typeof _useErrorBoundary === "function") {
    return _useErrorBoundary(error);
  }
  if (typeof _useErrorBoundary === "boolean")
    return _useErrorBoundary;
  return !!suspense;
}
function useBaseQuery(options, Observer) {
  var mountedRef = React$2.useRef(false);
  var _React$useState = React$2.useState(0), forceUpdate = _React$useState[1];
  var queryClient = useQueryClient();
  var errorResetBoundary = useQueryErrorResetBoundary();
  var defaultedOptions = queryClient.defaultQueryObserverOptions(options);
  defaultedOptions.optimisticResults = true;
  if (defaultedOptions.onError) {
    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);
  }
  if (defaultedOptions.onSuccess) {
    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);
  }
  if (defaultedOptions.onSettled) {
    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);
  }
  if (defaultedOptions.suspense) {
    if (typeof defaultedOptions.staleTime !== "number") {
      defaultedOptions.staleTime = 1e3;
    }
    if (defaultedOptions.cacheTime === 0) {
      defaultedOptions.cacheTime = 1;
    }
  }
  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {
    if (!errorResetBoundary.isReset()) {
      defaultedOptions.retryOnMount = false;
    }
  }
  var _React$useState2 = React$2.useState(function() {
    return new Observer(queryClient, defaultedOptions);
  }), observer = _React$useState2[0];
  var result = observer.getOptimisticResult(defaultedOptions);
  React$2.useEffect(function() {
    mountedRef.current = true;
    errorResetBoundary.clearReset();
    var unsubscribe = observer.subscribe(notifyManager.batchCalls(function() {
      if (mountedRef.current) {
        forceUpdate(function(x2) {
          return x2 + 1;
        });
      }
    }));
    observer.updateResult();
    return function() {
      mountedRef.current = false;
      unsubscribe();
    };
  }, [errorResetBoundary, observer]);
  React$2.useEffect(function() {
    observer.setOptions(defaultedOptions, {
      listeners: false
    });
  }, [defaultedOptions, observer]);
  if (defaultedOptions.suspense && result.isLoading) {
    throw observer.fetchOptimistic(defaultedOptions).then(function(_ref) {
      var data = _ref.data;
      defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);
      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);
    }).catch(function(error) {
      errorResetBoundary.clearReset();
      defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);
      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(void 0, error);
    });
  }
  if (result.isError && !result.isFetching && shouldThrowError(defaultedOptions.suspense, defaultedOptions.useErrorBoundary, result.error)) {
    throw result.error;
  }
  if (defaultedOptions.notifyOnChangeProps === "tracked") {
    result = observer.trackResult(result);
  }
  return result;
}
function useQuery$1(arg1, arg2, arg3) {
  var parsedOptions = parseQueryArgs(arg1, arg2, arg3);
  return useBaseQuery(parsedOptions, QueryObserver);
}
function useHydrate(state2, options) {
  var queryClient = useQueryClient();
  var optionsRef = React$2.useRef(options);
  optionsRef.current = options;
  React$2.useMemo(function() {
    if (state2) {
      hydrate(queryClient, state2, optionsRef.current);
    }
  }, [queryClient, state2]);
}
var Hydrate = function Hydrate2(_ref) {
  var children = _ref.children, options = _ref.options, state2 = _ref.state;
  useHydrate(state2, options);
  return children;
};
const isWorker = Boolean(unstableFizz_browser.exports.renderToReadableStream);
const STREAM_ABORT_TIMEOUT_MS = 3e3;
const renderHydrogen = (App2, hook) => {
  const render2 = async function(url, { context: context2, request, isReactHydrationRequest, dev }) {
    var _a, _b;
    const state2 = isReactHydrationRequest ? JSON.parse((_b = (_a = url.searchParams) === null || _a === void 0 ? void 0 : _a.get("state")) !== null && _b !== void 0 ? _b : "{}") : { pathname: url.pathname, search: url.search };
    const { ReactApp, helmetContext, componentResponse } = buildReactApp({
      App: App2,
      state: state2,
      context: context2,
      request,
      dev
    });
    const body = await renderApp(ReactApp, state2, isReactHydrationRequest);
    if (componentResponse.customBody) {
      return { body: await componentResponse.customBody, url, componentResponse };
    }
    let params = __spreadValues({ url }, extractHeadElements(helmetContext));
    if (hook) {
      params = hook(params) || params;
    }
    return __spreadValues({ body, componentResponse }, params);
  };
  const stream = function(url, { context: context2, request, response, template, dev }) {
    const state2 = { pathname: url.pathname, search: url.search };
    const { ReactApp, componentResponse } = buildReactApp({
      App: App2,
      state: state2,
      context: context2,
      request,
      dev
    });
    response.socket.on("error", (error) => {
      console.error("Fatal", error);
    });
    let didError;
    const head = template.match(/<head>(.+?)<\/head>/s)[1];
    const { startWriting, abort } = unstableFizz_browser.exports.pipeToNodeWritable(React$2.createElement(Html, { head }, React$2.createElement(ReactApp, __spreadValues({}, state2))), response, {
      onReadyToStream() {
        response.setHeader(getCacheControlHeader({ dev }), componentResponse.cacheControlHeader);
        if (!componentResponse.canStream())
          return;
        response.statusCode = didError ? 500 : 200;
        response.setHeader("Content-type", "text/html");
        response.write("<!DOCTYPE html>");
        startWriting();
        if (dev && didError) {
          response.write(getErrorMarkup(didError));
        }
      },
      onCompleteAll() {
        var _a;
        if (componentResponse.canStream())
          return;
        response.statusCode = (_a = componentResponse.status) !== null && _a !== void 0 ? _a : didError ? 500 : 200;
        componentResponse.headers.forEach((value, header) => {
          response.setHeader(header, value);
        });
        if (componentResponse.customBody) {
          if (componentResponse.customBody instanceof Promise) {
            componentResponse.customBody.then((body) => response.end(body));
          } else {
            response.end(componentResponse.customBody);
          }
        } else {
          response.setHeader("Content-type", "text/html");
          response.write("<!DOCTYPE html>");
          startWriting();
        }
      },
      onError(error) {
        didError = error;
        if (dev && response.headersSent) {
          response.write(getErrorMarkup(error));
        }
        console.error(error);
      }
    });
    setTimeout(abort, STREAM_ABORT_TIMEOUT_MS);
  };
  const hydrate2 = function(url, { context: context2, request, response, dev }) {
    const state2 = JSON.parse(url.searchParams.get("state") || "{}");
    const { ReactApp, componentResponse } = buildReactApp({
      App: App2,
      state: state2,
      context: context2,
      request,
      dev
    });
    response.socket.on("error", (error) => {
      console.error("Fatal", error);
    });
    let didError;
    const writer = new HydrationWriter();
    const { startWriting, abort } = unstableFizz_browser.exports.pipeToNodeWritable(React$2.createElement(HydrationContext.Provider, { value: true }, React$2.createElement(ReactApp, __spreadValues({}, state2))), writer, {
      onCompleteAll() {
        startWriting();
        writer.drain();
        response.statusCode = didError ? 500 : 200;
        response.setHeader(getCacheControlHeader({ dev }), componentResponse.cacheControlHeader);
        response.end(generateWireSyntaxFromRenderedHtml(writer.toString()));
      },
      onError(error) {
        didError = error;
        console.error(error);
      }
    });
    setTimeout(abort, STREAM_ABORT_TIMEOUT_MS);
  };
  return {
    render: render2,
    stream,
    hydrate: hydrate2
  };
};
function buildReactApp({ App: App2, state: state2, context: context2, request, dev }) {
  const helmetContext = {};
  const componentResponse = new ServerComponentResponse();
  const ReactApp = (props) => React$2.createElement(StaticRouter, { location: { pathname: state2.pathname, search: state2.search }, context: context2 }, React$2.createElement(R$1, { context: helmetContext }, React$2.createElement(App2, __spreadValues({ request, response: componentResponse }, props))));
  return { helmetContext, ReactApp, componentResponse };
}
function extractHeadElements(helmetContext) {
  const { helmet } = helmetContext;
  return {
    base: helmet.base.toString(),
    bodyAttributes: helmet.bodyAttributes.toString(),
    htmlAttributes: helmet.htmlAttributes.toString(),
    link: helmet.link.toString(),
    meta: helmet.meta.toString(),
    noscript: helmet.noscript.toString(),
    script: helmet.script.toString(),
    style: helmet.style.toString(),
    title: helmet.title.toString()
  };
}
function supportsReadableStream() {
  try {
    new ReadableStream();
    return true;
  } catch (_e) {
    return false;
  }
}
async function renderApp(ReactApp, state2, isReactHydrationRequest) {
  if (isWorker && !supportsReadableStream()) {
    return renderAppFromStringWithPrepass(ReactApp, state2, isReactHydrationRequest);
  }
  const app = isReactHydrationRequest ? React$2.createElement(HydrationContext.Provider, { value: true }, React$2.createElement(ReactApp, __spreadValues({}, state2))) : React$2.createElement(ReactApp, __spreadValues({}, state2));
  return renderAppFromBufferedStream(app, isReactHydrationRequest);
}
function renderAppFromBufferedStream(app, isReactHydrationRequest) {
  return new Promise((resolve, reject) => {
    if (isWorker) {
      let isComplete = false;
      const stream = unstableFizz_browser.exports.renderToReadableStream(app, {
        onCompleteAll() {
          isComplete = true;
        },
        onError(error) {
          console.error(error);
          reject(error);
        }
      });
      async function checkForResults() {
        if (!isComplete) {
          setTimeout(checkForResults, 100);
          return;
        }
        const res = new Response(stream);
        if (isReactHydrationRequest) {
          resolve(generateWireSyntaxFromRenderedHtml(await res.text()));
        } else {
          resolve(await res.text());
        }
      }
      checkForResults();
    } else {
      const writer = new HydrationWriter();
      const { startWriting } = unstableFizz_browser.exports.pipeToNodeWritable(app, writer, {
        onCompleteAll() {
          startWriting();
          writer.drain();
          if (isReactHydrationRequest) {
            resolve(generateWireSyntaxFromRenderedHtml(writer.toString()));
          } else {
            resolve(writer.toString());
          }
        },
        onError(error) {
          console.error(error);
          reject(error);
        }
      });
    }
  });
}
async function renderAppFromStringWithPrepass(ReactApp, state2, isReactHydrationRequest) {
  const hydrationContext = {};
  const app = isReactHydrationRequest ? React$2.createElement(HydrationContext.Provider, { value: true }, React$2.createElement(ReactApp, __spreadValues({ hydrationContext }, state2))) : React$2.createElement(ReactApp, __spreadValues({ hydrationContext }, state2));
  await ssrPrepass(app);
  if (hydrationContext.queryClient) {
    hydrationContext.dehydratedState = dehydrate(hydrationContext.queryClient);
  }
  const body = server_browser.exports.renderToString(app);
  return isReactHydrationRequest ? generateWireSyntaxFromRenderedHtml(body) : body;
}
const ShopifyContext = react.exports.createContext(null);
const DEFAULT_API_VERSION = "unstable";
var jsxRuntime = { exports: {} };
var reactJsxRuntime_production_min = {};
/** @license React vundefined
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var f = react.exports, g = 60103;
reactJsxRuntime_production_min.Fragment = 60107;
if (typeof Symbol === "function" && Symbol.for) {
  var h = Symbol.for;
  g = h("react.element");
  reactJsxRuntime_production_min.Fragment = h("react.fragment");
}
var m = Object.prototype.hasOwnProperty, n = f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, p = { key: true, ref: true, __self: true, __source: true };
function q(c2, a2, k2) {
  var b2, d2 = {}, e2 = null, l2 = null;
  k2 !== void 0 && (e2 = "" + k2);
  a2.key !== void 0 && (e2 = "" + a2.key);
  a2.ref !== void 0 && (l2 = a2.ref);
  for (b2 in a2)
    m.call(a2, b2) && !p.hasOwnProperty(b2) && (d2[b2] = a2[b2]);
  if (c2 && c2.defaultProps)
    for (b2 in a2 = c2.defaultProps, a2)
      d2[b2] === void 0 && (d2[b2] = a2[b2]);
  return { $$typeof: g, type: c2, key: e2, ref: l2, props: d2, _owner: n.current };
}
reactJsxRuntime_production_min.jsx = q;
reactJsxRuntime_production_min.jsxs = q;
{
  jsxRuntime.exports = reactJsxRuntime_production_min;
}
const jsx = jsxRuntime.exports.jsx;
const jsxs = jsxRuntime.exports.jsxs;
const Fragment = jsxRuntime.exports.Fragment;
function ShopifyProvider({
  shopifyConfig: shopifyConfig2,
  children
}) {
  const shopifyProviderValue = react.exports.useMemo(() => {
    var _a;
    return __spreadProps(__spreadValues({
      locale: "en-us",
      graphqlApiVersion: DEFAULT_API_VERSION
    }, shopifyConfig2), {
      storeDomain: (_a = shopifyConfig2 === null || shopifyConfig2 === void 0 ? void 0 : shopifyConfig2.storeDomain) === null || _a === void 0 ? void 0 : _a.replace(/^https?:\/\//, "")
    });
  }, [shopifyConfig2]);
  return /* @__PURE__ */ jsx(ShopifyContext.Provider, {
    value: shopifyProviderValue,
    children
  });
}
function useQuery(key, queryFn, queryOptions) {
  async function cachedQueryFn() {
    const cacheResponse = await getItemFromCache(key);
    async function generateNewOutput() {
      return await queryFn({});
    }
    if (cacheResponse) {
      const [output, response] = cacheResponse;
      if (isStale$1(response)) {
        console.log("[useQuery] cache stale; generating new response in background");
        const lockKey = `lock-${key}`;
        runDelayedFunction(async () => {
          console.log(`[stale regen] fetching cache lock`);
          const lockExists = await getItemFromCache(lockKey);
          if (lockExists)
            return;
          await setItemInCache(lockKey, true);
          try {
            const output2 = await generateNewOutput();
            await setItemInCache(key, output2, queryOptions === null || queryOptions === void 0 ? void 0 : queryOptions.cache);
          } catch (e2) {
            console.error(`Error generating async response: ${e2.message}`);
          } finally {
            await deleteItemFromCache(lockKey);
          }
        });
      }
      return output;
    }
    const newOutput = await generateNewOutput();
    runDelayedFunction(async () => await setItemInCache(key, newOutput, queryOptions === null || queryOptions === void 0 ? void 0 : queryOptions.cache));
    return newOutput;
  }
  return useQuery$1(key, cachedQueryFn, queryOptions);
}
function QueryProvider({ children, hydrationContext }) {
  const queryClient = new QueryClient({
    defaultOptions: { queries: { suspense: true } }
  });
  if (hydrationContext) {
    hydrationContext.queryClient = queryClient;
  }
  return React$2.createElement(QueryClientProvider, { client: queryClient }, React$2.createElement(Hydrate, { state: hydrationContext === null || hydrationContext === void 0 ? void 0 : hydrationContext.dehydratedState }, children));
}
function ShopifyServerProvider({ children, shopifyConfig: shopifyConfig2, hydrationContext }) {
  return React$2.createElement(ShopifyProvider, { shopifyConfig: shopifyConfig2 }, React$2.createElement(QueryProvider, { hydrationContext }, children));
}
function wrapInClientMarker(meta) {
  const {
    component,
    name
  } = meta;
  if (!component || typeof component !== "function" && !Object.prototype.hasOwnProperty.call(component, "render")) {
    return component;
  }
  const wrappedComponent = {
    [name]: (props) => /* @__PURE__ */ jsx(ClientMarker, {
      props,
      meta
    })
  }[name];
  for (const [key, value] of Object.entries(component)) {
    Object.defineProperty(wrappedComponent, key, {
      enumerable: true,
      value
    });
  }
  return wrappedComponent;
}
function ClientMarker({
  props: allProps,
  meta: {
    name,
    id: id2,
    component: Component,
    named
  }
}) {
  const isHydrating = react.exports.useContext(HydrationContext);
  if (!isHydrating)
    return /* @__PURE__ */ jsx(Component, __spreadValues({}, allProps));
  let _a = allProps, {
    children
  } = _a, props = __objRest(_a, [
    "children"
  ]);
  props = renderReactProps(props);
  const shouldRenderDuringHydration = name.endsWith("Provider");
  return /* @__PURE__ */ jsx("span", {
    "data-client-component": name,
    "data-id": id2,
    "data-props": JSON.stringify(props),
    "data-named": named,
    children: shouldRenderDuringHydration ? /* @__PURE__ */ jsx(Component, __spreadProps(__spreadValues({}, allProps), {
      children
    })) : children
  });
}
const ServerStateContext = react.exports.createContext(null);
function ServerStateProvider({ serverState, setServerState, children }) {
  const [pending, startTransition] = react.exports.useTransition();
  const setServerStateCallback = react.exports.useCallback((input, value2) => {
    startTransition(() => {
      if (typeof input === "function") {
        return setServerState(input);
      }
      if (typeof input === "object") {
        return setServerState((prev) => __spreadValues(__spreadValues({}, prev), input));
      }
      if (typeof input === "string") {
        return setServerState((prev) => __spreadProps(__spreadValues({}, prev), {
          [input]: value2
        }));
      }
    });
  }, [setServerState, startTransition]);
  const value = react.exports.useMemo(() => ({
    pending,
    serverState,
    setServerState: setServerStateCallback
  }), [serverState, setServerStateCallback, pending]);
  return React$2.createElement(ServerStateContext.Provider, { value }, children);
}
wrapInClientMarker({ name: "ServerStateProvider", id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/node_modules/@shopify/hydrogen/dist/esnext/foundation/ServerStateProvider/ServerStateProvider.client.js", component: ServerStateProvider, named: true });
function useShop() {
  const context2 = react.exports.useContext(ShopifyContext);
  if (!context2) {
    throw new Error("No Shopify Context found");
  }
  return context2;
}
function DefaultRoutes({
  pages,
  serverState,
  fallback
}) {
  const {
    path
  } = useRouteMatch();
  const routes = react.exports.useMemo(() => createRoutesFromPages(pages, path), [pages, path]);
  return /* @__PURE__ */ jsxs(Switch, {
    children: [routes.map((route) => /* @__PURE__ */ jsx(Route, {
      exact: route.exact,
      path: route.path,
      children: /* @__PURE__ */ jsx(route.component, __spreadValues({}, serverState))
    }, route.path)), fallback && /* @__PURE__ */ jsx(Route, {
      path: "*",
      children: fallback
    })]
  });
}
function createRoutesFromPages(pages, topLevelPath = "*") {
  const topLevelPrefix = topLevelPath.replace("*", "").replace(/\/$/, "");
  const routes = Object.keys(pages).map((key) => {
    const path = key.replace("./pages", "").replace(/\.server\.(t|j)sx?$/, "").replace(/\/index$/i, "/").replace(/\b[A-Z]/, (firstLetter) => firstLetter.toLowerCase()).replace(/\[(?:[.]{3})?(\w+?)\]/g, (_match, param) => `:${param}`);
    const exact = !/\[(?:[.]{3})(\w+?)\]/.test(key);
    return {
      path: topLevelPrefix + path,
      component: pages[key].default,
      exact
    };
  });
  return [...routes.filter((route) => !route.path.includes(":")), ...routes.filter((route) => route.path.includes(":"))];
}
const Link = wrapInClientMarker({ name: "Link", id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/node_modules/@shopify/hydrogen/dist/esnext/components/Link/Link.client.js", component: Link$1, named: true });
const CartAttributesUpdate = `
mutation CartAttributesUpdate($attributes: [AttributeInput!]!, $cartId: ID!, $numCartLines: Int = 250, $country: CountryCode = ZZ) @inContext(country: $country) {
  cartAttributesUpdate(attributes: $attributes, cartId: $cartId) {
    cart {
      ...CartFragment
    }
  }
}

fragment CartFragment on Cart {
  id
  checkoutUrl
  buyerIdentity {
    countryCode
    customer {
      id
      email
      firstName
      lastName
      displayName
    }
    email
    phone
  }
  lines(first: $numCartLines) {
    edges {
      node {
        id
        quantity
        attributes {
          key
          value
        }
        merchandise {
          ... on ProductVariant {
            id
            availableForSale
            compareAtPriceV2 {
              ...MoneyFragment
            }
            priceV2 {
              ...MoneyFragment
            }
            requiresShipping
            title
            image {
              ...ImageFragment
            }
            product {
              handle
              title
            }
            selectedOptions {
              name
              value
            }
          }
        }
      }
    }
  }
  estimatedCost {
    subtotalAmount {
      ...MoneyFragment
    }
    totalAmount {
      ...MoneyFragment
    }
    totalDutyAmount {
      ...MoneyFragment
    }
    totalTaxAmount {
      ...MoneyFragment
    }
  }
  note
  attributes {
    key
    value
  }
  discountCodes {
    code
  }
}

fragment MoneyFragment on MoneyV2 {
  currencyCode
  amount
}
fragment ImageFragment on Image {
  id
  url
  altText
  width
  height
}
`;
const CartBuyerIdentityUpdate = `
mutation CartBuyerIdentityUpdate(
  $cartId: ID!
  $buyerIdentity: CartBuyerIdentityInput!
  $numCartLines: Int = 250
  $country: CountryCode = ZZ
) @inContext(country: $country) {
  cartBuyerIdentityUpdate(cartId: $cartId, buyerIdentity: $buyerIdentity) {
    cart {
      ...CartFragment
    }
  }
}

fragment CartFragment on Cart {
  id
  checkoutUrl
  buyerIdentity {
    countryCode
    customer {
      id
      email
      firstName
      lastName
      displayName
    }
    email
    phone
  }
  lines(first: $numCartLines) {
    edges {
      node {
        id
        quantity
        attributes {
          key
          value
        }
        merchandise {
          ... on ProductVariant {
            id
            availableForSale
            compareAtPriceV2 {
              ...MoneyFragment
            }
            priceV2 {
              ...MoneyFragment
            }
            requiresShipping
            title
            image {
              ...ImageFragment
            }
            product {
              handle
              title
            }
            selectedOptions {
              name
              value
            }
          }
        }
      }
    }
  }
  estimatedCost {
    subtotalAmount {
      ...MoneyFragment
    }
    totalAmount {
      ...MoneyFragment
    }
    totalDutyAmount {
      ...MoneyFragment
    }
    totalTaxAmount {
      ...MoneyFragment
    }
  }
  note
  attributes {
    key
    value
  }
  discountCodes {
    code
  }
}

fragment MoneyFragment on MoneyV2 {
  currencyCode
  amount
}
fragment ImageFragment on Image {
  id
  url
  altText
  width
  height
}
`;
const CartCreate = `
mutation CartCreate($input: CartInput!, $numCartLines: Int = 250, $country: CountryCode = ZZ) @inContext(country: $country) {
  cartCreate(input: $input) {
    cart {
      ...CartFragment
    }
  }
}

fragment CartFragment on Cart {
  id
  checkoutUrl
  buyerIdentity {
    countryCode
    customer {
      id
      email
      firstName
      lastName
      displayName
    }
    email
    phone
  }
  lines(first: $numCartLines) {
    edges {
      node {
        id
        quantity
        attributes {
          key
          value
        }
        merchandise {
          ... on ProductVariant {
            id
            availableForSale
            compareAtPriceV2 {
              ...MoneyFragment
            }
            priceV2 {
              ...MoneyFragment
            }
            requiresShipping
            title
            image {
              ...ImageFragment
            }
            product {
              handle
              title
            }
            selectedOptions {
              name
              value
            }
          }
        }
      }
    }
  }
  estimatedCost {
    subtotalAmount {
      ...MoneyFragment
    }
    totalAmount {
      ...MoneyFragment
    }
    totalDutyAmount {
      ...MoneyFragment
    }
    totalTaxAmount {
      ...MoneyFragment
    }
  }
  note
  attributes {
    key
    value
  }
  discountCodes {
    code
  }
}

fragment MoneyFragment on MoneyV2 {
  currencyCode
  amount
}
fragment ImageFragment on Image {
  id
  url
  altText
  width
  height
}
`;
const CartDiscountCodesUpdate = `
mutation CartDiscountCodesUpdate($cartId: ID!, $discountCodes: [String!], $numCartLines: Int = 250, $country: CountryCode = ZZ) @inContext(country: $country) {
  cartDiscountCodesUpdate(cartId: $cartId, discountCodes: $discountCodes) {
    cart {
      ...CartFragment
    }
  }
}

fragment CartFragment on Cart {
  id
  checkoutUrl
  buyerIdentity {
    countryCode
    customer {
      id
      email
      firstName
      lastName
      displayName
    }
    email
    phone
  }
  lines(first: $numCartLines) {
    edges {
      node {
        id
        quantity
        attributes {
          key
          value
        }
        merchandise {
          ... on ProductVariant {
            id
            availableForSale
            compareAtPriceV2 {
              ...MoneyFragment
            }
            priceV2 {
              ...MoneyFragment
            }
            requiresShipping
            title
            image {
              ...ImageFragment
            }
            product {
              handle
              title
            }
            selectedOptions {
              name
              value
            }
          }
        }
      }
    }
  }
  estimatedCost {
    subtotalAmount {
      ...MoneyFragment
    }
    totalAmount {
      ...MoneyFragment
    }
    totalDutyAmount {
      ...MoneyFragment
    }
    totalTaxAmount {
      ...MoneyFragment
    }
  }
  note
  attributes {
    key
    value
  }
  discountCodes {
    code
  }
}

fragment MoneyFragment on MoneyV2 {
  currencyCode
  amount
}
fragment ImageFragment on Image {
  id
  url
  altText
  width
  height
}
`;
const CartLineAdd = `
mutation CartLineAdd($cartId: ID!, $lines: [CartLineInput!]!, $numCartLines: Int = 250, $country: CountryCode = ZZ) @inContext(country: $country) {
  cartLinesAdd(cartId: $cartId, lines: $lines) {
    cart {
      ...CartFragment
    }
  }
}

fragment CartFragment on Cart {
  id
  checkoutUrl
  buyerIdentity {
    countryCode
    customer {
      id
      email
      firstName
      lastName
      displayName
    }
    email
    phone
  }
  lines(first: $numCartLines) {
    edges {
      node {
        id
        quantity
        attributes {
          key
          value
        }
        merchandise {
          ... on ProductVariant {
            id
            availableForSale
            compareAtPriceV2 {
              ...MoneyFragment
            }
            priceV2 {
              ...MoneyFragment
            }
            requiresShipping
            title
            image {
              ...ImageFragment
            }
            product {
              handle
              title
            }
            selectedOptions {
              name
              value
            }
          }
        }
      }
    }
  }
  estimatedCost {
    subtotalAmount {
      ...MoneyFragment
    }
    totalAmount {
      ...MoneyFragment
    }
    totalDutyAmount {
      ...MoneyFragment
    }
    totalTaxAmount {
      ...MoneyFragment
    }
  }
  note
  attributes {
    key
    value
  }
  discountCodes {
    code
  }
}

fragment MoneyFragment on MoneyV2 {
  currencyCode
  amount
}
fragment ImageFragment on Image {
  id
  url
  altText
  width
  height
}
`;
const CartLineRemove = `
mutation CartLineRemove($cartId: ID!, $lines: [ID!]!, $numCartLines: Int = 250, $country: CountryCode = ZZ) @inContext(country: $country) {
  cartLinesRemove(cartId: $cartId, lineIds: $lines) {
    cart {
      ...CartFragment
    }
  }
}

fragment CartFragment on Cart {
  id
  checkoutUrl
  buyerIdentity {
    countryCode
    customer {
      id
      email
      firstName
      lastName
      displayName
    }
    email
    phone
  }
  lines(first: $numCartLines) {
    edges {
      node {
        id
        quantity
        attributes {
          key
          value
        }
        merchandise {
          ... on ProductVariant {
            id
            availableForSale
            compareAtPriceV2 {
              ...MoneyFragment
            }
            priceV2 {
              ...MoneyFragment
            }
            requiresShipping
            title
            image {
              ...ImageFragment
            }
            product {
              handle
              title
            }
            selectedOptions {
              name
              value
            }
          }
        }
      }
    }
  }
  estimatedCost {
    subtotalAmount {
      ...MoneyFragment
    }
    totalAmount {
      ...MoneyFragment
    }
    totalDutyAmount {
      ...MoneyFragment
    }
    totalTaxAmount {
      ...MoneyFragment
    }
  }
  note
  attributes {
    key
    value
  }
  discountCodes {
    code
  }
}

fragment MoneyFragment on MoneyV2 {
  currencyCode
  amount
}
fragment ImageFragment on Image {
  id
  url
  altText
  width
  height
}
`;
const CartLineUpdate = `
mutation CartLineUpdate($cartId: ID!, $lines: [CartLineUpdateInput!]!, $numCartLines: Int = 250, $country: CountryCode = ZZ) @inContext(country: $country) {
  cartLinesUpdate(cartId: $cartId, lines: $lines) {
    cart {
      ...CartFragment
    }
  }
}

fragment CartFragment on Cart {
  id
  checkoutUrl
  buyerIdentity {
    countryCode
    customer {
      id
      email
      firstName
      lastName
      displayName
    }
    email
    phone
  }
  lines(first: $numCartLines) {
    edges {
      node {
        id
        quantity
        attributes {
          key
          value
        }
        merchandise {
          ... on ProductVariant {
            id
            availableForSale
            compareAtPriceV2 {
              ...MoneyFragment
            }
            priceV2 {
              ...MoneyFragment
            }
            requiresShipping
            title
            image {
              ...ImageFragment
            }
            product {
              handle
              title
            }
            selectedOptions {
              name
              value
            }
          }
        }
      }
    }
  }
  estimatedCost {
    subtotalAmount {
      ...MoneyFragment
    }
    totalAmount {
      ...MoneyFragment
    }
    totalDutyAmount {
      ...MoneyFragment
    }
    totalTaxAmount {
      ...MoneyFragment
    }
  }
  note
  attributes {
    key
    value
  }
  discountCodes {
    code
  }
}

fragment MoneyFragment on MoneyV2 {
  currencyCode
  amount
}
fragment ImageFragment on Image {
  id
  url
  altText
  width
  height
}
`;
const CartNoteUpdate = `
mutation CartNoteUpdate($cartId: ID!, $note: String, $numCartLines: Int = 250, $country: CountryCode = ZZ) @inContext(country: $country) {
  cartNoteUpdate(cartId: $cartId, note: $note) {
    cart {
      ...CartFragment
    }
  }
}

fragment CartFragment on Cart {
  id
  checkoutUrl
  buyerIdentity {
    countryCode
    customer {
      id
      email
      firstName
      lastName
      displayName
    }
    email
    phone
  }
  lines(first: $numCartLines) {
    edges {
      node {
        id
        quantity
        attributes {
          key
          value
        }
        merchandise {
          ... on ProductVariant {
            id
            availableForSale
            compareAtPriceV2 {
              ...MoneyFragment
            }
            priceV2 {
              ...MoneyFragment
            }
            requiresShipping
            title
            image {
              ...ImageFragment
            }
            product {
              handle
              title
            }
            selectedOptions {
              name
              value
            }
          }
        }
      }
    }
  }
  estimatedCost {
    subtotalAmount {
      ...MoneyFragment
    }
    totalAmount {
      ...MoneyFragment
    }
    totalDutyAmount {
      ...MoneyFragment
    }
    totalTaxAmount {
      ...MoneyFragment
    }
  }
  note
  attributes {
    key
    value
  }
  discountCodes {
    code
  }
}

fragment MoneyFragment on MoneyV2 {
  currencyCode
  amount
}
fragment ImageFragment on Image {
  id
  url
  altText
  width
  height
}
`;
const CartQuery = `
query CartQuery($id: ID!, $numCartLines: Int = 250, $country: CountryCode = ZZ) @inContext(country: $country) {
  cart(id: $id) {
    ...CartFragment
  }
}

fragment CartFragment on Cart {
  id
  checkoutUrl
  buyerIdentity {
    countryCode
    customer {
      id
      email
      firstName
      lastName
      displayName
    }
    email
    phone
  }
  lines(first: $numCartLines) {
    edges {
      node {
        id
        quantity
        attributes {
          key
          value
        }
        merchandise {
          ... on ProductVariant {
            id
            availableForSale
            compareAtPriceV2 {
              ...MoneyFragment
            }
            priceV2 {
              ...MoneyFragment
            }
            requiresShipping
            title
            image {
              ...ImageFragment
            }
            product {
              handle
              title
            }
            selectedOptions {
              name
              value
            }
          }
        }
      }
    }
  }
  estimatedCost {
    subtotalAmount {
      ...MoneyFragment
    }
    totalAmount {
      ...MoneyFragment
    }
    totalDutyAmount {
      ...MoneyFragment
    }
    totalTaxAmount {
      ...MoneyFragment
    }
  }
  note
  attributes {
    key
    value
  }
  discountCodes {
    code
  }
}

fragment MoneyFragment on MoneyV2 {
  currencyCode
  amount
}
fragment ImageFragment on Image {
  id
  url
  altText
  width
  height
}
`;
const ExternalVideoFragment = `fragment ExternalVideoFragment on ExternalVideo {
  id
  embeddedUrl
  host
}

`;
const ImageFragment = `fragment ImageFragment on Image {
  id
  url
  altText
  width
  height
}

`;
const Localization = `query Localization {
  localization {
    country {
      isoCode
      name
      currency {
        isoCode
      }
    }
    availableCountries {
      isoCode
      name
      currency {
        isoCode
      }
    }
  }
}

`;
const MediaFileFragment$1 = `
fragment MediaFileFragment on Media {
  ... on MediaImage {
    mediaContentType
    image {
      ...ImageFragment
    }
  }
  ... on Video {
    mediaContentType
    ...VideoFragment
  }
  ... on ExternalVideo {
    mediaContentType
    ...ExternalVideoFragment
  }
  ... on Model3d {
    mediaContentType
    ...Model3DFragment
  }
}

fragment ImageFragment on Image {
  id
  url
  altText
  width
  height
}

fragment VideoFragment on Video {
  id
  previewImage {
    url
  }
  sources {
    mimeType
    url
  }
}

fragment ExternalVideoFragment on ExternalVideo {
  id
  embeddedUrl
  host
}

fragment Model3DFragment on Model3d {
  id
  alt
  mediaContentType
  previewImage {
    url
  }
  sources {
    url
  }
}
`;
const MetafieldFragment = `fragment MetafieldFragment on Metafield {
  id
  type
  namespace
  key
  value
  createdAt
  updatedAt
  description
}
`;
const Model3DFragment = `fragment Model3DFragment on Model3d {
  id
  alt
  mediaContentType
  previewImage {
    url
  }
  sources {
    url
  }
}

`;
const MoneyFragment = `fragment MoneyFragment on MoneyV2 {
  currencyCode
  amount
}
`;
const ProductProviderFragment$1 = `
fragment ProductProviderFragment on Product  {
  compareAtPriceRange {
    maxVariantPrice {
      ...MoneyFragment
    }
    minVariantPrice {
      ...MoneyFragment
    }
  }
  descriptionHtml
  handle
  id
  media(first: $numProductMedia) {
    edges {
      node {
        ...MediaFileFragment
      }
    }
  }
  metafields(first: $numProductMetafields) {
    edges {
      node {
        ...MetafieldFragment
      }
    }
  }
  priceRange {
    maxVariantPrice {
      ...MoneyFragment
    }
    minVariantPrice {
      ...MoneyFragment
    }
  }
  title
  variants(first: $numProductVariants) {
    edges {
      node {
        ...VariantFragment
      }
    }
  }
  sellingPlanGroups(first: $numProductSellingPlanGroups) {
    edges {
      node {
        ...SellingPlanGroupsFragment
      }
    }
  }
}


fragment MediaFileFragment on Media {
  ... on MediaImage {
    mediaContentType
    image {
      ...ImageFragment
    }
  }
  ... on Video {
    mediaContentType
    ...VideoFragment
  }
  ... on ExternalVideo {
    mediaContentType
    ...ExternalVideoFragment
  }
  ... on Model3d {
    mediaContentType
    ...Model3DFragment
  }
}

fragment MetafieldFragment on Metafield {
  id
  type
  namespace
  key
  value
  createdAt
  updatedAt
  description
}

fragment VariantFragment on ProductVariant {
  id
  title
  availableForSale
  image {
    ...ImageFragment
  }
  ...UnitPriceFragment
  priceV2 {
    ...MoneyFragment
  }
  compareAtPriceV2 {
    ...MoneyFragment
  }
  selectedOptions {
    name
    value
  }
  metafields(first: $numProductVariantMetafields) {
    edges {
      node {
        ...MetafieldFragment
      }
    }
  }
  sellingPlanAllocations(first: $numProductVariantSellingPlanAllocations) {
    edges {
      node {
        priceAdjustments {
          compareAtPrice {
            ...MoneyFragment
          }
          perDeliveryPrice {
            ...MoneyFragment
          }
          price {
            ...MoneyFragment
          }
          unitPrice {
            ...MoneyFragment
          }
        }
        sellingPlan {
          ...SellingPlanFragment
        }
      }
    }
  }
}


fragment SellingPlanGroupsFragment on SellingPlanGroup {
  sellingPlans(first:$numProductSellingPlans) {
    edges {
      node {
        ...SellingPlanFragment
      }
    }
  }
  appName
  name
  options {
    name
    values
  }
}
fragment MoneyFragment on MoneyV2 {
  currencyCode
  amount
}
fragment ImageFragment on Image {
  id
  url
  altText
  width
  height
}

fragment VideoFragment on Video {
  id
  previewImage {
    url
  }
  sources {
    mimeType
    url
  }
}

fragment ExternalVideoFragment on ExternalVideo {
  id
  embeddedUrl
  host
}

fragment Model3DFragment on Model3d {
  id
  alt
  mediaContentType
  previewImage {
    url
  }
  sources {
    url
  }
}


fragment SellingPlanFragment on SellingPlan {
  id
  description
  name
  options {
    name
    value
  }
  priceAdjustments {
    orderCount
    adjustmentValue {
      ...on SellingPlanFixedAmountPriceAdjustment {
        adjustmentAmount {
          ...MoneyFragment
        }
      }
      ...on SellingPlanFixedPriceAdjustment {
        price {
          ...MoneyFragment
        }
      }
      ...on SellingPlanPercentagePriceAdjustment {
        adjustmentPercentage
      }
    }
  }
  recurringDeliveries
}
fragment MoneyFragment on MoneyV2 {
  currencyCode
  amount
}
fragment ImageFragment on Image {
  id
  url
  altText
  width
  height
}


fragment UnitPriceFragment on ProductVariant {
  unitPriceMeasurement {
    measuredType
    quantityUnit
    quantityValue
    referenceUnit
    referenceValue
  }
  unitPrice {
    ...MoneyFragment
  }
}
fragment MoneyFragment on MoneyV2 {
  currencyCode
  amount
}
fragment MoneyFragment on MoneyV2 {
  currencyCode
  amount
}

fragment SellingPlanFragment on SellingPlan {
  id
  description
  name
  options {
    name
    value
  }
  priceAdjustments {
    orderCount
    adjustmentValue {
      ...on SellingPlanFixedAmountPriceAdjustment {
        adjustmentAmount {
          ...MoneyFragment
        }
      }
      ...on SellingPlanFixedPriceAdjustment {
        price {
          ...MoneyFragment
        }
      }
      ...on SellingPlanPercentagePriceAdjustment {
        adjustmentPercentage
      }
    }
  }
  recurringDeliveries
}
fragment MoneyFragment on MoneyV2 {
  currencyCode
  amount
}`;
const UnitPriceFragment = `
fragment UnitPriceFragment on ProductVariant {
  unitPriceMeasurement {
    measuredType
    quantityUnit
    quantityValue
    referenceUnit
    referenceValue
  }
  unitPrice {
    ...MoneyFragment
  }
}
fragment MoneyFragment on MoneyV2 {
  currencyCode
  amount
}`;
const VideoFragment = `fragment VideoFragment on Video {
  id
  previewImage {
    url
  }
  sources {
    mimeType
    url
  }
}

`;
const PRODUCTION_CDN_HOSTNAMES = [
  "cdn.shopify.com",
  "cdn.shopifycdn.net",
  "shopify-assets.shopifycdn.com",
  "shopify-assets.shopifycdn.net"
];
const LOCAL_CDN_HOSTNAMES = ["spin.dev"];
function addImageSizeParametersToUrl(url, { width, height, crop, scale, format }) {
  const newUrl = new URL(url);
  const sizePath = width || height ? `_${width !== null && width !== void 0 ? width : ""}x${height !== null && height !== void 0 ? height : ""}` : "";
  const cropPath = crop ? `_crop_${crop}` : "";
  const scalePath = scale ? `@${scale}x` : "";
  const progressive = format === "pjpg" ? `.progressive` : "";
  const asJPG = format === "jpg" ? `.jpg` : "";
  const fileDelimiterIndex = newUrl.pathname.lastIndexOf(".");
  const fileName = newUrl.pathname.substr(0, fileDelimiterIndex);
  const fileType = newUrl.pathname.substr(fileDelimiterIndex);
  newUrl.pathname = `${fileName}${sizePath}${cropPath}${scalePath}${progressive}${fileType}${asJPG}`;
  return newUrl.toString();
}
function shopifyImageLoader({ src, options }) {
  const newSrc = new URL(src);
  const allowedCDNHostnames = PRODUCTION_CDN_HOSTNAMES.concat(LOCAL_CDN_HOSTNAMES);
  const isShopifyServedImage = allowedCDNHostnames.some((allowedHostname) => newSrc.hostname.endsWith(allowedHostname));
  if (!isShopifyServedImage || options == null || !options.width && !options.height && !options.crop && !options.scale && !options.format) {
    return src;
  }
  return addImageSizeParametersToUrl(src, options);
}
function useImageUrl(src, options) {
  return react.exports.useMemo(() => {
    return src ? shopifyImageLoader({ src, options }) : src;
  }, [options, src]);
}
function getShopifyImageDimensions(image2, options) {
  const apiWidth = image2.width;
  const apiHeight = image2.height;
  if (apiWidth && apiHeight && ((options === null || options === void 0 ? void 0 : options.width) || (options === null || options === void 0 ? void 0 : options.height))) {
    const optionWidth = (options === null || options === void 0 ? void 0 : options.width) ? parseInt(options.width, 10) : void 0;
    const optionHeight = (options === null || options === void 0 ? void 0 : options.height) ? parseInt(options.height, 10) : void 0;
    if (optionWidth && optionHeight) {
      return { width: optionWidth, height: optionHeight };
    }
    if (!optionWidth && optionHeight) {
      return {
        width: Math.round(apiWidth / apiHeight * optionHeight),
        height: optionHeight
      };
    }
    if (optionWidth && !optionHeight) {
      return {
        width: optionWidth,
        height: Math.round(apiHeight / apiWidth * optionWidth)
      };
    }
  }
  return { width: apiWidth, height: apiHeight };
}
function addParametersToEmbeddedVideoUrl(url, parameters) {
  if (parameters == null) {
    return url;
  }
  const params = Object.keys(parameters).reduce((accumulator, param) => {
    const value = parameters[param];
    if (value == null) {
      return accumulator;
    }
    return accumulator + `&${param}=${value}`;
  }, "");
  return `${url}?${params}`;
}
function useEmbeddedVideoUrl(url, parameters) {
  return react.exports.useMemo(() => {
    if (!parameters) {
      return url;
    }
    return addParametersToEmbeddedVideoUrl(url, parameters);
  }, [url, parameters]);
}
const SCRIPTS_LOADED = {};
function loadScript(src, options) {
  const isScriptLoaded = SCRIPTS_LOADED[src];
  if (isScriptLoaded) {
    return isScriptLoaded;
  }
  const promise = new Promise((resolve, reject) => {
    const script = document.createElement("script");
    if (options === null || options === void 0 ? void 0 : options.module) {
      script.type = "module";
    }
    script.src = src;
    script.onload = () => {
      resolve(true);
    };
    script.onerror = () => {
      reject(false);
    };
    document.body.appendChild(script);
  });
  SCRIPTS_LOADED[src] = promise;
  return promise;
}
function flattenConnection(connection) {
  var _a;
  return ((_a = connection.edges) !== null && _a !== void 0 ? _a : []).map((edge) => edge.node);
}
function isClient() {
  return typeof window !== "undefined";
}
const UNIT_MAPPING = {
  mm: "millimeter",
  cm: "centimeter",
  m: "meter",
  in: "inch",
  ft: "foot",
  yd: "yard",
  ml: "milliliter",
  l: "liter",
  us_fl_oz: "fluid-ounce",
  us_gal: "gallon",
  kg: "kilogram",
  g: "gram",
  lb: "pound",
  oz: "ounce"
};
function getMeasurementAsString(measurement, locale = "en-us", options = {}) {
  let measure = {
    value: measurement.value,
    unit: UNIT_MAPPING[measurement.unit]
  };
  if (measure.unit == null) {
    measure = convertToSupportedUnit(measurement.value, measurement.unit);
  }
  return new Intl.NumberFormat(locale, __spreadProps(__spreadValues({}, options), {
    unit: measure.unit,
    style: "unit"
  })).format(measure.value);
}
function convertToSupportedUnit(value, unit) {
  switch (unit) {
    case "cl":
      return {
        value: value / 1e3,
        unit: "liter"
      };
    case "m3":
      return {
        value: value * 1e3,
        unit: "liter"
      };
    case "us_pt":
      return {
        value: value * 0.125,
        unit: "gallon"
      };
    case "us_qt":
      return {
        value: value * 0.5,
        unit: "gallon"
      };
    case "us_oz":
      return {
        value: value / 128,
        unit: "gallon"
      };
    case "imp_pt":
      return {
        value: value / 6.661,
        unit: "gallon"
      };
    case "imp_qt":
      return {
        value: value / 3.331,
        unit: "gallon"
      };
    case "imp_gal":
      return {
        value: value / 1.201,
        unit: "gallon"
      };
    case "imp_fl_oz":
      return {
        value: value * 0.96076,
        unit: "fluid-ounce"
      };
    default:
      throw new Error(`Unit not supported: ${unit}`);
  }
}
function parseMetafieldValue(metafield) {
  if (metafield.value == null) {
    return metafield.value;
  }
  switch (metafield.type) {
    case "boolean":
      return metafield.value == "true";
    case "number_integer":
      return parseInt(metafield.value);
    case "number_decimal":
      return parseFloat(metafield.value);
    case "date":
    case "date_time":
      return new Date(metafield.value);
    case "json":
    case "weight":
    case "dimension":
    case "volume":
    case "rating":
      return JSON.parse(metafield.value);
    case "color":
    case "single_line_text_field":
    case "multi_line_text_field":
    case "product_reference":
    case "page_reference":
    case "variant_reference":
    case "file_reference":
    case "url":
    default:
      return metafield.value;
  }
}
function _typeof$2(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof$2 = function _typeof2(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof$2 = function _typeof2(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof$2(obj);
}
function isObjectLike(value) {
  return _typeof$2(value) == "object" && value !== null;
}
var SYMBOL_TO_STRING_TAG = typeof Symbol === "function" && Symbol.toStringTag != null ? Symbol.toStringTag : "@@toStringTag";
function getLocation(source, position) {
  var lineRegexp = /\r\n|[\n\r]/g;
  var line = 1;
  var column = position + 1;
  var match2;
  while ((match2 = lineRegexp.exec(source.body)) && match2.index < position) {
    line += 1;
    column = position + 1 - (match2.index + match2[0].length);
  }
  return {
    line,
    column
  };
}
function printLocation(location) {
  return printSourceLocation(location.source, getLocation(location.source, location.start));
}
function printSourceLocation(source, sourceLocation) {
  var firstLineColumnOffset = source.locationOffset.column - 1;
  var body = whitespace(firstLineColumnOffset) + source.body;
  var lineIndex = sourceLocation.line - 1;
  var lineOffset = source.locationOffset.line - 1;
  var lineNum = sourceLocation.line + lineOffset;
  var columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;
  var columnNum = sourceLocation.column + columnOffset;
  var locationStr = "".concat(source.name, ":").concat(lineNum, ":").concat(columnNum, "\n");
  var lines = body.split(/\r\n|[\n\r]/g);
  var locationLine = lines[lineIndex];
  if (locationLine.length > 120) {
    var subLineIndex = Math.floor(columnNum / 80);
    var subLineColumnNum = columnNum % 80;
    var subLines = [];
    for (var i = 0; i < locationLine.length; i += 80) {
      subLines.push(locationLine.slice(i, i + 80));
    }
    return locationStr + printPrefixedLines([["".concat(lineNum), subLines[0]]].concat(subLines.slice(1, subLineIndex + 1).map(function(subLine) {
      return ["", subLine];
    }), [[" ", whitespace(subLineColumnNum - 1) + "^"], ["", subLines[subLineIndex + 1]]]));
  }
  return locationStr + printPrefixedLines([
    ["".concat(lineNum - 1), lines[lineIndex - 1]],
    ["".concat(lineNum), locationLine],
    ["", whitespace(columnNum - 1) + "^"],
    ["".concat(lineNum + 1), lines[lineIndex + 1]]
  ]);
}
function printPrefixedLines(lines) {
  var existingLines = lines.filter(function(_ref) {
    _ref[0];
    var line = _ref[1];
    return line !== void 0;
  });
  var padLen = Math.max.apply(Math, existingLines.map(function(_ref2) {
    var prefix2 = _ref2[0];
    return prefix2.length;
  }));
  return existingLines.map(function(_ref3) {
    var prefix2 = _ref3[0], line = _ref3[1];
    return leftPad(padLen, prefix2) + (line ? " | " + line : " |");
  }).join("\n");
}
function whitespace(len) {
  return Array(len + 1).join(" ");
}
function leftPad(len, str) {
  return whitespace(len - str.length) + str;
}
function _typeof$1(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof$1 = function _typeof2(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof$1 = function _typeof2(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof$1(obj);
}
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly)
      symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread(target2) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys(Object(source), true).forEach(function(key) {
        _defineProperty(target2, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target2, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function(key) {
        Object.defineProperty(target2, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target2;
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$1(target2, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target2, descriptor.key, descriptor);
  }
}
function _createClass$1(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$1(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$1(Constructor, staticProps);
  return Constructor;
}
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  if (superClass)
    _setPrototypeOf(subClass, superClass);
}
function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn(this, result);
  };
}
function _possibleConstructorReturn(self2, call) {
  if (call && (_typeof$1(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized(self2);
}
function _assertThisInitialized(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? new Map() : void 0;
  _wrapNativeSuper = function _wrapNativeSuper2(Class2) {
    if (Class2 === null || !_isNativeFunction(Class2))
      return Class2;
    if (typeof Class2 !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }
    if (typeof _cache !== "undefined") {
      if (_cache.has(Class2))
        return _cache.get(Class2);
      _cache.set(Class2, Wrapper);
    }
    function Wrapper() {
      return _construct(Class2, arguments, _getPrototypeOf(this).constructor);
    }
    Wrapper.prototype = Object.create(Class2.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } });
    return _setPrototypeOf(Wrapper, Class2);
  };
  return _wrapNativeSuper(Class);
}
function _construct(Parent, args, Class) {
  if (_isNativeReflectConstruct()) {
    _construct = Reflect.construct;
  } else {
    _construct = function _construct2(Parent2, args2, Class2) {
      var a2 = [null];
      a2.push.apply(a2, args2);
      var Constructor = Function.bind.apply(Parent2, a2);
      var instance = new Constructor();
      if (Class2)
        _setPrototypeOf(instance, Class2.prototype);
      return instance;
    };
  }
  return _construct.apply(null, arguments);
}
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function() {
    }));
    return true;
  } catch (e2) {
    return false;
  }
}
function _isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}
function _setPrototypeOf(o, p2) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p3) {
    o2.__proto__ = p3;
    return o2;
  };
  return _setPrototypeOf(o, p2);
}
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf(o);
}
var GraphQLError = /* @__PURE__ */ function(_Error) {
  _inherits(GraphQLError2, _Error);
  var _super = _createSuper(GraphQLError2);
  function GraphQLError2(message, nodes, source, positions, path, originalError, extensions) {
    var _nodeLocations, _nodeLocations2, _nodeLocations3;
    var _this;
    _classCallCheck(this, GraphQLError2);
    _this = _super.call(this, message);
    _this.name = "GraphQLError";
    _this.originalError = originalError !== null && originalError !== void 0 ? originalError : void 0;
    _this.nodes = undefinedIfEmpty(Array.isArray(nodes) ? nodes : nodes ? [nodes] : void 0);
    var nodeLocations = [];
    for (var _i2 = 0, _ref3 = (_this$nodes = _this.nodes) !== null && _this$nodes !== void 0 ? _this$nodes : []; _i2 < _ref3.length; _i2++) {
      var _this$nodes;
      var _ref4 = _ref3[_i2];
      var loc = _ref4.loc;
      if (loc != null) {
        nodeLocations.push(loc);
      }
    }
    nodeLocations = undefinedIfEmpty(nodeLocations);
    _this.source = source !== null && source !== void 0 ? source : (_nodeLocations = nodeLocations) === null || _nodeLocations === void 0 ? void 0 : _nodeLocations[0].source;
    _this.positions = positions !== null && positions !== void 0 ? positions : (_nodeLocations2 = nodeLocations) === null || _nodeLocations2 === void 0 ? void 0 : _nodeLocations2.map(function(loc2) {
      return loc2.start;
    });
    _this.locations = positions && source ? positions.map(function(pos) {
      return getLocation(source, pos);
    }) : (_nodeLocations3 = nodeLocations) === null || _nodeLocations3 === void 0 ? void 0 : _nodeLocations3.map(function(loc2) {
      return getLocation(loc2.source, loc2.start);
    });
    _this.path = path !== null && path !== void 0 ? path : void 0;
    var originalExtensions = originalError === null || originalError === void 0 ? void 0 : originalError.extensions;
    if (extensions == null && isObjectLike(originalExtensions)) {
      _this.extensions = _objectSpread({}, originalExtensions);
    } else {
      _this.extensions = extensions !== null && extensions !== void 0 ? extensions : {};
    }
    Object.defineProperties(_assertThisInitialized(_this), {
      message: {
        enumerable: true
      },
      locations: {
        enumerable: _this.locations != null
      },
      path: {
        enumerable: _this.path != null
      },
      extensions: {
        enumerable: _this.extensions != null && Object.keys(_this.extensions).length > 0
      },
      name: {
        enumerable: false
      },
      nodes: {
        enumerable: false
      },
      source: {
        enumerable: false
      },
      positions: {
        enumerable: false
      },
      originalError: {
        enumerable: false
      }
    });
    if (originalError !== null && originalError !== void 0 && originalError.stack) {
      Object.defineProperty(_assertThisInitialized(_this), "stack", {
        value: originalError.stack,
        writable: true,
        configurable: true
      });
      return _possibleConstructorReturn(_this);
    }
    if (Error.captureStackTrace) {
      Error.captureStackTrace(_assertThisInitialized(_this), GraphQLError2);
    } else {
      Object.defineProperty(_assertThisInitialized(_this), "stack", {
        value: Error().stack,
        writable: true,
        configurable: true
      });
    }
    return _this;
  }
  _createClass$1(GraphQLError2, [{
    key: "toString",
    value: function toString() {
      return printError(this);
    }
  }, {
    key: SYMBOL_TO_STRING_TAG,
    get: function get() {
      return "Object";
    }
  }]);
  return GraphQLError2;
}(/* @__PURE__ */ _wrapNativeSuper(Error));
function undefinedIfEmpty(array) {
  return array === void 0 || array.length === 0 ? void 0 : array;
}
function printError(error) {
  var output = error.message;
  if (error.nodes) {
    for (var _i4 = 0, _error$nodes2 = error.nodes; _i4 < _error$nodes2.length; _i4++) {
      var node2 = _error$nodes2[_i4];
      if (node2.loc) {
        output += "\n\n" + printLocation(node2.loc);
      }
    }
  } else if (error.source && error.locations) {
    for (var _i6 = 0, _error$locations2 = error.locations; _i6 < _error$locations2.length; _i6++) {
      var location = _error$locations2[_i6];
      output += "\n\n" + printSourceLocation(error.source, location);
    }
  }
  return output;
}
function syntaxError(source, position, description) {
  return new GraphQLError("Syntax Error: ".concat(description), void 0, source, [position]);
}
var Kind = Object.freeze({
  NAME: "Name",
  DOCUMENT: "Document",
  OPERATION_DEFINITION: "OperationDefinition",
  VARIABLE_DEFINITION: "VariableDefinition",
  SELECTION_SET: "SelectionSet",
  FIELD: "Field",
  ARGUMENT: "Argument",
  FRAGMENT_SPREAD: "FragmentSpread",
  INLINE_FRAGMENT: "InlineFragment",
  FRAGMENT_DEFINITION: "FragmentDefinition",
  VARIABLE: "Variable",
  INT: "IntValue",
  FLOAT: "FloatValue",
  STRING: "StringValue",
  BOOLEAN: "BooleanValue",
  NULL: "NullValue",
  ENUM: "EnumValue",
  LIST: "ListValue",
  OBJECT: "ObjectValue",
  OBJECT_FIELD: "ObjectField",
  DIRECTIVE: "Directive",
  NAMED_TYPE: "NamedType",
  LIST_TYPE: "ListType",
  NON_NULL_TYPE: "NonNullType",
  SCHEMA_DEFINITION: "SchemaDefinition",
  OPERATION_TYPE_DEFINITION: "OperationTypeDefinition",
  SCALAR_TYPE_DEFINITION: "ScalarTypeDefinition",
  OBJECT_TYPE_DEFINITION: "ObjectTypeDefinition",
  FIELD_DEFINITION: "FieldDefinition",
  INPUT_VALUE_DEFINITION: "InputValueDefinition",
  INTERFACE_TYPE_DEFINITION: "InterfaceTypeDefinition",
  UNION_TYPE_DEFINITION: "UnionTypeDefinition",
  ENUM_TYPE_DEFINITION: "EnumTypeDefinition",
  ENUM_VALUE_DEFINITION: "EnumValueDefinition",
  INPUT_OBJECT_TYPE_DEFINITION: "InputObjectTypeDefinition",
  DIRECTIVE_DEFINITION: "DirectiveDefinition",
  SCHEMA_EXTENSION: "SchemaExtension",
  SCALAR_TYPE_EXTENSION: "ScalarTypeExtension",
  OBJECT_TYPE_EXTENSION: "ObjectTypeExtension",
  INTERFACE_TYPE_EXTENSION: "InterfaceTypeExtension",
  UNION_TYPE_EXTENSION: "UnionTypeExtension",
  ENUM_TYPE_EXTENSION: "EnumTypeExtension",
  INPUT_OBJECT_TYPE_EXTENSION: "InputObjectTypeExtension"
});
function invariant(condition, message) {
  var booleanCondition = Boolean(condition);
  if (!booleanCondition) {
    throw new Error(message != null ? message : "Unexpected invariant triggered.");
  }
}
var nodejsCustomInspectSymbol = typeof Symbol === "function" && typeof Symbol.for === "function" ? Symbol.for("nodejs.util.inspect.custom") : void 0;
var nodejsCustomInspectSymbol$1 = nodejsCustomInspectSymbol;
function defineInspect(classObject) {
  var fn = classObject.prototype.toJSON;
  typeof fn === "function" || invariant(0);
  classObject.prototype.inspect = fn;
  if (nodejsCustomInspectSymbol$1) {
    classObject.prototype[nodejsCustomInspectSymbol$1] = fn;
  }
}
var Location = /* @__PURE__ */ function() {
  function Location2(startToken, endToken, source) {
    this.start = startToken.start;
    this.end = endToken.end;
    this.startToken = startToken;
    this.endToken = endToken;
    this.source = source;
  }
  var _proto = Location2.prototype;
  _proto.toJSON = function toJSON() {
    return {
      start: this.start,
      end: this.end
    };
  };
  return Location2;
}();
defineInspect(Location);
var Token = /* @__PURE__ */ function() {
  function Token2(kind, start, end, line, column, prev, value) {
    this.kind = kind;
    this.start = start;
    this.end = end;
    this.line = line;
    this.column = column;
    this.value = value;
    this.prev = prev;
    this.next = null;
  }
  var _proto2 = Token2.prototype;
  _proto2.toJSON = function toJSON() {
    return {
      kind: this.kind,
      value: this.value,
      line: this.line,
      column: this.column
    };
  };
  return Token2;
}();
defineInspect(Token);
function isNode(maybeNode) {
  return maybeNode != null && typeof maybeNode.kind === "string";
}
var TokenKind = Object.freeze({
  SOF: "<SOF>",
  EOF: "<EOF>",
  BANG: "!",
  DOLLAR: "$",
  AMP: "&",
  PAREN_L: "(",
  PAREN_R: ")",
  SPREAD: "...",
  COLON: ":",
  EQUALS: "=",
  AT: "@",
  BRACKET_L: "[",
  BRACKET_R: "]",
  BRACE_L: "{",
  PIPE: "|",
  BRACE_R: "}",
  NAME: "Name",
  INT: "Int",
  FLOAT: "Float",
  STRING: "String",
  BLOCK_STRING: "BlockString",
  COMMENT: "Comment"
});
function _typeof(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof2(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof = function _typeof2(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof(obj);
}
var MAX_ARRAY_LENGTH = 10;
var MAX_RECURSIVE_DEPTH = 2;
function inspect(value) {
  return formatValue(value, []);
}
function formatValue(value, seenValues) {
  switch (_typeof(value)) {
    case "string":
      return JSON.stringify(value);
    case "function":
      return value.name ? "[function ".concat(value.name, "]") : "[function]";
    case "object":
      if (value === null) {
        return "null";
      }
      return formatObjectValue(value, seenValues);
    default:
      return String(value);
  }
}
function formatObjectValue(value, previouslySeenValues) {
  if (previouslySeenValues.indexOf(value) !== -1) {
    return "[Circular]";
  }
  var seenValues = [].concat(previouslySeenValues, [value]);
  var customInspectFn = getCustomFn(value);
  if (customInspectFn !== void 0) {
    var customValue = customInspectFn.call(value);
    if (customValue !== value) {
      return typeof customValue === "string" ? customValue : formatValue(customValue, seenValues);
    }
  } else if (Array.isArray(value)) {
    return formatArray(value, seenValues);
  }
  return formatObject(value, seenValues);
}
function formatObject(object, seenValues) {
  var keys = Object.keys(object);
  if (keys.length === 0) {
    return "{}";
  }
  if (seenValues.length > MAX_RECURSIVE_DEPTH) {
    return "[" + getObjectTag(object) + "]";
  }
  var properties2 = keys.map(function(key) {
    var value = formatValue(object[key], seenValues);
    return key + ": " + value;
  });
  return "{ " + properties2.join(", ") + " }";
}
function formatArray(array, seenValues) {
  if (array.length === 0) {
    return "[]";
  }
  if (seenValues.length > MAX_RECURSIVE_DEPTH) {
    return "[Array]";
  }
  var len = Math.min(MAX_ARRAY_LENGTH, array.length);
  var remaining = array.length - len;
  var items = [];
  for (var i = 0; i < len; ++i) {
    items.push(formatValue(array[i], seenValues));
  }
  if (remaining === 1) {
    items.push("... 1 more item");
  } else if (remaining > 1) {
    items.push("... ".concat(remaining, " more items"));
  }
  return "[" + items.join(", ") + "]";
}
function getCustomFn(object) {
  var customInspectFn = object[String(nodejsCustomInspectSymbol$1)];
  if (typeof customInspectFn === "function") {
    return customInspectFn;
  }
  if (typeof object.inspect === "function") {
    return object.inspect;
  }
}
function getObjectTag(object) {
  var tag = Object.prototype.toString.call(object).replace(/^\[object /, "").replace(/]$/, "");
  if (tag === "Object" && typeof object.constructor === "function") {
    var name = object.constructor.name;
    if (typeof name === "string" && name !== "") {
      return name;
    }
  }
  return tag;
}
function devAssert(condition, message) {
  var booleanCondition = Boolean(condition);
  if (!booleanCondition) {
    throw new Error(message);
  }
}
var instanceOf = function instanceOf2(value, constructor) {
  return value instanceof constructor;
};
function _defineProperties(target2, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target2, descriptor.key, descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties(Constructor, staticProps);
  return Constructor;
}
var Source = /* @__PURE__ */ function() {
  function Source2(body) {
    var name = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "GraphQL request";
    var locationOffset = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {
      line: 1,
      column: 1
    };
    typeof body === "string" || devAssert(0, "Body must be a string. Received: ".concat(inspect(body), "."));
    this.body = body;
    this.name = name;
    this.locationOffset = locationOffset;
    this.locationOffset.line > 0 || devAssert(0, "line in locationOffset is 1-indexed and must be positive.");
    this.locationOffset.column > 0 || devAssert(0, "column in locationOffset is 1-indexed and must be positive.");
  }
  _createClass(Source2, [{
    key: SYMBOL_TO_STRING_TAG,
    get: function get() {
      return "Source";
    }
  }]);
  return Source2;
}();
function isSource(source) {
  return instanceOf(source, Source);
}
var DirectiveLocation = Object.freeze({
  QUERY: "QUERY",
  MUTATION: "MUTATION",
  SUBSCRIPTION: "SUBSCRIPTION",
  FIELD: "FIELD",
  FRAGMENT_DEFINITION: "FRAGMENT_DEFINITION",
  FRAGMENT_SPREAD: "FRAGMENT_SPREAD",
  INLINE_FRAGMENT: "INLINE_FRAGMENT",
  VARIABLE_DEFINITION: "VARIABLE_DEFINITION",
  SCHEMA: "SCHEMA",
  SCALAR: "SCALAR",
  OBJECT: "OBJECT",
  FIELD_DEFINITION: "FIELD_DEFINITION",
  ARGUMENT_DEFINITION: "ARGUMENT_DEFINITION",
  INTERFACE: "INTERFACE",
  UNION: "UNION",
  ENUM: "ENUM",
  ENUM_VALUE: "ENUM_VALUE",
  INPUT_OBJECT: "INPUT_OBJECT",
  INPUT_FIELD_DEFINITION: "INPUT_FIELD_DEFINITION"
});
function dedentBlockStringValue(rawString) {
  var lines = rawString.split(/\r\n|[\n\r]/g);
  var commonIndent = getBlockStringIndentation(rawString);
  if (commonIndent !== 0) {
    for (var i = 1; i < lines.length; i++) {
      lines[i] = lines[i].slice(commonIndent);
    }
  }
  var startLine = 0;
  while (startLine < lines.length && isBlank(lines[startLine])) {
    ++startLine;
  }
  var endLine = lines.length;
  while (endLine > startLine && isBlank(lines[endLine - 1])) {
    --endLine;
  }
  return lines.slice(startLine, endLine).join("\n");
}
function isBlank(str) {
  for (var i = 0; i < str.length; ++i) {
    if (str[i] !== " " && str[i] !== "	") {
      return false;
    }
  }
  return true;
}
function getBlockStringIndentation(value) {
  var _commonIndent;
  var isFirstLine = true;
  var isEmptyLine = true;
  var indent2 = 0;
  var commonIndent = null;
  for (var i = 0; i < value.length; ++i) {
    switch (value.charCodeAt(i)) {
      case 13:
        if (value.charCodeAt(i + 1) === 10) {
          ++i;
        }
      case 10:
        isFirstLine = false;
        isEmptyLine = true;
        indent2 = 0;
        break;
      case 9:
      case 32:
        ++indent2;
        break;
      default:
        if (isEmptyLine && !isFirstLine && (commonIndent === null || indent2 < commonIndent)) {
          commonIndent = indent2;
        }
        isEmptyLine = false;
    }
  }
  return (_commonIndent = commonIndent) !== null && _commonIndent !== void 0 ? _commonIndent : 0;
}
function printBlockString(value) {
  var indentation = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
  var preferMultipleLines = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
  var isSingleLine = value.indexOf("\n") === -1;
  var hasLeadingSpace = value[0] === " " || value[0] === "	";
  var hasTrailingQuote = value[value.length - 1] === '"';
  var hasTrailingSlash = value[value.length - 1] === "\\";
  var printAsMultipleLines = !isSingleLine || hasTrailingQuote || hasTrailingSlash || preferMultipleLines;
  var result = "";
  if (printAsMultipleLines && !(isSingleLine && hasLeadingSpace)) {
    result += "\n" + indentation;
  }
  result += indentation ? value.replace(/\n/g, "\n" + indentation) : value;
  if (printAsMultipleLines) {
    result += "\n";
  }
  return '"""' + result.replace(/"""/g, '\\"""') + '"""';
}
var Lexer = /* @__PURE__ */ function() {
  function Lexer2(source) {
    var startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0, null);
    this.source = source;
    this.lastToken = startOfFileToken;
    this.token = startOfFileToken;
    this.line = 1;
    this.lineStart = 0;
  }
  var _proto = Lexer2.prototype;
  _proto.advance = function advance() {
    this.lastToken = this.token;
    var token = this.token = this.lookahead();
    return token;
  };
  _proto.lookahead = function lookahead() {
    var token = this.token;
    if (token.kind !== TokenKind.EOF) {
      do {
        var _token$next;
        token = (_token$next = token.next) !== null && _token$next !== void 0 ? _token$next : token.next = readToken(this, token);
      } while (token.kind === TokenKind.COMMENT);
    }
    return token;
  };
  return Lexer2;
}();
function isPunctuatorTokenKind(kind) {
  return kind === TokenKind.BANG || kind === TokenKind.DOLLAR || kind === TokenKind.AMP || kind === TokenKind.PAREN_L || kind === TokenKind.PAREN_R || kind === TokenKind.SPREAD || kind === TokenKind.COLON || kind === TokenKind.EQUALS || kind === TokenKind.AT || kind === TokenKind.BRACKET_L || kind === TokenKind.BRACKET_R || kind === TokenKind.BRACE_L || kind === TokenKind.PIPE || kind === TokenKind.BRACE_R;
}
function printCharCode(code) {
  return isNaN(code) ? TokenKind.EOF : code < 127 ? JSON.stringify(String.fromCharCode(code)) : '"\\u'.concat(("00" + code.toString(16).toUpperCase()).slice(-4), '"');
}
function readToken(lexer, prev) {
  var source = lexer.source;
  var body = source.body;
  var bodyLength = body.length;
  var pos = prev.end;
  while (pos < bodyLength) {
    var code = body.charCodeAt(pos);
    var _line = lexer.line;
    var _col = 1 + pos - lexer.lineStart;
    switch (code) {
      case 65279:
      case 9:
      case 32:
      case 44:
        ++pos;
        continue;
      case 10:
        ++pos;
        ++lexer.line;
        lexer.lineStart = pos;
        continue;
      case 13:
        if (body.charCodeAt(pos + 1) === 10) {
          pos += 2;
        } else {
          ++pos;
        }
        ++lexer.line;
        lexer.lineStart = pos;
        continue;
      case 33:
        return new Token(TokenKind.BANG, pos, pos + 1, _line, _col, prev);
      case 35:
        return readComment(source, pos, _line, _col, prev);
      case 36:
        return new Token(TokenKind.DOLLAR, pos, pos + 1, _line, _col, prev);
      case 38:
        return new Token(TokenKind.AMP, pos, pos + 1, _line, _col, prev);
      case 40:
        return new Token(TokenKind.PAREN_L, pos, pos + 1, _line, _col, prev);
      case 41:
        return new Token(TokenKind.PAREN_R, pos, pos + 1, _line, _col, prev);
      case 46:
        if (body.charCodeAt(pos + 1) === 46 && body.charCodeAt(pos + 2) === 46) {
          return new Token(TokenKind.SPREAD, pos, pos + 3, _line, _col, prev);
        }
        break;
      case 58:
        return new Token(TokenKind.COLON, pos, pos + 1, _line, _col, prev);
      case 61:
        return new Token(TokenKind.EQUALS, pos, pos + 1, _line, _col, prev);
      case 64:
        return new Token(TokenKind.AT, pos, pos + 1, _line, _col, prev);
      case 91:
        return new Token(TokenKind.BRACKET_L, pos, pos + 1, _line, _col, prev);
      case 93:
        return new Token(TokenKind.BRACKET_R, pos, pos + 1, _line, _col, prev);
      case 123:
        return new Token(TokenKind.BRACE_L, pos, pos + 1, _line, _col, prev);
      case 124:
        return new Token(TokenKind.PIPE, pos, pos + 1, _line, _col, prev);
      case 125:
        return new Token(TokenKind.BRACE_R, pos, pos + 1, _line, _col, prev);
      case 34:
        if (body.charCodeAt(pos + 1) === 34 && body.charCodeAt(pos + 2) === 34) {
          return readBlockString(source, pos, _line, _col, prev, lexer);
        }
        return readString(source, pos, _line, _col, prev);
      case 45:
      case 48:
      case 49:
      case 50:
      case 51:
      case 52:
      case 53:
      case 54:
      case 55:
      case 56:
      case 57:
        return readNumber(source, pos, code, _line, _col, prev);
      case 65:
      case 66:
      case 67:
      case 68:
      case 69:
      case 70:
      case 71:
      case 72:
      case 73:
      case 74:
      case 75:
      case 76:
      case 77:
      case 78:
      case 79:
      case 80:
      case 81:
      case 82:
      case 83:
      case 84:
      case 85:
      case 86:
      case 87:
      case 88:
      case 89:
      case 90:
      case 95:
      case 97:
      case 98:
      case 99:
      case 100:
      case 101:
      case 102:
      case 103:
      case 104:
      case 105:
      case 106:
      case 107:
      case 108:
      case 109:
      case 110:
      case 111:
      case 112:
      case 113:
      case 114:
      case 115:
      case 116:
      case 117:
      case 118:
      case 119:
      case 120:
      case 121:
      case 122:
        return readName(source, pos, _line, _col, prev);
    }
    throw syntaxError(source, pos, unexpectedCharacterMessage(code));
  }
  var line = lexer.line;
  var col = 1 + pos - lexer.lineStart;
  return new Token(TokenKind.EOF, bodyLength, bodyLength, line, col, prev);
}
function unexpectedCharacterMessage(code) {
  if (code < 32 && code !== 9 && code !== 10 && code !== 13) {
    return "Cannot contain the invalid character ".concat(printCharCode(code), ".");
  }
  if (code === 39) {
    return `Unexpected single quote character ('), did you mean to use a double quote (")?`;
  }
  return "Cannot parse the unexpected character ".concat(printCharCode(code), ".");
}
function readComment(source, start, line, col, prev) {
  var body = source.body;
  var code;
  var position = start;
  do {
    code = body.charCodeAt(++position);
  } while (!isNaN(code) && (code > 31 || code === 9));
  return new Token(TokenKind.COMMENT, start, position, line, col, prev, body.slice(start + 1, position));
}
function readNumber(source, start, firstCode, line, col, prev) {
  var body = source.body;
  var code = firstCode;
  var position = start;
  var isFloat = false;
  if (code === 45) {
    code = body.charCodeAt(++position);
  }
  if (code === 48) {
    code = body.charCodeAt(++position);
    if (code >= 48 && code <= 57) {
      throw syntaxError(source, position, "Invalid number, unexpected digit after 0: ".concat(printCharCode(code), "."));
    }
  } else {
    position = readDigits(source, position, code);
    code = body.charCodeAt(position);
  }
  if (code === 46) {
    isFloat = true;
    code = body.charCodeAt(++position);
    position = readDigits(source, position, code);
    code = body.charCodeAt(position);
  }
  if (code === 69 || code === 101) {
    isFloat = true;
    code = body.charCodeAt(++position);
    if (code === 43 || code === 45) {
      code = body.charCodeAt(++position);
    }
    position = readDigits(source, position, code);
    code = body.charCodeAt(position);
  }
  if (code === 46 || isNameStart(code)) {
    throw syntaxError(source, position, "Invalid number, expected digit but got: ".concat(printCharCode(code), "."));
  }
  return new Token(isFloat ? TokenKind.FLOAT : TokenKind.INT, start, position, line, col, prev, body.slice(start, position));
}
function readDigits(source, start, firstCode) {
  var body = source.body;
  var position = start;
  var code = firstCode;
  if (code >= 48 && code <= 57) {
    do {
      code = body.charCodeAt(++position);
    } while (code >= 48 && code <= 57);
    return position;
  }
  throw syntaxError(source, position, "Invalid number, expected digit but got: ".concat(printCharCode(code), "."));
}
function readString(source, start, line, col, prev) {
  var body = source.body;
  var position = start + 1;
  var chunkStart = position;
  var code = 0;
  var value = "";
  while (position < body.length && !isNaN(code = body.charCodeAt(position)) && code !== 10 && code !== 13) {
    if (code === 34) {
      value += body.slice(chunkStart, position);
      return new Token(TokenKind.STRING, start, position + 1, line, col, prev, value);
    }
    if (code < 32 && code !== 9) {
      throw syntaxError(source, position, "Invalid character within String: ".concat(printCharCode(code), "."));
    }
    ++position;
    if (code === 92) {
      value += body.slice(chunkStart, position - 1);
      code = body.charCodeAt(position);
      switch (code) {
        case 34:
          value += '"';
          break;
        case 47:
          value += "/";
          break;
        case 92:
          value += "\\";
          break;
        case 98:
          value += "\b";
          break;
        case 102:
          value += "\f";
          break;
        case 110:
          value += "\n";
          break;
        case 114:
          value += "\r";
          break;
        case 116:
          value += "	";
          break;
        case 117: {
          var charCode = uniCharCode(body.charCodeAt(position + 1), body.charCodeAt(position + 2), body.charCodeAt(position + 3), body.charCodeAt(position + 4));
          if (charCode < 0) {
            var invalidSequence = body.slice(position + 1, position + 5);
            throw syntaxError(source, position, "Invalid character escape sequence: \\u".concat(invalidSequence, "."));
          }
          value += String.fromCharCode(charCode);
          position += 4;
          break;
        }
        default:
          throw syntaxError(source, position, "Invalid character escape sequence: \\".concat(String.fromCharCode(code), "."));
      }
      ++position;
      chunkStart = position;
    }
  }
  throw syntaxError(source, position, "Unterminated string.");
}
function readBlockString(source, start, line, col, prev, lexer) {
  var body = source.body;
  var position = start + 3;
  var chunkStart = position;
  var code = 0;
  var rawValue = "";
  while (position < body.length && !isNaN(code = body.charCodeAt(position))) {
    if (code === 34 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34) {
      rawValue += body.slice(chunkStart, position);
      return new Token(TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, dedentBlockStringValue(rawValue));
    }
    if (code < 32 && code !== 9 && code !== 10 && code !== 13) {
      throw syntaxError(source, position, "Invalid character within String: ".concat(printCharCode(code), "."));
    }
    if (code === 10) {
      ++position;
      ++lexer.line;
      lexer.lineStart = position;
    } else if (code === 13) {
      if (body.charCodeAt(position + 1) === 10) {
        position += 2;
      } else {
        ++position;
      }
      ++lexer.line;
      lexer.lineStart = position;
    } else if (code === 92 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34 && body.charCodeAt(position + 3) === 34) {
      rawValue += body.slice(chunkStart, position) + '"""';
      position += 4;
      chunkStart = position;
    } else {
      ++position;
    }
  }
  throw syntaxError(source, position, "Unterminated string.");
}
function uniCharCode(a2, b2, c2, d2) {
  return char2hex(a2) << 12 | char2hex(b2) << 8 | char2hex(c2) << 4 | char2hex(d2);
}
function char2hex(a2) {
  return a2 >= 48 && a2 <= 57 ? a2 - 48 : a2 >= 65 && a2 <= 70 ? a2 - 55 : a2 >= 97 && a2 <= 102 ? a2 - 87 : -1;
}
function readName(source, start, line, col, prev) {
  var body = source.body;
  var bodyLength = body.length;
  var position = start + 1;
  var code = 0;
  while (position !== bodyLength && !isNaN(code = body.charCodeAt(position)) && (code === 95 || code >= 48 && code <= 57 || code >= 65 && code <= 90 || code >= 97 && code <= 122)) {
    ++position;
  }
  return new Token(TokenKind.NAME, start, position, line, col, prev, body.slice(start, position));
}
function isNameStart(code) {
  return code === 95 || code >= 65 && code <= 90 || code >= 97 && code <= 122;
}
function parse(source, options) {
  var parser = new Parser(source, options);
  return parser.parseDocument();
}
var Parser = /* @__PURE__ */ function() {
  function Parser2(source, options) {
    var sourceObj = isSource(source) ? source : new Source(source);
    this._lexer = new Lexer(sourceObj);
    this._options = options;
  }
  var _proto = Parser2.prototype;
  _proto.parseName = function parseName() {
    var token = this.expectToken(TokenKind.NAME);
    return {
      kind: Kind.NAME,
      value: token.value,
      loc: this.loc(token)
    };
  };
  _proto.parseDocument = function parseDocument2() {
    var start = this._lexer.token;
    return {
      kind: Kind.DOCUMENT,
      definitions: this.many(TokenKind.SOF, this.parseDefinition, TokenKind.EOF),
      loc: this.loc(start)
    };
  };
  _proto.parseDefinition = function parseDefinition() {
    if (this.peek(TokenKind.NAME)) {
      switch (this._lexer.token.value) {
        case "query":
        case "mutation":
        case "subscription":
          return this.parseOperationDefinition();
        case "fragment":
          return this.parseFragmentDefinition();
        case "schema":
        case "scalar":
        case "type":
        case "interface":
        case "union":
        case "enum":
        case "input":
        case "directive":
          return this.parseTypeSystemDefinition();
        case "extend":
          return this.parseTypeSystemExtension();
      }
    } else if (this.peek(TokenKind.BRACE_L)) {
      return this.parseOperationDefinition();
    } else if (this.peekDescription()) {
      return this.parseTypeSystemDefinition();
    }
    throw this.unexpected();
  };
  _proto.parseOperationDefinition = function parseOperationDefinition() {
    var start = this._lexer.token;
    if (this.peek(TokenKind.BRACE_L)) {
      return {
        kind: Kind.OPERATION_DEFINITION,
        operation: "query",
        name: void 0,
        variableDefinitions: [],
        directives: [],
        selectionSet: this.parseSelectionSet(),
        loc: this.loc(start)
      };
    }
    var operation = this.parseOperationType();
    var name;
    if (this.peek(TokenKind.NAME)) {
      name = this.parseName();
    }
    return {
      kind: Kind.OPERATION_DEFINITION,
      operation,
      name,
      variableDefinitions: this.parseVariableDefinitions(),
      directives: this.parseDirectives(false),
      selectionSet: this.parseSelectionSet(),
      loc: this.loc(start)
    };
  };
  _proto.parseOperationType = function parseOperationType() {
    var operationToken = this.expectToken(TokenKind.NAME);
    switch (operationToken.value) {
      case "query":
        return "query";
      case "mutation":
        return "mutation";
      case "subscription":
        return "subscription";
    }
    throw this.unexpected(operationToken);
  };
  _proto.parseVariableDefinitions = function parseVariableDefinitions() {
    return this.optionalMany(TokenKind.PAREN_L, this.parseVariableDefinition, TokenKind.PAREN_R);
  };
  _proto.parseVariableDefinition = function parseVariableDefinition() {
    var start = this._lexer.token;
    return {
      kind: Kind.VARIABLE_DEFINITION,
      variable: this.parseVariable(),
      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),
      defaultValue: this.expectOptionalToken(TokenKind.EQUALS) ? this.parseValueLiteral(true) : void 0,
      directives: this.parseDirectives(true),
      loc: this.loc(start)
    };
  };
  _proto.parseVariable = function parseVariable() {
    var start = this._lexer.token;
    this.expectToken(TokenKind.DOLLAR);
    return {
      kind: Kind.VARIABLE,
      name: this.parseName(),
      loc: this.loc(start)
    };
  };
  _proto.parseSelectionSet = function parseSelectionSet() {
    var start = this._lexer.token;
    return {
      kind: Kind.SELECTION_SET,
      selections: this.many(TokenKind.BRACE_L, this.parseSelection, TokenKind.BRACE_R),
      loc: this.loc(start)
    };
  };
  _proto.parseSelection = function parseSelection() {
    return this.peek(TokenKind.SPREAD) ? this.parseFragment() : this.parseField();
  };
  _proto.parseField = function parseField() {
    var start = this._lexer.token;
    var nameOrAlias = this.parseName();
    var alias;
    var name;
    if (this.expectOptionalToken(TokenKind.COLON)) {
      alias = nameOrAlias;
      name = this.parseName();
    } else {
      name = nameOrAlias;
    }
    return {
      kind: Kind.FIELD,
      alias,
      name,
      arguments: this.parseArguments(false),
      directives: this.parseDirectives(false),
      selectionSet: this.peek(TokenKind.BRACE_L) ? this.parseSelectionSet() : void 0,
      loc: this.loc(start)
    };
  };
  _proto.parseArguments = function parseArguments(isConst) {
    var item = isConst ? this.parseConstArgument : this.parseArgument;
    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);
  };
  _proto.parseArgument = function parseArgument() {
    var start = this._lexer.token;
    var name = this.parseName();
    this.expectToken(TokenKind.COLON);
    return {
      kind: Kind.ARGUMENT,
      name,
      value: this.parseValueLiteral(false),
      loc: this.loc(start)
    };
  };
  _proto.parseConstArgument = function parseConstArgument() {
    var start = this._lexer.token;
    return {
      kind: Kind.ARGUMENT,
      name: this.parseName(),
      value: (this.expectToken(TokenKind.COLON), this.parseValueLiteral(true)),
      loc: this.loc(start)
    };
  };
  _proto.parseFragment = function parseFragment() {
    var start = this._lexer.token;
    this.expectToken(TokenKind.SPREAD);
    var hasTypeCondition = this.expectOptionalKeyword("on");
    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {
      return {
        kind: Kind.FRAGMENT_SPREAD,
        name: this.parseFragmentName(),
        directives: this.parseDirectives(false),
        loc: this.loc(start)
      };
    }
    return {
      kind: Kind.INLINE_FRAGMENT,
      typeCondition: hasTypeCondition ? this.parseNamedType() : void 0,
      directives: this.parseDirectives(false),
      selectionSet: this.parseSelectionSet(),
      loc: this.loc(start)
    };
  };
  _proto.parseFragmentDefinition = function parseFragmentDefinition() {
    var _this$_options;
    var start = this._lexer.token;
    this.expectKeyword("fragment");
    if (((_this$_options = this._options) === null || _this$_options === void 0 ? void 0 : _this$_options.experimentalFragmentVariables) === true) {
      return {
        kind: Kind.FRAGMENT_DEFINITION,
        name: this.parseFragmentName(),
        variableDefinitions: this.parseVariableDefinitions(),
        typeCondition: (this.expectKeyword("on"), this.parseNamedType()),
        directives: this.parseDirectives(false),
        selectionSet: this.parseSelectionSet(),
        loc: this.loc(start)
      };
    }
    return {
      kind: Kind.FRAGMENT_DEFINITION,
      name: this.parseFragmentName(),
      typeCondition: (this.expectKeyword("on"), this.parseNamedType()),
      directives: this.parseDirectives(false),
      selectionSet: this.parseSelectionSet(),
      loc: this.loc(start)
    };
  };
  _proto.parseFragmentName = function parseFragmentName() {
    if (this._lexer.token.value === "on") {
      throw this.unexpected();
    }
    return this.parseName();
  };
  _proto.parseValueLiteral = function parseValueLiteral(isConst) {
    var token = this._lexer.token;
    switch (token.kind) {
      case TokenKind.BRACKET_L:
        return this.parseList(isConst);
      case TokenKind.BRACE_L:
        return this.parseObject(isConst);
      case TokenKind.INT:
        this._lexer.advance();
        return {
          kind: Kind.INT,
          value: token.value,
          loc: this.loc(token)
        };
      case TokenKind.FLOAT:
        this._lexer.advance();
        return {
          kind: Kind.FLOAT,
          value: token.value,
          loc: this.loc(token)
        };
      case TokenKind.STRING:
      case TokenKind.BLOCK_STRING:
        return this.parseStringLiteral();
      case TokenKind.NAME:
        this._lexer.advance();
        switch (token.value) {
          case "true":
            return {
              kind: Kind.BOOLEAN,
              value: true,
              loc: this.loc(token)
            };
          case "false":
            return {
              kind: Kind.BOOLEAN,
              value: false,
              loc: this.loc(token)
            };
          case "null":
            return {
              kind: Kind.NULL,
              loc: this.loc(token)
            };
          default:
            return {
              kind: Kind.ENUM,
              value: token.value,
              loc: this.loc(token)
            };
        }
      case TokenKind.DOLLAR:
        if (!isConst) {
          return this.parseVariable();
        }
        break;
    }
    throw this.unexpected();
  };
  _proto.parseStringLiteral = function parseStringLiteral() {
    var token = this._lexer.token;
    this._lexer.advance();
    return {
      kind: Kind.STRING,
      value: token.value,
      block: token.kind === TokenKind.BLOCK_STRING,
      loc: this.loc(token)
    };
  };
  _proto.parseList = function parseList(isConst) {
    var _this = this;
    var start = this._lexer.token;
    var item = function item2() {
      return _this.parseValueLiteral(isConst);
    };
    return {
      kind: Kind.LIST,
      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),
      loc: this.loc(start)
    };
  };
  _proto.parseObject = function parseObject(isConst) {
    var _this2 = this;
    var start = this._lexer.token;
    var item = function item2() {
      return _this2.parseObjectField(isConst);
    };
    return {
      kind: Kind.OBJECT,
      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),
      loc: this.loc(start)
    };
  };
  _proto.parseObjectField = function parseObjectField(isConst) {
    var start = this._lexer.token;
    var name = this.parseName();
    this.expectToken(TokenKind.COLON);
    return {
      kind: Kind.OBJECT_FIELD,
      name,
      value: this.parseValueLiteral(isConst),
      loc: this.loc(start)
    };
  };
  _proto.parseDirectives = function parseDirectives(isConst) {
    var directives = [];
    while (this.peek(TokenKind.AT)) {
      directives.push(this.parseDirective(isConst));
    }
    return directives;
  };
  _proto.parseDirective = function parseDirective(isConst) {
    var start = this._lexer.token;
    this.expectToken(TokenKind.AT);
    return {
      kind: Kind.DIRECTIVE,
      name: this.parseName(),
      arguments: this.parseArguments(isConst),
      loc: this.loc(start)
    };
  };
  _proto.parseTypeReference = function parseTypeReference() {
    var start = this._lexer.token;
    var type;
    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {
      type = this.parseTypeReference();
      this.expectToken(TokenKind.BRACKET_R);
      type = {
        kind: Kind.LIST_TYPE,
        type,
        loc: this.loc(start)
      };
    } else {
      type = this.parseNamedType();
    }
    if (this.expectOptionalToken(TokenKind.BANG)) {
      return {
        kind: Kind.NON_NULL_TYPE,
        type,
        loc: this.loc(start)
      };
    }
    return type;
  };
  _proto.parseNamedType = function parseNamedType() {
    var start = this._lexer.token;
    return {
      kind: Kind.NAMED_TYPE,
      name: this.parseName(),
      loc: this.loc(start)
    };
  };
  _proto.parseTypeSystemDefinition = function parseTypeSystemDefinition() {
    var keywordToken = this.peekDescription() ? this._lexer.lookahead() : this._lexer.token;
    if (keywordToken.kind === TokenKind.NAME) {
      switch (keywordToken.value) {
        case "schema":
          return this.parseSchemaDefinition();
        case "scalar":
          return this.parseScalarTypeDefinition();
        case "type":
          return this.parseObjectTypeDefinition();
        case "interface":
          return this.parseInterfaceTypeDefinition();
        case "union":
          return this.parseUnionTypeDefinition();
        case "enum":
          return this.parseEnumTypeDefinition();
        case "input":
          return this.parseInputObjectTypeDefinition();
        case "directive":
          return this.parseDirectiveDefinition();
      }
    }
    throw this.unexpected(keywordToken);
  };
  _proto.peekDescription = function peekDescription() {
    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);
  };
  _proto.parseDescription = function parseDescription() {
    if (this.peekDescription()) {
      return this.parseStringLiteral();
    }
  };
  _proto.parseSchemaDefinition = function parseSchemaDefinition() {
    var start = this._lexer.token;
    var description = this.parseDescription();
    this.expectKeyword("schema");
    var directives = this.parseDirectives(true);
    var operationTypes = this.many(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);
    return {
      kind: Kind.SCHEMA_DEFINITION,
      description,
      directives,
      operationTypes,
      loc: this.loc(start)
    };
  };
  _proto.parseOperationTypeDefinition = function parseOperationTypeDefinition() {
    var start = this._lexer.token;
    var operation = this.parseOperationType();
    this.expectToken(TokenKind.COLON);
    var type = this.parseNamedType();
    return {
      kind: Kind.OPERATION_TYPE_DEFINITION,
      operation,
      type,
      loc: this.loc(start)
    };
  };
  _proto.parseScalarTypeDefinition = function parseScalarTypeDefinition() {
    var start = this._lexer.token;
    var description = this.parseDescription();
    this.expectKeyword("scalar");
    var name = this.parseName();
    var directives = this.parseDirectives(true);
    return {
      kind: Kind.SCALAR_TYPE_DEFINITION,
      description,
      name,
      directives,
      loc: this.loc(start)
    };
  };
  _proto.parseObjectTypeDefinition = function parseObjectTypeDefinition() {
    var start = this._lexer.token;
    var description = this.parseDescription();
    this.expectKeyword("type");
    var name = this.parseName();
    var interfaces = this.parseImplementsInterfaces();
    var directives = this.parseDirectives(true);
    var fields = this.parseFieldsDefinition();
    return {
      kind: Kind.OBJECT_TYPE_DEFINITION,
      description,
      name,
      interfaces,
      directives,
      fields,
      loc: this.loc(start)
    };
  };
  _proto.parseImplementsInterfaces = function parseImplementsInterfaces() {
    var _this$_options2;
    if (!this.expectOptionalKeyword("implements")) {
      return [];
    }
    if (((_this$_options2 = this._options) === null || _this$_options2 === void 0 ? void 0 : _this$_options2.allowLegacySDLImplementsInterfaces) === true) {
      var types = [];
      this.expectOptionalToken(TokenKind.AMP);
      do {
        types.push(this.parseNamedType());
      } while (this.expectOptionalToken(TokenKind.AMP) || this.peek(TokenKind.NAME));
      return types;
    }
    return this.delimitedMany(TokenKind.AMP, this.parseNamedType);
  };
  _proto.parseFieldsDefinition = function parseFieldsDefinition() {
    var _this$_options3;
    if (((_this$_options3 = this._options) === null || _this$_options3 === void 0 ? void 0 : _this$_options3.allowLegacySDLEmptyFields) === true && this.peek(TokenKind.BRACE_L) && this._lexer.lookahead().kind === TokenKind.BRACE_R) {
      this._lexer.advance();
      this._lexer.advance();
      return [];
    }
    return this.optionalMany(TokenKind.BRACE_L, this.parseFieldDefinition, TokenKind.BRACE_R);
  };
  _proto.parseFieldDefinition = function parseFieldDefinition() {
    var start = this._lexer.token;
    var description = this.parseDescription();
    var name = this.parseName();
    var args = this.parseArgumentDefs();
    this.expectToken(TokenKind.COLON);
    var type = this.parseTypeReference();
    var directives = this.parseDirectives(true);
    return {
      kind: Kind.FIELD_DEFINITION,
      description,
      name,
      arguments: args,
      type,
      directives,
      loc: this.loc(start)
    };
  };
  _proto.parseArgumentDefs = function parseArgumentDefs() {
    return this.optionalMany(TokenKind.PAREN_L, this.parseInputValueDef, TokenKind.PAREN_R);
  };
  _proto.parseInputValueDef = function parseInputValueDef() {
    var start = this._lexer.token;
    var description = this.parseDescription();
    var name = this.parseName();
    this.expectToken(TokenKind.COLON);
    var type = this.parseTypeReference();
    var defaultValue;
    if (this.expectOptionalToken(TokenKind.EQUALS)) {
      defaultValue = this.parseValueLiteral(true);
    }
    var directives = this.parseDirectives(true);
    return {
      kind: Kind.INPUT_VALUE_DEFINITION,
      description,
      name,
      type,
      defaultValue,
      directives,
      loc: this.loc(start)
    };
  };
  _proto.parseInterfaceTypeDefinition = function parseInterfaceTypeDefinition() {
    var start = this._lexer.token;
    var description = this.parseDescription();
    this.expectKeyword("interface");
    var name = this.parseName();
    var interfaces = this.parseImplementsInterfaces();
    var directives = this.parseDirectives(true);
    var fields = this.parseFieldsDefinition();
    return {
      kind: Kind.INTERFACE_TYPE_DEFINITION,
      description,
      name,
      interfaces,
      directives,
      fields,
      loc: this.loc(start)
    };
  };
  _proto.parseUnionTypeDefinition = function parseUnionTypeDefinition() {
    var start = this._lexer.token;
    var description = this.parseDescription();
    this.expectKeyword("union");
    var name = this.parseName();
    var directives = this.parseDirectives(true);
    var types = this.parseUnionMemberTypes();
    return {
      kind: Kind.UNION_TYPE_DEFINITION,
      description,
      name,
      directives,
      types,
      loc: this.loc(start)
    };
  };
  _proto.parseUnionMemberTypes = function parseUnionMemberTypes() {
    return this.expectOptionalToken(TokenKind.EQUALS) ? this.delimitedMany(TokenKind.PIPE, this.parseNamedType) : [];
  };
  _proto.parseEnumTypeDefinition = function parseEnumTypeDefinition() {
    var start = this._lexer.token;
    var description = this.parseDescription();
    this.expectKeyword("enum");
    var name = this.parseName();
    var directives = this.parseDirectives(true);
    var values = this.parseEnumValuesDefinition();
    return {
      kind: Kind.ENUM_TYPE_DEFINITION,
      description,
      name,
      directives,
      values,
      loc: this.loc(start)
    };
  };
  _proto.parseEnumValuesDefinition = function parseEnumValuesDefinition() {
    return this.optionalMany(TokenKind.BRACE_L, this.parseEnumValueDefinition, TokenKind.BRACE_R);
  };
  _proto.parseEnumValueDefinition = function parseEnumValueDefinition() {
    var start = this._lexer.token;
    var description = this.parseDescription();
    var name = this.parseName();
    var directives = this.parseDirectives(true);
    return {
      kind: Kind.ENUM_VALUE_DEFINITION,
      description,
      name,
      directives,
      loc: this.loc(start)
    };
  };
  _proto.parseInputObjectTypeDefinition = function parseInputObjectTypeDefinition() {
    var start = this._lexer.token;
    var description = this.parseDescription();
    this.expectKeyword("input");
    var name = this.parseName();
    var directives = this.parseDirectives(true);
    var fields = this.parseInputFieldsDefinition();
    return {
      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,
      description,
      name,
      directives,
      fields,
      loc: this.loc(start)
    };
  };
  _proto.parseInputFieldsDefinition = function parseInputFieldsDefinition() {
    return this.optionalMany(TokenKind.BRACE_L, this.parseInputValueDef, TokenKind.BRACE_R);
  };
  _proto.parseTypeSystemExtension = function parseTypeSystemExtension() {
    var keywordToken = this._lexer.lookahead();
    if (keywordToken.kind === TokenKind.NAME) {
      switch (keywordToken.value) {
        case "schema":
          return this.parseSchemaExtension();
        case "scalar":
          return this.parseScalarTypeExtension();
        case "type":
          return this.parseObjectTypeExtension();
        case "interface":
          return this.parseInterfaceTypeExtension();
        case "union":
          return this.parseUnionTypeExtension();
        case "enum":
          return this.parseEnumTypeExtension();
        case "input":
          return this.parseInputObjectTypeExtension();
      }
    }
    throw this.unexpected(keywordToken);
  };
  _proto.parseSchemaExtension = function parseSchemaExtension() {
    var start = this._lexer.token;
    this.expectKeyword("extend");
    this.expectKeyword("schema");
    var directives = this.parseDirectives(true);
    var operationTypes = this.optionalMany(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);
    if (directives.length === 0 && operationTypes.length === 0) {
      throw this.unexpected();
    }
    return {
      kind: Kind.SCHEMA_EXTENSION,
      directives,
      operationTypes,
      loc: this.loc(start)
    };
  };
  _proto.parseScalarTypeExtension = function parseScalarTypeExtension() {
    var start = this._lexer.token;
    this.expectKeyword("extend");
    this.expectKeyword("scalar");
    var name = this.parseName();
    var directives = this.parseDirectives(true);
    if (directives.length === 0) {
      throw this.unexpected();
    }
    return {
      kind: Kind.SCALAR_TYPE_EXTENSION,
      name,
      directives,
      loc: this.loc(start)
    };
  };
  _proto.parseObjectTypeExtension = function parseObjectTypeExtension() {
    var start = this._lexer.token;
    this.expectKeyword("extend");
    this.expectKeyword("type");
    var name = this.parseName();
    var interfaces = this.parseImplementsInterfaces();
    var directives = this.parseDirectives(true);
    var fields = this.parseFieldsDefinition();
    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {
      throw this.unexpected();
    }
    return {
      kind: Kind.OBJECT_TYPE_EXTENSION,
      name,
      interfaces,
      directives,
      fields,
      loc: this.loc(start)
    };
  };
  _proto.parseInterfaceTypeExtension = function parseInterfaceTypeExtension() {
    var start = this._lexer.token;
    this.expectKeyword("extend");
    this.expectKeyword("interface");
    var name = this.parseName();
    var interfaces = this.parseImplementsInterfaces();
    var directives = this.parseDirectives(true);
    var fields = this.parseFieldsDefinition();
    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {
      throw this.unexpected();
    }
    return {
      kind: Kind.INTERFACE_TYPE_EXTENSION,
      name,
      interfaces,
      directives,
      fields,
      loc: this.loc(start)
    };
  };
  _proto.parseUnionTypeExtension = function parseUnionTypeExtension() {
    var start = this._lexer.token;
    this.expectKeyword("extend");
    this.expectKeyword("union");
    var name = this.parseName();
    var directives = this.parseDirectives(true);
    var types = this.parseUnionMemberTypes();
    if (directives.length === 0 && types.length === 0) {
      throw this.unexpected();
    }
    return {
      kind: Kind.UNION_TYPE_EXTENSION,
      name,
      directives,
      types,
      loc: this.loc(start)
    };
  };
  _proto.parseEnumTypeExtension = function parseEnumTypeExtension() {
    var start = this._lexer.token;
    this.expectKeyword("extend");
    this.expectKeyword("enum");
    var name = this.parseName();
    var directives = this.parseDirectives(true);
    var values = this.parseEnumValuesDefinition();
    if (directives.length === 0 && values.length === 0) {
      throw this.unexpected();
    }
    return {
      kind: Kind.ENUM_TYPE_EXTENSION,
      name,
      directives,
      values,
      loc: this.loc(start)
    };
  };
  _proto.parseInputObjectTypeExtension = function parseInputObjectTypeExtension() {
    var start = this._lexer.token;
    this.expectKeyword("extend");
    this.expectKeyword("input");
    var name = this.parseName();
    var directives = this.parseDirectives(true);
    var fields = this.parseInputFieldsDefinition();
    if (directives.length === 0 && fields.length === 0) {
      throw this.unexpected();
    }
    return {
      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,
      name,
      directives,
      fields,
      loc: this.loc(start)
    };
  };
  _proto.parseDirectiveDefinition = function parseDirectiveDefinition() {
    var start = this._lexer.token;
    var description = this.parseDescription();
    this.expectKeyword("directive");
    this.expectToken(TokenKind.AT);
    var name = this.parseName();
    var args = this.parseArgumentDefs();
    var repeatable = this.expectOptionalKeyword("repeatable");
    this.expectKeyword("on");
    var locations = this.parseDirectiveLocations();
    return {
      kind: Kind.DIRECTIVE_DEFINITION,
      description,
      name,
      arguments: args,
      repeatable,
      locations,
      loc: this.loc(start)
    };
  };
  _proto.parseDirectiveLocations = function parseDirectiveLocations() {
    return this.delimitedMany(TokenKind.PIPE, this.parseDirectiveLocation);
  };
  _proto.parseDirectiveLocation = function parseDirectiveLocation() {
    var start = this._lexer.token;
    var name = this.parseName();
    if (DirectiveLocation[name.value] !== void 0) {
      return name;
    }
    throw this.unexpected(start);
  };
  _proto.loc = function loc(startToken) {
    var _this$_options4;
    if (((_this$_options4 = this._options) === null || _this$_options4 === void 0 ? void 0 : _this$_options4.noLocation) !== true) {
      return new Location(startToken, this._lexer.lastToken, this._lexer.source);
    }
  };
  _proto.peek = function peek(kind) {
    return this._lexer.token.kind === kind;
  };
  _proto.expectToken = function expectToken(kind) {
    var token = this._lexer.token;
    if (token.kind === kind) {
      this._lexer.advance();
      return token;
    }
    throw syntaxError(this._lexer.source, token.start, "Expected ".concat(getTokenKindDesc(kind), ", found ").concat(getTokenDesc(token), "."));
  };
  _proto.expectOptionalToken = function expectOptionalToken(kind) {
    var token = this._lexer.token;
    if (token.kind === kind) {
      this._lexer.advance();
      return token;
    }
    return void 0;
  };
  _proto.expectKeyword = function expectKeyword(value) {
    var token = this._lexer.token;
    if (token.kind === TokenKind.NAME && token.value === value) {
      this._lexer.advance();
    } else {
      throw syntaxError(this._lexer.source, token.start, 'Expected "'.concat(value, '", found ').concat(getTokenDesc(token), "."));
    }
  };
  _proto.expectOptionalKeyword = function expectOptionalKeyword(value) {
    var token = this._lexer.token;
    if (token.kind === TokenKind.NAME && token.value === value) {
      this._lexer.advance();
      return true;
    }
    return false;
  };
  _proto.unexpected = function unexpected(atToken) {
    var token = atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;
    return syntaxError(this._lexer.source, token.start, "Unexpected ".concat(getTokenDesc(token), "."));
  };
  _proto.any = function any(openKind, parseFn, closeKind) {
    this.expectToken(openKind);
    var nodes = [];
    while (!this.expectOptionalToken(closeKind)) {
      nodes.push(parseFn.call(this));
    }
    return nodes;
  };
  _proto.optionalMany = function optionalMany(openKind, parseFn, closeKind) {
    if (this.expectOptionalToken(openKind)) {
      var nodes = [];
      do {
        nodes.push(parseFn.call(this));
      } while (!this.expectOptionalToken(closeKind));
      return nodes;
    }
    return [];
  };
  _proto.many = function many(openKind, parseFn, closeKind) {
    this.expectToken(openKind);
    var nodes = [];
    do {
      nodes.push(parseFn.call(this));
    } while (!this.expectOptionalToken(closeKind));
    return nodes;
  };
  _proto.delimitedMany = function delimitedMany(delimiterKind, parseFn) {
    this.expectOptionalToken(delimiterKind);
    var nodes = [];
    do {
      nodes.push(parseFn.call(this));
    } while (this.expectOptionalToken(delimiterKind));
    return nodes;
  };
  return Parser2;
}();
function getTokenDesc(token) {
  var value = token.value;
  return getTokenKindDesc(token.kind) + (value != null ? ' "'.concat(value, '"') : "");
}
function getTokenKindDesc(kind) {
  return isPunctuatorTokenKind(kind) ? '"'.concat(kind, '"') : kind;
}
var QueryDocumentKeys = {
  Name: [],
  Document: ["definitions"],
  OperationDefinition: ["name", "variableDefinitions", "directives", "selectionSet"],
  VariableDefinition: ["variable", "type", "defaultValue", "directives"],
  Variable: ["name"],
  SelectionSet: ["selections"],
  Field: ["alias", "name", "arguments", "directives", "selectionSet"],
  Argument: ["name", "value"],
  FragmentSpread: ["name", "directives"],
  InlineFragment: ["typeCondition", "directives", "selectionSet"],
  FragmentDefinition: [
    "name",
    "variableDefinitions",
    "typeCondition",
    "directives",
    "selectionSet"
  ],
  IntValue: [],
  FloatValue: [],
  StringValue: [],
  BooleanValue: [],
  NullValue: [],
  EnumValue: [],
  ListValue: ["values"],
  ObjectValue: ["fields"],
  ObjectField: ["name", "value"],
  Directive: ["name", "arguments"],
  NamedType: ["name"],
  ListType: ["type"],
  NonNullType: ["type"],
  SchemaDefinition: ["description", "directives", "operationTypes"],
  OperationTypeDefinition: ["type"],
  ScalarTypeDefinition: ["description", "name", "directives"],
  ObjectTypeDefinition: ["description", "name", "interfaces", "directives", "fields"],
  FieldDefinition: ["description", "name", "arguments", "type", "directives"],
  InputValueDefinition: ["description", "name", "type", "defaultValue", "directives"],
  InterfaceTypeDefinition: ["description", "name", "interfaces", "directives", "fields"],
  UnionTypeDefinition: ["description", "name", "directives", "types"],
  EnumTypeDefinition: ["description", "name", "directives", "values"],
  EnumValueDefinition: ["description", "name", "directives"],
  InputObjectTypeDefinition: ["description", "name", "directives", "fields"],
  DirectiveDefinition: ["description", "name", "arguments", "locations"],
  SchemaExtension: ["directives", "operationTypes"],
  ScalarTypeExtension: ["name", "directives"],
  ObjectTypeExtension: ["name", "interfaces", "directives", "fields"],
  InterfaceTypeExtension: ["name", "interfaces", "directives", "fields"],
  UnionTypeExtension: ["name", "directives", "types"],
  EnumTypeExtension: ["name", "directives", "values"],
  InputObjectTypeExtension: ["name", "directives", "fields"]
};
var BREAK = Object.freeze({});
function visit(root, visitor) {
  var visitorKeys = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : QueryDocumentKeys;
  var stack = void 0;
  var inArray = Array.isArray(root);
  var keys = [root];
  var index2 = -1;
  var edits = [];
  var node2 = void 0;
  var key = void 0;
  var parent = void 0;
  var path = [];
  var ancestors = [];
  var newRoot = root;
  do {
    index2++;
    var isLeaving = index2 === keys.length;
    var isEdited = isLeaving && edits.length !== 0;
    if (isLeaving) {
      key = ancestors.length === 0 ? void 0 : path[path.length - 1];
      node2 = parent;
      parent = ancestors.pop();
      if (isEdited) {
        if (inArray) {
          node2 = node2.slice();
        } else {
          var clone = {};
          for (var _i2 = 0, _Object$keys2 = Object.keys(node2); _i2 < _Object$keys2.length; _i2++) {
            var k2 = _Object$keys2[_i2];
            clone[k2] = node2[k2];
          }
          node2 = clone;
        }
        var editOffset = 0;
        for (var ii2 = 0; ii2 < edits.length; ii2++) {
          var editKey = edits[ii2][0];
          var editValue = edits[ii2][1];
          if (inArray) {
            editKey -= editOffset;
          }
          if (inArray && editValue === null) {
            node2.splice(editKey, 1);
            editOffset++;
          } else {
            node2[editKey] = editValue;
          }
        }
      }
      index2 = stack.index;
      keys = stack.keys;
      edits = stack.edits;
      inArray = stack.inArray;
      stack = stack.prev;
    } else {
      key = parent ? inArray ? index2 : keys[index2] : void 0;
      node2 = parent ? parent[key] : newRoot;
      if (node2 === null || node2 === void 0) {
        continue;
      }
      if (parent) {
        path.push(key);
      }
    }
    var result = void 0;
    if (!Array.isArray(node2)) {
      if (!isNode(node2)) {
        throw new Error("Invalid AST Node: ".concat(inspect(node2), "."));
      }
      var visitFn = getVisitFn(visitor, node2.kind, isLeaving);
      if (visitFn) {
        result = visitFn.call(visitor, node2, key, parent, path, ancestors);
        if (result === BREAK) {
          break;
        }
        if (result === false) {
          if (!isLeaving) {
            path.pop();
            continue;
          }
        } else if (result !== void 0) {
          edits.push([key, result]);
          if (!isLeaving) {
            if (isNode(result)) {
              node2 = result;
            } else {
              path.pop();
              continue;
            }
          }
        }
      }
    }
    if (result === void 0 && isEdited) {
      edits.push([key, node2]);
    }
    if (isLeaving) {
      path.pop();
    } else {
      var _visitorKeys$node$kin;
      stack = {
        inArray,
        index: index2,
        keys,
        edits,
        prev: stack
      };
      inArray = Array.isArray(node2);
      keys = inArray ? node2 : (_visitorKeys$node$kin = visitorKeys[node2.kind]) !== null && _visitorKeys$node$kin !== void 0 ? _visitorKeys$node$kin : [];
      index2 = -1;
      edits = [];
      if (parent) {
        ancestors.push(parent);
      }
      parent = node2;
    }
  } while (stack !== void 0);
  if (edits.length !== 0) {
    newRoot = edits[edits.length - 1][1];
  }
  return newRoot;
}
function getVisitFn(visitor, kind, isLeaving) {
  var kindVisitor = visitor[kind];
  if (kindVisitor) {
    if (!isLeaving && typeof kindVisitor === "function") {
      return kindVisitor;
    }
    var kindSpecificVisitor = isLeaving ? kindVisitor.leave : kindVisitor.enter;
    if (typeof kindSpecificVisitor === "function") {
      return kindSpecificVisitor;
    }
  } else {
    var specificVisitor = isLeaving ? visitor.leave : visitor.enter;
    if (specificVisitor) {
      if (typeof specificVisitor === "function") {
        return specificVisitor;
      }
      var specificKindVisitor = specificVisitor[kind];
      if (typeof specificKindVisitor === "function") {
        return specificKindVisitor;
      }
    }
  }
}
function print(ast2) {
  return visit(ast2, {
    leave: printDocASTReducer
  });
}
var MAX_LINE_LENGTH = 80;
var printDocASTReducer = {
  Name: function Name(node2) {
    return node2.value;
  },
  Variable: function Variable(node2) {
    return "$" + node2.name;
  },
  Document: function Document2(node2) {
    return join(node2.definitions, "\n\n") + "\n";
  },
  OperationDefinition: function OperationDefinition(node2) {
    var op = node2.operation;
    var name = node2.name;
    var varDefs = wrap("(", join(node2.variableDefinitions, ", "), ")");
    var directives = join(node2.directives, " ");
    var selectionSet = node2.selectionSet;
    return !name && !directives && !varDefs && op === "query" ? selectionSet : join([op, join([name, varDefs]), directives, selectionSet], " ");
  },
  VariableDefinition: function VariableDefinition(_ref) {
    var variable = _ref.variable, type = _ref.type, defaultValue = _ref.defaultValue, directives = _ref.directives;
    return variable + ": " + type + wrap(" = ", defaultValue) + wrap(" ", join(directives, " "));
  },
  SelectionSet: function SelectionSet(_ref2) {
    var selections = _ref2.selections;
    return block(selections);
  },
  Field: function Field(_ref3) {
    var alias = _ref3.alias, name = _ref3.name, args = _ref3.arguments, directives = _ref3.directives, selectionSet = _ref3.selectionSet;
    var prefix2 = wrap("", alias, ": ") + name;
    var argsLine = prefix2 + wrap("(", join(args, ", "), ")");
    if (argsLine.length > MAX_LINE_LENGTH) {
      argsLine = prefix2 + wrap("(\n", indent(join(args, "\n")), "\n)");
    }
    return join([argsLine, join(directives, " "), selectionSet], " ");
  },
  Argument: function Argument(_ref4) {
    var name = _ref4.name, value = _ref4.value;
    return name + ": " + value;
  },
  FragmentSpread: function FragmentSpread(_ref5) {
    var name = _ref5.name, directives = _ref5.directives;
    return "..." + name + wrap(" ", join(directives, " "));
  },
  InlineFragment: function InlineFragment(_ref6) {
    var typeCondition = _ref6.typeCondition, directives = _ref6.directives, selectionSet = _ref6.selectionSet;
    return join(["...", wrap("on ", typeCondition), join(directives, " "), selectionSet], " ");
  },
  FragmentDefinition: function FragmentDefinition(_ref7) {
    var name = _ref7.name, typeCondition = _ref7.typeCondition, variableDefinitions = _ref7.variableDefinitions, directives = _ref7.directives, selectionSet = _ref7.selectionSet;
    return "fragment ".concat(name).concat(wrap("(", join(variableDefinitions, ", "), ")"), " ") + "on ".concat(typeCondition, " ").concat(wrap("", join(directives, " "), " ")) + selectionSet;
  },
  IntValue: function IntValue(_ref8) {
    var value = _ref8.value;
    return value;
  },
  FloatValue: function FloatValue(_ref9) {
    var value = _ref9.value;
    return value;
  },
  StringValue: function StringValue(_ref10, key) {
    var value = _ref10.value, isBlockString = _ref10.block;
    return isBlockString ? printBlockString(value, key === "description" ? "" : "  ") : JSON.stringify(value);
  },
  BooleanValue: function BooleanValue(_ref11) {
    var value = _ref11.value;
    return value ? "true" : "false";
  },
  NullValue: function NullValue() {
    return "null";
  },
  EnumValue: function EnumValue(_ref12) {
    var value = _ref12.value;
    return value;
  },
  ListValue: function ListValue(_ref13) {
    var values = _ref13.values;
    return "[" + join(values, ", ") + "]";
  },
  ObjectValue: function ObjectValue(_ref14) {
    var fields = _ref14.fields;
    return "{" + join(fields, ", ") + "}";
  },
  ObjectField: function ObjectField(_ref15) {
    var name = _ref15.name, value = _ref15.value;
    return name + ": " + value;
  },
  Directive: function Directive(_ref16) {
    var name = _ref16.name, args = _ref16.arguments;
    return "@" + name + wrap("(", join(args, ", "), ")");
  },
  NamedType: function NamedType(_ref17) {
    var name = _ref17.name;
    return name;
  },
  ListType: function ListType(_ref18) {
    var type = _ref18.type;
    return "[" + type + "]";
  },
  NonNullType: function NonNullType(_ref19) {
    var type = _ref19.type;
    return type + "!";
  },
  SchemaDefinition: addDescription(function(_ref20) {
    var directives = _ref20.directives, operationTypes = _ref20.operationTypes;
    return join(["schema", join(directives, " "), block(operationTypes)], " ");
  }),
  OperationTypeDefinition: function OperationTypeDefinition(_ref21) {
    var operation = _ref21.operation, type = _ref21.type;
    return operation + ": " + type;
  },
  ScalarTypeDefinition: addDescription(function(_ref22) {
    var name = _ref22.name, directives = _ref22.directives;
    return join(["scalar", name, join(directives, " ")], " ");
  }),
  ObjectTypeDefinition: addDescription(function(_ref23) {
    var name = _ref23.name, interfaces = _ref23.interfaces, directives = _ref23.directives, fields = _ref23.fields;
    return join(["type", name, wrap("implements ", join(interfaces, " & ")), join(directives, " "), block(fields)], " ");
  }),
  FieldDefinition: addDescription(function(_ref24) {
    var name = _ref24.name, args = _ref24.arguments, type = _ref24.type, directives = _ref24.directives;
    return name + (hasMultilineItems(args) ? wrap("(\n", indent(join(args, "\n")), "\n)") : wrap("(", join(args, ", "), ")")) + ": " + type + wrap(" ", join(directives, " "));
  }),
  InputValueDefinition: addDescription(function(_ref25) {
    var name = _ref25.name, type = _ref25.type, defaultValue = _ref25.defaultValue, directives = _ref25.directives;
    return join([name + ": " + type, wrap("= ", defaultValue), join(directives, " ")], " ");
  }),
  InterfaceTypeDefinition: addDescription(function(_ref26) {
    var name = _ref26.name, interfaces = _ref26.interfaces, directives = _ref26.directives, fields = _ref26.fields;
    return join(["interface", name, wrap("implements ", join(interfaces, " & ")), join(directives, " "), block(fields)], " ");
  }),
  UnionTypeDefinition: addDescription(function(_ref27) {
    var name = _ref27.name, directives = _ref27.directives, types = _ref27.types;
    return join(["union", name, join(directives, " "), types && types.length !== 0 ? "= " + join(types, " | ") : ""], " ");
  }),
  EnumTypeDefinition: addDescription(function(_ref28) {
    var name = _ref28.name, directives = _ref28.directives, values = _ref28.values;
    return join(["enum", name, join(directives, " "), block(values)], " ");
  }),
  EnumValueDefinition: addDescription(function(_ref29) {
    var name = _ref29.name, directives = _ref29.directives;
    return join([name, join(directives, " ")], " ");
  }),
  InputObjectTypeDefinition: addDescription(function(_ref30) {
    var name = _ref30.name, directives = _ref30.directives, fields = _ref30.fields;
    return join(["input", name, join(directives, " "), block(fields)], " ");
  }),
  DirectiveDefinition: addDescription(function(_ref31) {
    var name = _ref31.name, args = _ref31.arguments, repeatable = _ref31.repeatable, locations = _ref31.locations;
    return "directive @" + name + (hasMultilineItems(args) ? wrap("(\n", indent(join(args, "\n")), "\n)") : wrap("(", join(args, ", "), ")")) + (repeatable ? " repeatable" : "") + " on " + join(locations, " | ");
  }),
  SchemaExtension: function SchemaExtension(_ref32) {
    var directives = _ref32.directives, operationTypes = _ref32.operationTypes;
    return join(["extend schema", join(directives, " "), block(operationTypes)], " ");
  },
  ScalarTypeExtension: function ScalarTypeExtension(_ref33) {
    var name = _ref33.name, directives = _ref33.directives;
    return join(["extend scalar", name, join(directives, " ")], " ");
  },
  ObjectTypeExtension: function ObjectTypeExtension(_ref34) {
    var name = _ref34.name, interfaces = _ref34.interfaces, directives = _ref34.directives, fields = _ref34.fields;
    return join(["extend type", name, wrap("implements ", join(interfaces, " & ")), join(directives, " "), block(fields)], " ");
  },
  InterfaceTypeExtension: function InterfaceTypeExtension(_ref35) {
    var name = _ref35.name, interfaces = _ref35.interfaces, directives = _ref35.directives, fields = _ref35.fields;
    return join(["extend interface", name, wrap("implements ", join(interfaces, " & ")), join(directives, " "), block(fields)], " ");
  },
  UnionTypeExtension: function UnionTypeExtension(_ref36) {
    var name = _ref36.name, directives = _ref36.directives, types = _ref36.types;
    return join(["extend union", name, join(directives, " "), types && types.length !== 0 ? "= " + join(types, " | ") : ""], " ");
  },
  EnumTypeExtension: function EnumTypeExtension(_ref37) {
    var name = _ref37.name, directives = _ref37.directives, values = _ref37.values;
    return join(["extend enum", name, join(directives, " "), block(values)], " ");
  },
  InputObjectTypeExtension: function InputObjectTypeExtension(_ref38) {
    var name = _ref38.name, directives = _ref38.directives, fields = _ref38.fields;
    return join(["extend input", name, join(directives, " "), block(fields)], " ");
  }
};
function addDescription(cb2) {
  return function(node2) {
    return join([node2.description, cb2(node2)], "\n");
  };
}
function join(maybeArray) {
  var _maybeArray$filter$jo;
  var separator = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
  return (_maybeArray$filter$jo = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.filter(function(x2) {
    return x2;
  }).join(separator)) !== null && _maybeArray$filter$jo !== void 0 ? _maybeArray$filter$jo : "";
}
function block(array) {
  return wrap("{\n", indent(join(array, "\n")), "\n}");
}
function wrap(start, maybeString) {
  var end = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "";
  return maybeString != null && maybeString !== "" ? start + maybeString + end : "";
}
function indent(str) {
  return wrap("  ", str.replace(/\n/g, "\n  "));
}
function isMultiline(str) {
  return str.indexOf("\n") !== -1;
}
function hasMultilineItems(maybeArray) {
  return maybeArray != null && maybeArray.some(isMultiline);
}
const LIB_VERSION = "0.6.4";
function fetchBuilder(request) {
  const defaultHeaders = {
    "content-type": "application/json",
    "user-agent": `Hydrogen ${LIB_VERSION}`
  };
  for (const [property, value] of Object.entries(defaultHeaders)) {
    if (!request.headers.has(property)) {
      request.headers.append(property, value);
    }
  }
  return async () => {
    const clonedRequest = request.clone();
    const body = await clonedRequest.text();
    const headers = {};
    clonedRequest.headers.forEach((hVal, hName) => {
      headers[hName] = hVal;
    });
    const response = await fetch(clonedRequest.url, {
      body,
      headers,
      method: clonedRequest.method
    });
    const data = await response.json();
    return data;
  };
}
function graphqlRequestBody(query, variables) {
  const queryString = typeof query === "string" ? query : print(query);
  return JSON.stringify({
    query: queryString,
    variables
  });
}
function convertShopifyImageData({ image: image2, options, loader, loaderOptions, id: propId, alt }) {
  const { url: src, altText, id: id2 } = image2;
  const { width, height } = getShopifyImageDimensions(image2, options);
  return {
    src,
    id: propId ? propId : id2,
    alt: alt ? alt : altText,
    width,
    height,
    loader: loader ? loader : shopifyImageLoader,
    loaderOptions: __spreadValues(__spreadValues({}, options), loaderOptions)
  };
}
function Image(props) {
  var _a, _b, _c, _d;
  const _a2 = props, { image: image2, options, src, id: id2, alt, width, height, loader, loaderOptions } = _a2, passthroughProps = __objRest(_a2, ["image", "options", "src", "id", "alt", "width", "height", "loader", "loaderOptions"]);
  if (!image2 && !src) {
    throw new Error("Image component: requires either an `image` or `src` prop");
  }
  if (!image2 && src && (!width || !height)) {
    throw new Error(`Image component: when 'src' is provided, 'width' and 'height' are required and needs to be valid values (i.e. greater than zero). Provided values: 'src': ${src}, 'width': ${width}, 'height': ${height}`);
  }
  const imgProps = image2 ? convertShopifyImageData({
    image: image2,
    options,
    loader,
    loaderOptions,
    id: id2,
    alt
  }) : {
    src,
    id: id2,
    alt,
    width,
    height,
    loader,
    loaderOptions: __spreadValues({ width, height }, loaderOptions)
  };
  const srcPath = imgProps.loader ? imgProps.loader({ src: imgProps.src, options: imgProps.loaderOptions }) : imgProps.src;
  return React$2.createElement("img", __spreadProps(__spreadValues({ id: (_a = imgProps.id) !== null && _a !== void 0 ? _a : "", loading: "lazy", alt: (_b = imgProps.alt) !== null && _b !== void 0 ? _b : "" }, passthroughProps), { src: srcPath, width: (_c = imgProps.width) !== null && _c !== void 0 ? _c : void 0, height: (_d = imgProps.height) !== null && _d !== void 0 ? _d : void 0 }));
}
Image.Fragment = ImageFragment;
function Video(props) {
  var _a;
  const _a2 = props, { video, options, id: id2 = video.id, playsInline = true, controls = true } = _a2, passthroughProps = __objRest(_a2, ["video", "options", "id", "playsInline", "controls"]);
  const posterUrl = useImageUrl((_a = video.previewImage) === null || _a === void 0 ? void 0 : _a.url, options);
  return react.exports.createElement("video", __spreadProps(__spreadValues({}, passthroughProps), { id: id2, playsInline, controls, poster: posterUrl }), video.sources.map((source) => react.exports.createElement("source", { key: source.url, src: source.url, type: source.mimeType })));
}
Video.Fragment = VideoFragment;
function ExternalVideo(props) {
  const _a = props, { video, options, id: id2 = video.id, frameBorder = "0", allow = "accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture", allowFullScreen = true } = _a, passthroughProps = __objRest(_a, ["video", "options", "id", "frameBorder", "allow", "allowFullScreen"]);
  const url = useEmbeddedVideoUrl(video.embeddedUrl, options);
  return react.exports.createElement("iframe", __spreadProps(__spreadValues({}, passthroughProps), { id: id2, frameBorder, allow, allowFullScreen, src: url }));
}
ExternalVideo.Fragment = ExternalVideoFragment;
function Model3D$1(props) {
  var _a, _b, _c, _d, _e, _f;
  const [modelViewer, setModelViewer] = react.exports.useState(void 0);
  const callbackRef = react.exports.useCallback((node2) => {
    setModelViewer(node2);
  }, []);
  const _a2 = props, {
    model,
    id: id2 = model.id,
    children,
    className
  } = _a2, passthroughProps = __objRest(_a2, [
    "model",
    "id",
    "children",
    "className"
  ]);
  const [modelViewerLoaded, setModelViewerLoaded] = react.exports.useState(false);
  react.exports.useEffect(() => {
    async function loadModelViewer() {
      const loaded = await loadScript("https://unpkg.com/@google/model-viewer@v1.8.0/dist/model-viewer.min.js", {
        module: true
      });
      if (!loaded) {
        console.warn("model-viewer library did not load");
      }
      setModelViewerLoaded(true);
    }
    loadModelViewer();
  }, []);
  react.exports.useEffect(() => {
    if (modelViewer == null) {
      return;
    }
    if (passthroughProps.onError)
      modelViewer.addEventListener("error", passthroughProps.onError);
    if (passthroughProps.onLoad)
      modelViewer.addEventListener("load", passthroughProps.onLoad);
    if (passthroughProps.onPreload)
      modelViewer.addEventListener("preload", passthroughProps.onPreload);
    if (passthroughProps.onModelVisibility)
      modelViewer.addEventListener("model-visibility", passthroughProps.onModelVisibility);
    if (passthroughProps.onProgress)
      modelViewer.addEventListener("progress", passthroughProps.onProgress);
    if (passthroughProps.onArStatus)
      modelViewer.addEventListener("ar-status", passthroughProps.onArStatus);
    if (passthroughProps.onArTracking)
      modelViewer.addEventListener("ar-tracking", passthroughProps.onArTracking);
    if (passthroughProps.onQuickLookButtonTapped)
      modelViewer.addEventListener("quick-look-button-tapped", passthroughProps.onQuickLookButtonTapped);
    if (passthroughProps.onCameraChange)
      modelViewer.addEventListener("camera-change", passthroughProps.onCameraChange);
    if (passthroughProps.onEnvironmentChange)
      modelViewer.addEventListener("environment-change", passthroughProps.onEnvironmentChange);
    if (passthroughProps.onPlay)
      modelViewer.addEventListener("play", passthroughProps.onPlay);
    if (passthroughProps.onPause)
      modelViewer.addEventListener("ar-status", passthroughProps.onPause);
    if (passthroughProps.onSceneGraphReady)
      modelViewer.addEventListener("scene-graph-ready", passthroughProps.onSceneGraphReady);
    return () => {
      if (modelViewer == null) {
        return;
      }
      if (passthroughProps.onError)
        modelViewer.removeEventListener("error", passthroughProps.onError);
      if (passthroughProps.onLoad)
        modelViewer.removeEventListener("load", passthroughProps.onLoad);
      if (passthroughProps.onPreload)
        modelViewer.removeEventListener("preload", passthroughProps.onPreload);
      if (passthroughProps.onModelVisibility)
        modelViewer.removeEventListener("model-visibility", passthroughProps.onModelVisibility);
      if (passthroughProps.onProgress)
        modelViewer.removeEventListener("progress", passthroughProps.onProgress);
      if (passthroughProps.onArStatus)
        modelViewer.removeEventListener("ar-status", passthroughProps.onArStatus);
      if (passthroughProps.onArTracking)
        modelViewer.removeEventListener("ar-tracking", passthroughProps.onArTracking);
      if (passthroughProps.onQuickLookButtonTapped)
        modelViewer.removeEventListener("quick-look-button-tapped", passthroughProps.onQuickLookButtonTapped);
      if (passthroughProps.onCameraChange)
        modelViewer.removeEventListener("camera-change", passthroughProps.onCameraChange);
      if (passthroughProps.onEnvironmentChange)
        modelViewer.removeEventListener("environment-change", passthroughProps.onEnvironmentChange);
      if (passthroughProps.onPlay)
        modelViewer.removeEventListener("play", passthroughProps.onPlay);
      if (passthroughProps.onPause)
        modelViewer.removeEventListener("ar-status", passthroughProps.onPause);
      if (passthroughProps.onSceneGraphReady)
        modelViewer.removeEventListener("scene-graph-ready", passthroughProps.onSceneGraphReady);
    };
  }, [modelViewer, passthroughProps.onArStatus, passthroughProps.onArTracking, passthroughProps.onCameraChange, passthroughProps.onEnvironmentChange, passthroughProps.onError, passthroughProps.onLoad, passthroughProps.onModelVisibility, passthroughProps.onPause, passthroughProps.onPlay, passthroughProps.onPreload, passthroughProps.onProgress, passthroughProps.onQuickLookButtonTapped, passthroughProps.onSceneGraphReady]);
  if (!modelViewerLoaded) {
    return null;
  }
  return /* @__PURE__ */ jsx("model-viewer", __spreadProps(__spreadValues({
    ref: callbackRef
  }, passthroughProps), {
    class: className,
    id: id2,
    src: model.sources[0].url,
    alt: model.alt,
    "camera-controls": (_a = passthroughProps.cameraControls) !== null && _a !== void 0 ? _a : true,
    poster: (_b = model.previewImage) === null || _b === void 0 ? void 0 : _b.url,
    autoplay: (_c = passthroughProps.autoplay) !== null && _c !== void 0 ? _c : true,
    loading: passthroughProps.loading,
    reveal: passthroughProps.reveal,
    ar: passthroughProps.ar,
    "ar-modes": passthroughProps.arModes,
    "ar-scale": passthroughProps.arScale,
    "ar-placement": passthroughProps.arPlacement,
    "ios-src": passthroughProps.iosSrc,
    "touch-action": passthroughProps.touchAction,
    "disable-zoom": passthroughProps.disableZoom,
    "orbit-sensitivity": passthroughProps.orbitSensitivity,
    "auto-rotate": passthroughProps.autoRotate,
    "auto-rotate-delay": passthroughProps.autoRotateDelay,
    "rotation-per-second": passthroughProps.rotationPerSecond,
    "interaction-policy": passthroughProps.interactionPolicy,
    "interaction-prompt": passthroughProps.interactionPrompt,
    "interaction-prompt-style": passthroughProps.interactionPromptStyle,
    "interaction-prompt-threshold": passthroughProps.interactionPromptThreshold,
    "camera-orbit": passthroughProps.cameraOrbit,
    "camera-target": passthroughProps.cameraTarget,
    "field-of-view": passthroughProps.fieldOfView,
    "max-camera-orbit": passthroughProps.maxCameraOrbit,
    "min-camera-orbit": passthroughProps.minCameraOrbit,
    "max-field-of-view": passthroughProps.maxFieldOfView,
    "min-field-of-view": passthroughProps.minFieldOfView,
    bounds: passthroughProps.bounds,
    "interpolation-decay": (_d = passthroughProps.interpolationDecay) !== null && _d !== void 0 ? _d : 100,
    "skybox-image": passthroughProps.skyboxImage,
    "environment-image": passthroughProps.environmentImage,
    exposure: passthroughProps.exposure,
    "shadow-intensity": (_e = passthroughProps.shadowIntensity) !== null && _e !== void 0 ? _e : 0,
    "shadow-softness": (_f = passthroughProps.shadowSoftness) !== null && _f !== void 0 ? _f : 0,
    "animation-name": passthroughProps.animationName,
    "animation-crossfade-duration": passthroughProps.animationCrossfadeDuration,
    "variant-name": passthroughProps.variantName,
    orientation: passthroughProps.orientation,
    scale: passthroughProps.scale,
    children
  }));
}
Model3D$1.Fragment = Model3DFragment;
const Model3D = wrapInClientMarker({ name: "Model3D", id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/node_modules/@shopify/hydrogen/dist/esnext/components/Model3D/Model3D.client.js", component: Model3D$1, named: true });
function MediaFile(_a) {
  var _b = _a, { media, options } = _b, passthroughProps = __objRest(_b, ["media", "options"]);
  switch (media.mediaContentType) {
    case "IMAGE": {
      return react.exports.createElement(Image, __spreadProps(__spreadValues({}, passthroughProps), { image: media.image, options }));
    }
    case "VIDEO":
      return react.exports.createElement(Video, __spreadProps(__spreadValues({}, passthroughProps), { video: media, options }));
    case "EXTERNAL_VIDEO":
      return react.exports.createElement(ExternalVideo, __spreadProps(__spreadValues({}, passthroughProps), { video: media, options }));
    case "MODEL_3D":
      return react.exports.createElement(Model3D, __spreadProps(__spreadValues({}, passthroughProps), { model: media }));
    default:
      return null;
  }
}
MediaFile.Fragment = MediaFileFragment$1;
const MediaFileFragment = MediaFileFragment$1;
function RawHtml(props) {
  const _a = props, { string, unsanitized, as } = _a, passthroughProps = __objRest(_a, ["string", "unsanitized", "as"]);
  const Wrapper = as !== null && as !== void 0 ? as : "div";
  const sanitizedString = React$2.useMemo(() => {
    if (unsanitized || true) {
      return string;
    }
  }, [string, unsanitized]);
  return React$2.createElement(Wrapper, __spreadProps(__spreadValues({}, passthroughProps), { dangerouslySetInnerHTML: { __html: sanitizedString } }));
}
function useCartFetch() {
  const { storeDomain, graphqlApiVersion, storefrontToken } = useShop();
  return React$2.useCallback(({ query, variables }) => {
    return fetch(`https://${storeDomain}/api/${graphqlApiVersion}/graphql.json`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "X-Shopify-Storefront-Access-Token": storefrontToken
      },
      body: JSON.stringify({
        query: query.toString(),
        variables
      })
    }).then((res) => res.json()).catch((error) => {
      return {
        data: void 0,
        error: error.toString()
      };
    });
  }, [storeDomain, graphqlApiVersion, storefrontToken]);
}
function useInstantCheckout() {
  const [cart, updateCart] = react.exports.useState();
  const [checkoutUrl, updateCheckoutUrl] = react.exports.useState();
  const [error, updateError] = react.exports.useState();
  const fetch2 = useCartFetch();
  const createInstantCheckout = React$2.useCallback(async (cartInput) => {
    var _a, _b;
    const { data, error: error2 } = await fetch2({
      query: CartCreate,
      variables: {
        input: cartInput
      }
    });
    if (error2) {
      updateError(error2);
      updateCart(void 0);
      updateCheckoutUrl(void 0);
    }
    if ((_a = data === null || data === void 0 ? void 0 : data.cartCreate) === null || _a === void 0 ? void 0 : _a.cart) {
      const dataCart = data.cartCreate.cart;
      updateCart(__spreadProps(__spreadValues({}, dataCart), {
        lines: flattenConnection(dataCart.lines),
        note: (_b = dataCart.note) !== null && _b !== void 0 ? _b : void 0
      }));
      updateCheckoutUrl(dataCart.checkoutUrl);
    }
  }, [fetch2]);
  return { cart, checkoutUrl, error, createInstantCheckout };
}
const CartContext$1 = react.exports.createContext(null);
const CART_ID_STORAGE_KEY = "shopifyCartId";
function useServerState() {
  var _a;
  return (_a = react.exports.useContext(ServerStateContext)) !== null && _a !== void 0 ? _a : {};
}
function cartReducer(state2, action) {
  switch (action.type) {
    case "cartFetch": {
      if (state2.status === "uninitialized") {
        return {
          status: "fetching"
        };
      }
      break;
    }
    case "cartCreate": {
      if (state2.status === "uninitialized") {
        return {
          status: "creating"
        };
      }
      break;
    }
    case "resolve": {
      const resolvableStatuses = ["updating", "fetching", "creating"];
      if (resolvableStatuses.includes(state2.status)) {
        return {
          status: "idle",
          cart: action.cart
        };
      }
      break;
    }
    case "reject": {
      if (state2.status === "fetching" || state2.status === "creating") {
        return {
          status: "uninitialized",
          error: action.error
        };
      } else if (state2.status === "updating") {
        return {
          status: "idle",
          cart: state2.lastValidCart,
          error: action.error
        };
      }
      break;
    }
    case "resetCart": {
      if (state2.status === "fetching") {
        return {
          status: "uninitialized"
        };
      }
      break;
    }
    case "addLineItem": {
      if (state2.status === "idle") {
        return {
          status: "updating",
          cart: state2.cart,
          lastValidCart: state2.cart
        };
      }
      break;
    }
    case "removeLineItem": {
      if (state2.status === "idle") {
        return {
          status: "updating",
          cart: __spreadProps(__spreadValues({}, state2.cart), {
            lines: state2.cart.lines.filter(({
              id: id2
            }) => !action.lines.includes(id2))
          }),
          lastValidCart: state2.cart
        };
      }
      break;
    }
    case "updateLineItem": {
      if (state2.status === "idle") {
        return {
          status: "updating",
          cart: __spreadProps(__spreadValues({}, state2.cart), {
            lines: state2.cart.lines.map((line) => {
              const updatedLine = action.lines.find(({
                id: id2
              }) => id2 === line.id);
              if (updatedLine && updatedLine.quantity) {
                return __spreadProps(__spreadValues({}, line), {
                  quantity: updatedLine.quantity
                });
              }
              return line;
            })
          }),
          lastValidCart: state2.cart
        };
      }
      break;
    }
    case "noteUpdate": {
      if (state2.status === "idle") {
        return {
          status: "updating",
          cart: state2.cart,
          lastValidCart: state2.cart
        };
      }
      break;
    }
    case "buyerIdentityUpdate": {
      if (state2.status === "idle") {
        return {
          status: "updating",
          cart: state2.cart,
          lastValidCart: state2.cart
        };
      }
      break;
    }
    case "cartAttributesUpdate": {
      if (state2.status === "idle") {
        return {
          status: "updating",
          cart: state2.cart,
          lastValidCart: state2.cart
        };
      }
      break;
    }
    case "discountCodesUpdate": {
      if (state2.status === "idle") {
        return {
          status: "updating",
          cart: state2.cart,
          lastValidCart: state2.cart
        };
      }
      break;
    }
  }
  throw new Error(`Cannot dispatch event (${action.type}) for current cart state (${state2.status})`);
}
function CartProvider$3({
  children,
  numCartLines,
  onCreate,
  onLineAdd,
  onLineRemove,
  onLineUpdate,
  onNoteUpdate,
  onBuyerIdentityUpdate,
  onAttributesUpdate,
  onDiscountCodesUpdate,
  cart
}) {
  var _a;
  const {
    serverState
  } = useServerState();
  const countryCode = (_a = serverState === null || serverState === void 0 ? void 0 : serverState.country) === null || _a === void 0 ? void 0 : _a.isoCode;
  const initialStatus = cart ? {
    status: "idle",
    cart: cartFromGraphQL(cart)
  } : {
    status: "uninitialized"
  };
  const [state2, dispatch] = react.exports.useReducer((state3, dispatch2) => cartReducer(state3, dispatch2), initialStatus);
  const fetchCart = useCartFetch();
  const cartFetch = react.exports.useCallback(async (cartId) => {
    dispatch({
      type: "cartFetch"
    });
    const {
      data
    } = await fetchCart({
      query: CartQuery,
      variables: {
        id: cartId,
        numCartLines,
        country: countryCode
      }
    });
    if (!(data === null || data === void 0 ? void 0 : data.cart)) {
      window.localStorage.removeItem(CART_ID_STORAGE_KEY);
      dispatch({
        type: "resetCart"
      });
      return;
    }
    dispatch({
      type: "resolve",
      cart: cartFromGraphQL(data.cart)
    });
  }, [fetchCart, numCartLines, countryCode]);
  const cartCreate = react.exports.useCallback(async (cart2) => {
    var _a2, _b;
    dispatch({
      type: "cartCreate"
    });
    onCreate === null || onCreate === void 0 ? void 0 : onCreate();
    if (countryCode && !((_a2 = cart2.buyerIdentity) === null || _a2 === void 0 ? void 0 : _a2.countryCode)) {
      if (cart2.buyerIdentity == null) {
        cart2.buyerIdentity = {};
      }
      cart2.buyerIdentity.countryCode = countryCode;
    }
    const {
      data,
      error
    } = await fetchCart({
      query: CartCreate,
      variables: {
        input: cart2,
        numCartLines,
        country: countryCode
      }
    });
    if (error) {
      dispatch({
        type: "reject",
        error
      });
    }
    if ((_b = data === null || data === void 0 ? void 0 : data.cartCreate) === null || _b === void 0 ? void 0 : _b.cart) {
      dispatch({
        type: "resolve",
        cart: cartFromGraphQL(data.cartCreate.cart)
      });
      window.localStorage.setItem(CART_ID_STORAGE_KEY, data.cartCreate.cart.id);
    }
  }, [onCreate, fetchCart, numCartLines, countryCode]);
  const addLineItem = react.exports.useCallback(async (lines, state3) => {
    var _a2;
    if (state3.status === "idle") {
      dispatch({
        type: "addLineItem"
      });
      onLineAdd === null || onLineAdd === void 0 ? void 0 : onLineAdd();
      const {
        data,
        error
      } = await fetchCart({
        query: CartLineAdd,
        variables: {
          cartId: state3.cart.id,
          lines,
          numCartLines,
          country: countryCode
        }
      });
      if (error) {
        dispatch({
          type: "reject",
          error
        });
      }
      if ((_a2 = data === null || data === void 0 ? void 0 : data.cartLinesAdd) === null || _a2 === void 0 ? void 0 : _a2.cart) {
        dispatch({
          type: "resolve",
          cart: cartFromGraphQL(data.cartLinesAdd.cart)
        });
      }
    }
  }, [fetchCart, numCartLines, onLineAdd, countryCode]);
  const removeLineItem = react.exports.useCallback(async (lines, state3) => {
    var _a2;
    if (state3.status === "idle") {
      dispatch({
        type: "removeLineItem",
        lines
      });
      onLineRemove === null || onLineRemove === void 0 ? void 0 : onLineRemove();
      const {
        data,
        error
      } = await fetchCart({
        query: CartLineRemove,
        variables: {
          cartId: state3.cart.id,
          lines,
          numCartLines,
          country: countryCode
        }
      });
      if (error) {
        dispatch({
          type: "reject",
          error
        });
      }
      if ((_a2 = data === null || data === void 0 ? void 0 : data.cartLinesRemove) === null || _a2 === void 0 ? void 0 : _a2.cart) {
        dispatch({
          type: "resolve",
          cart: cartFromGraphQL(data.cartLinesRemove.cart)
        });
      }
    }
  }, [fetchCart, onLineRemove, numCartLines, countryCode]);
  const updateLineItem = react.exports.useCallback(async (lines, state3) => {
    var _a2;
    if (state3.status === "idle") {
      dispatch({
        type: "updateLineItem",
        lines
      });
      onLineUpdate === null || onLineUpdate === void 0 ? void 0 : onLineUpdate();
      const {
        data,
        error
      } = await fetchCart({
        query: CartLineUpdate,
        variables: {
          cartId: state3.cart.id,
          lines,
          numCartLines,
          country: countryCode
        }
      });
      if (error) {
        dispatch({
          type: "reject",
          error
        });
      }
      if ((_a2 = data === null || data === void 0 ? void 0 : data.cartLinesUpdate) === null || _a2 === void 0 ? void 0 : _a2.cart) {
        dispatch({
          type: "resolve",
          cart: cartFromGraphQL(data.cartLinesUpdate.cart)
        });
      }
    }
  }, [fetchCart, onLineUpdate, numCartLines, countryCode]);
  const noteUpdate = react.exports.useCallback(async (note, state3) => {
    var _a2;
    if (state3.status === "idle") {
      dispatch({
        type: "noteUpdate"
      });
      onNoteUpdate === null || onNoteUpdate === void 0 ? void 0 : onNoteUpdate();
      const {
        data,
        error
      } = await fetchCart({
        query: CartNoteUpdate,
        variables: {
          cartId: state3.cart.id,
          note,
          numCartLines,
          country: countryCode
        }
      });
      if (error) {
        dispatch({
          type: "reject",
          error
        });
      }
      if ((_a2 = data === null || data === void 0 ? void 0 : data.cartNoteUpdate) === null || _a2 === void 0 ? void 0 : _a2.cart) {
        dispatch({
          type: "resolve",
          cart: cartFromGraphQL(data.cartNoteUpdate.cart)
        });
      }
    }
  }, [fetchCart, onNoteUpdate, numCartLines, countryCode]);
  const buyerIdentityUpdate = react.exports.useCallback(async (buyerIdentity, state3) => {
    var _a2;
    if (state3.status === "idle") {
      dispatch({
        type: "buyerIdentityUpdate"
      });
      onBuyerIdentityUpdate === null || onBuyerIdentityUpdate === void 0 ? void 0 : onBuyerIdentityUpdate();
      const {
        data,
        error
      } = await fetchCart({
        query: CartBuyerIdentityUpdate,
        variables: {
          cartId: state3.cart.id,
          buyerIdentity,
          numCartLines,
          country: countryCode
        }
      });
      if (error) {
        dispatch({
          type: "reject",
          error
        });
      }
      if ((_a2 = data === null || data === void 0 ? void 0 : data.cartBuyerIdentityUpdate) === null || _a2 === void 0 ? void 0 : _a2.cart) {
        dispatch({
          type: "resolve",
          cart: cartFromGraphQL(data.cartBuyerIdentityUpdate.cart)
        });
      }
    }
  }, [fetchCart, onBuyerIdentityUpdate, numCartLines, countryCode]);
  const cartAttributesUpdate = react.exports.useCallback(async (attributes, state3) => {
    var _a2;
    if (state3.status === "idle") {
      dispatch({
        type: "cartAttributesUpdate"
      });
      onAttributesUpdate === null || onAttributesUpdate === void 0 ? void 0 : onAttributesUpdate();
      const {
        data,
        error
      } = await fetchCart({
        query: CartAttributesUpdate,
        variables: {
          cartId: state3.cart.id,
          attributes,
          numCartLines,
          country: countryCode
        }
      });
      if (error) {
        dispatch({
          type: "reject",
          error
        });
      }
      if ((_a2 = data === null || data === void 0 ? void 0 : data.cartAttributesUpdate) === null || _a2 === void 0 ? void 0 : _a2.cart) {
        dispatch({
          type: "resolve",
          cart: cartFromGraphQL(data.cartAttributesUpdate.cart)
        });
      }
    }
  }, [fetchCart, onAttributesUpdate, numCartLines, countryCode]);
  const discountCodesUpdate = react.exports.useCallback(async (discountCodes, state3) => {
    var _a2;
    if (state3.status === "idle") {
      dispatch({
        type: "discountCodesUpdate"
      });
      onDiscountCodesUpdate === null || onDiscountCodesUpdate === void 0 ? void 0 : onDiscountCodesUpdate();
      const {
        data,
        error
      } = await fetchCart({
        query: CartDiscountCodesUpdate,
        variables: {
          cartId: state3.cart.id,
          discountCodes,
          numCartLines,
          country: countryCode
        }
      });
      if (error) {
        dispatch({
          type: "reject",
          error
        });
      }
      if ((_a2 = data === null || data === void 0 ? void 0 : data.cartDiscountCodesUpdate) === null || _a2 === void 0 ? void 0 : _a2.cart) {
        dispatch({
          type: "resolve",
          cart: cartFromGraphQL(data.cartDiscountCodesUpdate.cart)
        });
      }
    }
  }, [fetchCart, onDiscountCodesUpdate, numCartLines, countryCode]);
  const didFetchCart = react.exports.useRef(false);
  react.exports.useEffect(() => {
    if (localStorage.getItem(CART_ID_STORAGE_KEY) && state2.status === "uninitialized" && !didFetchCart.current) {
      didFetchCart.current = true;
      cartFetch(localStorage.getItem(CART_ID_STORAGE_KEY));
    }
  }, [cartFetch, state2]);
  react.exports.useEffect(() => {
    if (state2.status !== "idle") {
      return;
    }
    buyerIdentityUpdate({
      countryCode
    }, state2);
  }, [countryCode]);
  const cartContextValue = react.exports.useMemo(() => {
    return __spreadProps(__spreadValues({}, "cart" in state2 ? state2.cart : __spreadValues({
      lines: [],
      attributes: []
    }, cart ? cartFromGraphQL(cart) : {})), {
      status: state2.status,
      error: "error" in state2 ? state2.error : void 0,
      cartCreate,
      linesAdd(lines) {
        addLineItem(lines, state2);
      },
      linesRemove(lines) {
        removeLineItem(lines, state2);
      },
      linesUpdate(lines) {
        updateLineItem(lines, state2);
      },
      noteUpdate(note) {
        noteUpdate(note, state2);
      },
      buyerIdentityUpdate(buyerIdentity) {
        buyerIdentityUpdate(buyerIdentity, state2);
      },
      cartAttributesUpdate(attributes) {
        cartAttributesUpdate(attributes, state2);
      },
      discountCodesUpdate(discountCodes) {
        discountCodesUpdate(discountCodes, state2);
      }
    });
  }, [state2, cart, cartCreate, addLineItem, removeLineItem, updateLineItem, noteUpdate, buyerIdentityUpdate, cartAttributesUpdate, discountCodesUpdate]);
  return /* @__PURE__ */ jsx(CartContext$1.Provider, {
    value: cartContextValue,
    children
  });
}
function cartFromGraphQL(cart) {
  var _a;
  return __spreadProps(__spreadValues({}, cart), {
    lines: flattenConnection(cart.lines),
    note: (_a = cart.note) !== null && _a !== void 0 ? _a : void 0
  });
}
const CartProvider$2 = wrapInClientMarker({ name: "CartProvider", id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/node_modules/@shopify/hydrogen/dist/esnext/components/CartProvider/CartProvider.client.js", component: CartProvider$3, named: true });
function useCart() {
  const context2 = React$2.useContext(CartContext$1);
  if (!context2) {
    throw new Error("Expected a Cart Context, but no Cart Context was found");
  }
  return context2;
}
function useCartCheckoutUrl() {
  const { checkoutUrl } = useCart();
  return checkoutUrl;
}
function useCartCreateCallback() {
  const { cartCreate } = useCart();
  return cartCreate;
}
function useCartLinesAddCallback() {
  const { linesAdd } = useCart();
  return linesAdd;
}
function useCartLinesRemoveCallback() {
  const { linesRemove } = useCart();
  return linesRemove;
}
function useCartLinesTotalQuantity() {
  var _a;
  const { lines } = useCart();
  const itemCount = (_a = React$2.useMemo(() => {
    return lines.reduce((accumulator, line) => {
      return accumulator + line.quantity;
    }, 0);
  }, [lines])) !== null && _a !== void 0 ? _a : 0;
  return itemCount;
}
function useCartLinesUpdateCallback() {
  const { linesUpdate } = useCart();
  return linesUpdate;
}
function AddToCartButton$1(props) {
  const [addingItem, setAddingItem] = react.exports.useState(false);
  const _a = props, {
    variantID,
    quantity = 1,
    attributes,
    children,
    onAdd,
    accessibleAddingToCartLabel
  } = _a, passthroughProps = __objRest(_a, [
    "variantID",
    "quantity",
    "attributes",
    "children",
    "onAdd",
    "accessibleAddingToCartLabel"
  ]);
  const {
    status,
    id: id2
  } = useCart();
  const createCart = useCartCreateCallback();
  const addLines = useCartLinesAddCallback();
  react.exports.useEffect(() => {
    if (addingItem && status === "idle") {
      setAddingItem(false);
    }
  }, [status, addingItem]);
  return /* @__PURE__ */ jsxs(Fragment, {
    children: [/* @__PURE__ */ jsx("button", __spreadProps(__spreadValues({}, passthroughProps), {
      disabled: addingItem || passthroughProps.disabled,
      onClick: () => {
        setAddingItem(true);
        if (!id2) {
          createCart({
            lines: [{
              quantity,
              merchandiseId: variantID,
              attributes
            }]
          });
        } else {
          addLines([{
            quantity,
            merchandiseId: variantID,
            attributes
          }]);
        }
      },
      children
    })), accessibleAddingToCartLabel ? /* @__PURE__ */ jsx("p", {
      style: {
        position: "absolute",
        width: "1px",
        height: "1px",
        padding: "0",
        margin: "-1px",
        overflow: "hidden",
        clip: "rect(0, 0, 0, 0)",
        whiteSpace: "nowrap",
        borderWidth: "0"
      },
      role: "alert",
      "aria-live": "assertive",
      children: addingItem ? accessibleAddingToCartLabel : null
    }) : null]
  });
}
const AddToCartButton = wrapInClientMarker({ name: "AddToCartButton", id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/node_modules/@shopify/hydrogen/dist/esnext/components/AddToCartButton/AddToCartButton.client.js", component: AddToCartButton$1, named: true });
function getSelectedVariant(variants, choices) {
  if (!variants.length || variants[0].selectedOptions.length !== Object.keys(choices).length) {
    return;
  }
  return variants.find((variant) => {
    return Object.entries(choices).every(([name, value]) => {
      return variant.selectedOptions.some((option) => option.name === name && option.value === value);
    });
  });
}
function getOptions(variants) {
  const map2 = variants.reduce((memo, variant) => {
    variant.selectedOptions.forEach(({ name, value }) => {
      memo[name] = memo[name] || new Set();
      memo[name].add(value);
    });
    return memo;
  }, {});
  return Object.keys(map2).map((option) => {
    return {
      name: option,
      values: Array.from(map2[option])
    };
  });
}
function useProductOptions({ variants: variantsConnection, sellingPlanGroups: sellingPlanGroupsConnection, initialVariantId }) {
  const variants = react.exports.useMemo(() => variantsConnection ? flattenConnection(variantsConnection) : [], [variantsConnection]);
  const options = react.exports.useMemo(() => getOptions(variants), [variants]);
  const [selectedVariant, setSelectedVariant] = react.exports.useState(initialVariantId ? variants.find((variant) => variant.id === initialVariantId) : void 0);
  const [selectedOptions, setSelectedOptions] = react.exports.useState((selectedVariant === null || selectedVariant === void 0 ? void 0 : selectedVariant.selectedOptions) ? selectedVariant.selectedOptions.reduce((memo, optionSet) => {
    memo[optionSet.name] = optionSet.value;
    return memo;
  }, {}) : {});
  react.exports.useEffect(() => {
    const selectedVariant2 = initialVariantId ? variants.find((variant) => variant.id === initialVariantId) : void 0;
    setSelectedVariant(selectedVariant2);
    const selectedOptions2 = (selectedVariant2 === null || selectedVariant2 === void 0 ? void 0 : selectedVariant2.selectedOptions) ? selectedVariant2.selectedOptions.reduce((memo, optionSet) => {
      memo[optionSet.name] = optionSet.value;
      return memo;
    }, {}) : {};
    setSelectedOptions(selectedOptions2);
  }, [initialVariantId, variants]);
  const setSelectedOption = react.exports.useCallback((name, value) => {
    const newSelectedOptions = __spreadProps(__spreadValues({}, selectedOptions), {
      [name]: value
    });
    setSelectedOptions(newSelectedOptions);
  }, [selectedOptions]);
  react.exports.useEffect(() => {
    const variant = getSelectedVariant(variants, selectedOptions);
    if (variant) {
      setSelectedVariant(variant);
    }
  }, [variants, selectedOptions]);
  const isOptionInStock = react.exports.useCallback((option, value) => {
    var _a;
    const proposedVariant = getSelectedVariant(variants, __spreadValues(__spreadValues({}, selectedOptions), { [option]: value }));
    return (_a = proposedVariant === null || proposedVariant === void 0 ? void 0 : proposedVariant.availableForSale) !== null && _a !== void 0 ? _a : true;
  }, [selectedOptions, variants]);
  const sellingPlanGroups = react.exports.useMemo(() => sellingPlanGroupsConnection ? flattenConnection(sellingPlanGroupsConnection).map((sellingPlanGroup) => __spreadProps(__spreadValues({}, sellingPlanGroup), {
    sellingPlans: (sellingPlanGroup === null || sellingPlanGroup === void 0 ? void 0 : sellingPlanGroup.sellingPlans) ? flattenConnection(sellingPlanGroup.sellingPlans) : []
  })) : [], [sellingPlanGroupsConnection]);
  const [selectedSellingPlan, setSelectedSellingPlan] = react.exports.useState(void 0);
  const selectedSellingPlanAllocation = react.exports.useMemo(() => {
    if (!selectedVariant || !selectedSellingPlan) {
      return;
    }
    if (!selectedVariant.sellingPlanAllocations) {
      throw new Error(`You must include sellingPlanAllocations in your variants in order to calculate selectedSellingPlanAllocation`);
    }
    return flattenConnection(selectedVariant.sellingPlanAllocations).find((allocation) => allocation.sellingPlan.id === selectedSellingPlan.id);
  }, [selectedVariant, selectedSellingPlan]);
  return {
    variants,
    variantsConnection,
    options,
    selectedVariant,
    setSelectedVariant,
    selectedOptions,
    setSelectedOption,
    setSelectedOptions,
    isOptionInStock,
    selectedSellingPlan,
    setSelectedSellingPlan,
    selectedSellingPlanAllocation,
    sellingPlanGroups,
    sellingPlanGroupsConnection
  };
}
const NARROW_SYMBOL_MAP = {
  USD: "$",
  AUD: "$",
  CAD: "$",
  NZD: "$",
  EUR: "\u20AC",
  GBP: "\xA3",
  INR: "\u20B9",
  RUB: "\u20BD",
  CNY: "\xA5",
  JPY: "\xA5",
  BRL: "R$"
};
function useMoney(money) {
  const { locale } = useShop();
  const options = react.exports.useMemo(() => ({
    style: "currency",
    currency: money.currencyCode
  }), [money.currencyCode]);
  const amount = parseFloat(money.amount);
  const value = react.exports.useMemo(() => new Intl.NumberFormat(locale, options).format(amount), [amount, locale, options]);
  const baseParts = new Intl.NumberFormat(locale, options).formatToParts(amount);
  const nameParts = new Intl.NumberFormat(locale, __spreadProps(__spreadValues({}, options), {
    currencyDisplay: "name"
  })).formatToParts(amount);
  const narrowParts = new Intl.NumberFormat(locale, __spreadProps(__spreadValues({}, options), {
    currencyDisplay: "narrowSymbol"
  })).formatToParts(amount);
  const moneyValue = react.exports.useMemo(() => {
    var _a, _b, _c, _d, _e, _f, _g;
    return {
      currencyCode: money.currencyCode,
      currencyName: (_b = (_a = nameParts.find((part2) => part2.type === "currency")) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : money.currencyCode,
      currencySymbol: (_d = (_c = baseParts.find((part2) => part2.type === "currency")) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : money.currencyCode,
      currencyNarrowSymbol: (_g = (_f = (_e = narrowParts.find((part2) => part2.type === "currency")) === null || _e === void 0 ? void 0 : _e.value) !== null && _f !== void 0 ? _f : NARROW_SYMBOL_MAP[money.currencyCode]) !== null && _g !== void 0 ? _g : "",
      parts: baseParts,
      localizedString: value,
      amount: baseParts.filter((part2) => ["decimal", "fraction", "group", "integer", "literal"].includes(part2.type)).map((part2) => part2.value).join(""),
      original: money
    };
  }, [baseParts, money, nameParts, narrowParts, value]);
  return moneyValue;
}
function useParsedMetafields(metafields) {
  return react.exports.useMemo(() => {
    if (metafields == null) {
      return [];
    }
    return flattenConnection(metafields).map((metafield) => {
      return __spreadProps(__spreadValues({}, metafield), {
        value: parseMetafieldValue(metafield)
      });
    });
  }, [metafields]);
}
function Money$1(props) {
  const _a = props, { money, children, as } = _a, passthroughProps = __objRest(_a, ["money", "children", "as"]);
  const moneyObject = useMoney(money);
  const Wrapper = as !== null && as !== void 0 ? as : "div";
  return React$2.createElement(Wrapper, __spreadValues({}, passthroughProps), typeof children === "function" ? children(moneyObject) : moneyObject.localizedString);
}
Money$1.Fragment = MoneyFragment;
const Money = wrapInClientMarker({ name: "Money", id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/node_modules/@shopify/hydrogen/dist/esnext/components/Money/Money.client.js", component: Money$1, named: true });
const STAR_EMPTY = "\u2606";
const STAR_FILLED = "\u2605";
function StarRating(props) {
  const _a = props, {
    as,
    rating
  } = _a, passthroughProps = __objRest(_a, [
    "as",
    "rating"
  ]);
  const starsArray = react.exports.useMemo(() => {
    const ratingMin = Math.floor(rating.scale_min);
    const ratingMax = Math.floor(rating.scale_max);
    const ratingInteger = Math.floor(rating.value);
    const ratingPercent = rating.value % 1 * 100;
    const stars = [];
    for (let i = ratingMin; i <= ratingMax; i++) {
      if (i <= ratingInteger) {
        stars.push(/* @__PURE__ */ jsx(Star, {
          percentFilled: 100
        }, i));
      } else if (i > ratingInteger + 1) {
        stars.push(/* @__PURE__ */ jsx(Star, {
          percentFilled: 0
        }, i));
      } else {
        stars.push(/* @__PURE__ */ jsx(Star, {
          percentFilled: ratingPercent
        }, i));
      }
    }
    return stars;
  }, [rating.scale_min, rating.scale_max, rating.value]);
  const Wrapper = as !== null && as !== void 0 ? as : "div";
  return /* @__PURE__ */ jsx(Wrapper, __spreadProps(__spreadValues({}, passthroughProps), {
    children: starsArray
  }));
}
function Star({
  percentFilled
}) {
  if (percentFilled === 100) {
    return /* @__PURE__ */ jsx("span", {
      children: STAR_FILLED
    });
  }
  if (percentFilled === 0) {
    return /* @__PURE__ */ jsx("span", {
      children: STAR_EMPTY
    });
  }
  return /* @__PURE__ */ jsxs("span", {
    style: {
      position: "relative",
      display: "inline-block"
    },
    children: [/* @__PURE__ */ jsx("span", {
      children: STAR_EMPTY
    }), /* @__PURE__ */ jsx("span", {
      style: {
        display: "inline-block",
        position: "absolute",
        top: "0",
        left: "0",
        width: `${percentFilled}%`,
        overflow: "hidden"
      },
      children: STAR_FILLED
    })]
  });
}
function Metafield$1(props) {
  const _a = props, { metafield, children, as } = _a, passthroughProps = __objRest(_a, ["metafield", "children", "as"]);
  const { locale } = useShop();
  if (metafield.value == null) {
    console.warn(`No metafield value for ${metafield}`);
    return null;
  }
  if (typeof children === "function") {
    return children(metafield);
  }
  switch (metafield.type) {
    case "date": {
      const Wrapper2 = as !== null && as !== void 0 ? as : "time";
      return React$2.createElement(Wrapper2, __spreadValues({}, passthroughProps), metafield.value.toLocaleDateString(locale));
    }
    case "date_time": {
      const Wrapper2 = as !== null && as !== void 0 ? as : "time";
      return React$2.createElement(Wrapper2, __spreadValues({}, passthroughProps), metafield.value.toLocaleString(locale));
    }
    case "weight":
    case "dimension":
    case "volume": {
      const Wrapper2 = as !== null && as !== void 0 ? as : "span";
      return React$2.createElement(Wrapper2, __spreadValues({}, passthroughProps), getMeasurementAsString(metafield.value, locale));
    }
    case "rating": {
      return React$2.createElement(StarRating, __spreadValues({ rating: metafield.value }, passthroughProps));
    }
    case "single_line_text_field": {
      return React$2.createElement(RawHtml, __spreadProps(__spreadValues({}, passthroughProps), { as: as !== null && as !== void 0 ? as : "span", string: metafield.value }));
    }
    case "multi_line_text_field": {
      return React$2.createElement(RawHtml, __spreadProps(__spreadValues({}, passthroughProps), { as, string: metafield.value.split("\n").join("<br/>") }));
    }
    case "url":
      return React$2.createElement("a", __spreadValues({ href: metafield.value }, passthroughProps), metafield.value);
    case "json":
      const Wrapper = as !== null && as !== void 0 ? as : "span";
      return React$2.createElement(Wrapper, __spreadValues({}, passthroughProps), JSON.stringify(metafield.value));
    default: {
      const Wrapper2 = as !== null && as !== void 0 ? as : "span";
      return React$2.createElement(Wrapper2, __spreadValues({}, passthroughProps), metafield.value.toString());
    }
  }
}
Metafield$1.Fragment = MetafieldFragment;
const Metafield = wrapInClientMarker({ name: "Metafield", id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/node_modules/@shopify/hydrogen/dist/esnext/components/Metafield/Metafield.client.js", component: Metafield$1, named: true });
const CartLineContext = react.exports.createContext(null);
function CartLineProvider$1({ children, line }) {
  return React$2.createElement(CartLineContext.Provider, { value: line }, children);
}
const CartLineProvider = wrapInClientMarker({ name: "CartLineProvider", id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/node_modules/@shopify/hydrogen/dist/esnext/components/CartLineProvider/CartLineProvider.client.js", component: CartLineProvider$1, named: true });
function useCartLine() {
  const context2 = react.exports.useContext(CartLineContext);
  if (context2 == null) {
    throw new Error("Expected a cart line context but none was found");
  }
  return context2;
}
function CartLineImage$1(props) {
  const cartLine = useCartLine();
  const _a = props, { options } = _a, passthroughProps = __objRest(_a, ["options"]);
  return cartLine.merchandise.image ? React$2.createElement(Image, __spreadProps(__spreadValues({}, passthroughProps), { image: cartLine.merchandise.image, options })) : null;
}
const CartLineImage = wrapInClientMarker({ name: "CartLineImage", id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/node_modules/@shopify/hydrogen/dist/esnext/components/CartLineImage/CartLineImage.client.js", component: CartLineImage$1, named: true });
function CartLinePrice$1(props) {
  const cartLine = useCartLine();
  const _a = props, { priceType = "regular" } = _a, passthroughProps = __objRest(_a, ["priceType"]);
  const price = priceType === "regular" ? cartLine.merchandise.priceV2 : cartLine.merchandise.compareAtPriceV2;
  if (price == null) {
    return null;
  }
  return React$2.createElement(Money, __spreadProps(__spreadValues({}, passthroughProps), { money: {
    amount: price.amount * cartLine.quantity,
    currencyCode: price.currencyCode
  } }), props.children);
}
const CartLinePrice = wrapInClientMarker({ name: "CartLinePrice", id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/node_modules/@shopify/hydrogen/dist/esnext/components/CartLinePrice/CartLinePrice.client.js", component: CartLinePrice$1, named: true });
function CartLineProductTitle$1(props) {
  const cartLine = useCartLine();
  const _a = props, { as } = _a, passthroughProps = __objRest(_a, ["as"]);
  const Wrapper = as ? as : "span";
  return React$2.createElement(Wrapper, __spreadValues({}, passthroughProps), cartLine.merchandise.product.title);
}
const CartLineProductTitle = wrapInClientMarker({ name: "CartLineProductTitle", id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/node_modules/@shopify/hydrogen/dist/esnext/components/CartLineProductTitle/CartLineProductTitle.client.js", component: CartLineProductTitle$1, named: true });
function CartLineQuantity$1(props) {
  const cartLine = useCartLine();
  const _a = props, { as } = _a, passthroughProps = __objRest(_a, ["as"]);
  const Wrapper = as ? as : "span";
  return React$2.createElement(Wrapper, __spreadValues({}, passthroughProps), cartLine.quantity);
}
const CartLineQuantity = wrapInClientMarker({ name: "CartLineQuantity", id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/node_modules/@shopify/hydrogen/dist/esnext/components/CartLineQuantity/CartLineQuantity.client.js", component: CartLineQuantity$1, named: true });
function CartLineQuantityAdjustButton(props) {
  const updateLines = useCartLinesUpdateCallback();
  const removeLines = useCartLinesRemoveCallback();
  const { status } = useCart();
  const cartLine = useCartLine();
  const _a = props, { children, adjust } = _a, passthroughProps = __objRest(_a, ["children", "adjust"]);
  return React$2.createElement("button", __spreadValues({ disabled: status !== "idle", onClick: () => {
    if (adjust === "remove") {
      removeLines([cartLine.id]);
      return;
    }
    const quantity = adjust === "decrease" ? cartLine.quantity - 1 : cartLine.quantity + 1;
    updateLines([{ id: cartLine.id, quantity }]);
  } }, passthroughProps), children);
}
function CartLineAttributes$1(props) {
  const cartLine = useCartLine();
  const _a = props, {
    as,
    children
  } = _a, passthroughProps = __objRest(_a, [
    "as",
    "children"
  ]);
  const Wrapper = as ? as : "ul";
  const ChildWrapper = Wrapper === "ul" ? "li" : react.exports.Fragment;
  return /* @__PURE__ */ jsx(Wrapper, __spreadProps(__spreadValues({}, passthroughProps), {
    children: cartLine.attributes.map((attribute) => /* @__PURE__ */ jsx(ChildWrapper, {
      children: react.exports.cloneElement(children(attribute))
    }, `${attribute.key}-${attribute.value}`))
  }));
}
const CartLineAttributes = wrapInClientMarker({ name: "CartLineAttributes", id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/node_modules/@shopify/hydrogen/dist/esnext/components/CartLineAttributes/CartLineAttributes.client.js", component: CartLineAttributes$1, named: true });
function CartLines(props) {
  const {
    lines
  } = useCart();
  const _a = props, {
    as,
    children
  } = _a, passthroughProps = __objRest(_a, [
    "as",
    "children"
  ]);
  const Wrapper = as !== null && as !== void 0 ? as : react.exports.Fragment;
  const ChildWrapper = Wrapper === "ul" ? "li" : react.exports.Fragment;
  return /* @__PURE__ */ jsx(Wrapper, __spreadProps(__spreadValues({}, passthroughProps), {
    children: lines.map((line) => {
      return /* @__PURE__ */ jsx(ChildWrapper, {
        children: /* @__PURE__ */ jsx(CartLineProvider, {
          line,
          children: typeof children === "function" ? react.exports.cloneElement(children(line)) : children
        })
      }, line.id);
    })
  }));
}
function CartCheckoutButton$1(props) {
  const [requestedCheckout, setRequestedCheckout] = react.exports.useState(false);
  const {
    status
  } = useCart();
  const url = useCartCheckoutUrl();
  const _a = props, {
    children
  } = _a, passthroughProps = __objRest(_a, [
    "children"
  ]);
  react.exports.useEffect(() => {
    if (requestedCheckout && url && status === "idle") {
      window.location.href = url;
    }
  }, [requestedCheckout, status, url]);
  return /* @__PURE__ */ jsx("button", __spreadProps(__spreadValues({}, passthroughProps), {
    disabled: requestedCheckout || passthroughProps.disabled,
    onClick: () => setRequestedCheckout(true),
    children
  }));
}
const CartCheckoutButton = wrapInClientMarker({ name: "CartCheckoutButton", id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/node_modules/@shopify/hydrogen/dist/esnext/components/CartCheckoutButton/CartCheckoutButton.client.js", component: CartCheckoutButton$1, named: true });
const URL$1 = "https://cdn.shopify.com/shopifycloud/shop-js/v0.1/client.js";
function ShopPayButton$1({
  variantIds,
  className
}) {
  const [ids, setIds] = react.exports.useState([]);
  const [shopPayLoaded, setShopPayLoaded] = react.exports.useState(false);
  const {
    storeDomain
  } = useShop();
  react.exports.useEffect(() => {
    const ids2 = variantIds.reduce((accumulator, gid) => {
      const id2 = atob(gid).split("/").pop();
      if (id2) {
        accumulator.push(id2);
      }
      return accumulator;
    }, []);
    setIds(ids2);
  }, [variantIds]);
  react.exports.useEffect(() => {
    async function loadShopPay() {
      const loaded = await loadScript(URL$1, {
        module: true
      });
      if (!loaded) {
        console.warn("shop-pay-button library did not load");
      }
      setShopPayLoaded(true);
    }
    loadShopPay();
  }, []);
  return /* @__PURE__ */ jsx("div", {
    className,
    tabIndex: 1,
    children: shopPayLoaded && /* @__PURE__ */ jsx("shop-pay-button", {
      "store-url": `https://${storeDomain}`,
      variants: ids.join(",")
    })
  });
}
const ShopPayButton = wrapInClientMarker({ name: "ShopPayButton", id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/node_modules/@shopify/hydrogen/dist/esnext/components/ShopPayButton/ShopPayButton.client.js", component: ShopPayButton$1, named: true });
function CartShopPayButton$1({
  className
}) {
  const {
    lines
  } = useCart();
  const ids = react.exports.useMemo(() => {
    return lines.map((line) => line.merchandise.id);
  }, [lines]);
  return /* @__PURE__ */ jsx(ShopPayButton, {
    className,
    variantIds: ids
  });
}
const CartShopPayButton = wrapInClientMarker({ name: "CartShopPayButton", id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/node_modules/@shopify/hydrogen/dist/esnext/components/CartShopPayButton/CartShopPayButton.client.js", component: CartShopPayButton$1, named: true });
function CartEstimatedCost$1(props) {
  const { estimatedCost } = useCart();
  const _a = props, { amountType = "total", children } = _a, passthroughProps = __objRest(_a, ["amountType", "children"]);
  let amount;
  if (amountType == "total") {
    amount = estimatedCost === null || estimatedCost === void 0 ? void 0 : estimatedCost.totalAmount;
  } else if (amountType == "subtotal") {
    amount = estimatedCost === null || estimatedCost === void 0 ? void 0 : estimatedCost.subtotalAmount;
  } else if (amountType == "tax") {
    amount = estimatedCost === null || estimatedCost === void 0 ? void 0 : estimatedCost.totalTaxAmount;
  } else if (amountType == "duty") {
    amount = estimatedCost === null || estimatedCost === void 0 ? void 0 : estimatedCost.totalDutyAmount;
  }
  if (amount == null) {
    return null;
  }
  return React$2.createElement(Money, __spreadProps(__spreadValues({}, passthroughProps), { money: amount }), children);
}
const CartEstimatedCost = wrapInClientMarker({ name: "CartEstimatedCost", id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/node_modules/@shopify/hydrogen/dist/esnext/components/CartEstimatedCost/CartEstimatedCost.client.js", component: CartEstimatedCost$1, named: true });
const ProductContext = react.exports.createContext(null);
function ProductProvider$1({
  children,
  product,
  initialVariantId
}) {
  const {
    variants,
    options,
    selectedVariant,
    setSelectedVariant,
    selectedOptions,
    setSelectedOption,
    setSelectedOptions,
    isOptionInStock,
    selectedSellingPlan,
    selectedSellingPlanAllocation,
    setSelectedSellingPlan,
    sellingPlanGroups
  } = useProductOptions({
    variants: product.variants,
    initialVariantId
  });
  const metafields = useParsedMetafields(product.metafields);
  const providerValue = react.exports.useMemo(() => {
    return __spreadProps(__spreadValues({}, product), {
      metafields,
      metafieldsConnection: product.metafields,
      media: product.media ? flattenConnection(product.media) : void 0,
      mediaConnection: product.media,
      variants,
      variantsConnection: product.variants,
      images: product.images ? flattenConnection(product.images) : void 0,
      imagesConnection: product.images,
      collections: product.collections ? flattenConnection(product.collections) : void 0,
      collectionsConnection: product.collections,
      options,
      selectedVariant,
      setSelectedVariant,
      selectedOptions,
      setSelectedOption,
      setSelectedOptions,
      isOptionInStock,
      selectedSellingPlan,
      selectedSellingPlanAllocation,
      setSelectedSellingPlan,
      sellingPlanGroups
    });
  }, [isOptionInStock, metafields, options, product, selectedOptions, selectedSellingPlan, selectedSellingPlanAllocation, selectedVariant, sellingPlanGroups, setSelectedOption, setSelectedOptions, setSelectedSellingPlan, setSelectedVariant, variants]);
  return /* @__PURE__ */ jsx(ProductContext.Provider, {
    value: providerValue,
    children
  });
}
ProductProvider$1.Fragment = ProductProviderFragment$1;
const ProductProviderFragment = ProductProviderFragment$1;
const ProductProvider = wrapInClientMarker({ name: "ProductProvider", id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/node_modules/@shopify/hydrogen/dist/esnext/components/ProductProvider/ProductProvider.client.js", component: ProductProvider$1, named: true });
function useProduct() {
  const context2 = react.exports.useContext(ProductContext);
  return context2;
}
function ProductDescription$1(props) {
  const product = useProduct();
  if (product == null) {
    throw new Error("Expected a ProductProvider context, but none was found");
  }
  return product.descriptionHtml ? React$2.createElement(RawHtml, __spreadValues({ string: product.descriptionHtml }, props)) : null;
}
const ProductDescription = wrapInClientMarker({ name: "ProductDescription", id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/node_modules/@shopify/hydrogen/dist/esnext/components/ProductDescription/ProductDescription.client.js", component: ProductDescription$1, named: true });
function ProductTitle$1(props) {
  const product = useProduct();
  if (product == null) {
    throw new Error("Expected a ProductProvider context, but none was found");
  }
  const _a = props, { as } = _a, passthroughProps = __objRest(_a, ["as"]);
  const Wrapper = as ? as : "span";
  return product.title ? React$2.createElement(Wrapper, __spreadValues({}, passthroughProps), product.title) : null;
}
const ProductTitle = wrapInClientMarker({ name: "ProductTitle", id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/node_modules/@shopify/hydrogen/dist/esnext/components/ProductTitle/ProductTitle.client.js", component: ProductTitle$1, named: true });
function SelectedVariantPrice$1(props) {
  const product = useProduct();
  const _a = props, { priceType = "regular" } = _a, passthroughProps = __objRest(_a, ["priceType"]);
  if (product == null) {
    throw new Error("Expected a ProductProvider context, but none was found");
  }
  const selectedVariant = product.selectedVariant;
  const price = priceType === "regular" ? selectedVariant === null || selectedVariant === void 0 ? void 0 : selectedVariant.priceV2 : selectedVariant === null || selectedVariant === void 0 ? void 0 : selectedVariant.compareAtPriceV2;
  if (price == null) {
    return null;
  }
  return React$2.createElement(Money, __spreadProps(__spreadValues({}, passthroughProps), { money: price }), props.children);
}
const SelectedVariantPrice = wrapInClientMarker({ name: "SelectedVariantPrice", id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/node_modules/@shopify/hydrogen/dist/esnext/components/SelectedVariantPrice/SelectedVariantPrice.client.js", component: SelectedVariantPrice$1, named: true });
function SelectedVariantAddToCartButton$1(props) {
  var _a, _b;
  const product = useProduct();
  if (product == null) {
    throw new Error("Expected a Product context, but none was found");
  }
  const _a2 = props, { children, quantity, attributes } = _a2, passthroughProps = __objRest(_a2, ["children", "quantity", "attributes"]);
  return React$2.createElement(AddToCartButton, __spreadProps(__spreadValues({}, passthroughProps), { variantID: (_b = (_a = product.selectedVariant) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : "", quantity: quantity !== null && quantity !== void 0 ? quantity : 1, disabled: !product.selectedVariant || passthroughProps.disabled, attributes }), children);
}
const SelectedVariantAddToCartButton = wrapInClientMarker({ name: "SelectedVariantAddToCartButton", id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/node_modules/@shopify/hydrogen/dist/esnext/components/SelectedVariantAddToCartButton/SelectedVariantAddToCartButton.client.js", component: SelectedVariantAddToCartButton$1, named: true });
function BuyNowButton$1(props) {
  const {
    createInstantCheckout,
    checkoutUrl
  } = useInstantCheckout();
  const [loading, setLoading] = react.exports.useState(false);
  const _a = props, {
    quantity,
    variantId,
    attributes,
    children
  } = _a, passthroughProps = __objRest(_a, [
    "quantity",
    "variantId",
    "attributes",
    "children"
  ]);
  react.exports.useEffect(() => {
    if (checkoutUrl) {
      window.location.href = checkoutUrl;
    }
  }, [checkoutUrl]);
  const handleBuyNow = react.exports.useCallback(() => {
    setLoading(true);
    createInstantCheckout({
      lines: [{
        quantity: quantity !== null && quantity !== void 0 ? quantity : 1,
        merchandiseId: variantId,
        attributes
      }]
    });
  }, [setLoading, createInstantCheckout, quantity, variantId, attributes]);
  return /* @__PURE__ */ jsx("button", __spreadProps(__spreadValues({
    disabled: loading !== null && loading !== void 0 ? loading : passthroughProps.disabled
  }, passthroughProps), {
    onClick: handleBuyNow,
    children
  }));
}
const BuyNowButton = wrapInClientMarker({ name: "BuyNowButton", id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/node_modules/@shopify/hydrogen/dist/esnext/components/BuyNowButton/BuyNowButton.client.js", component: BuyNowButton$1, named: true });
function SelectedVariantBuyNowButton(props) {
  var _a, _b;
  const product = useProduct();
  if (product == null) {
    throw new Error("Expected a Product context, but none was found");
  }
  const _a2 = props, { children, quantity, attributes } = _a2, passthroughProps = __objRest(_a2, ["children", "quantity", "attributes"]);
  return React$2.createElement(BuyNowButton, __spreadValues({ quantity: quantity !== null && quantity !== void 0 ? quantity : 1, attributes, variantId: (_b = (_a = product.selectedVariant) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : "", disabled: !product.selectedVariant || passthroughProps.disabled }, passthroughProps), children);
}
function SelectedVariantShopPayButton$1({
  className
}) {
  var _a;
  const product = useProduct();
  if (product == null) {
    throw new Error("Expected a ProductProvider context, but none was found");
  }
  const id2 = (_a = product === null || product === void 0 ? void 0 : product.selectedVariant) === null || _a === void 0 ? void 0 : _a.id;
  return id2 ? React$2.createElement(ShopPayButton, { className, variantIds: [id2] }) : null;
}
const SelectedVariantShopPayButton = wrapInClientMarker({ name: "SelectedVariantShopPayButton", id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/node_modules/@shopify/hydrogen/dist/esnext/components/SelectedVariantShopPayButton/SelectedVariantShopPayButton.client.js", component: SelectedVariantShopPayButton$1, named: true });
function SelectedVariantImage$1(props) {
  var _a;
  const product = useProduct();
  if (product == null) {
    throw new Error("Expected a Product context, but none was found");
  }
  const _a2 = props, { options } = _a2, passthroughProps = __objRest(_a2, ["options"]);
  return ((_a = product.selectedVariant) === null || _a === void 0 ? void 0 : _a.image) ? React$2.createElement(Image, __spreadValues({ image: product.selectedVariant.image, options }, passthroughProps)) : null;
}
const SelectedVariantImage = wrapInClientMarker({ name: "SelectedVariantImage", id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/node_modules/@shopify/hydrogen/dist/esnext/components/SelectedVariantImage/SelectedVariantImage.client.js", component: SelectedVariantImage$1, named: true });
const LocalizationContext = react.exports.createContext(null);
function useLocalization$1() {
  const context2 = react.exports.useContext(LocalizationContext);
  if (context2 == null) {
    throw new Error("No Localization Context available");
  }
  return context2;
}
function useAvailableCountries() {
  const context2 = useLocalization$1();
  return context2.availableCountries;
}
function useLocalization() {
  const context2 = react.exports.useContext(LocalizationContext);
  if (context2 == null) {
    throw new Error("No Localization Context available");
  }
  return context2;
}
function useCountry() {
  const context2 = useLocalization();
  return [context2.country, context2.setCountry];
}
function ProductPrice$1(props) {
  var _a, _b, _c, _d;
  const product = useProduct();
  const _a2 = props, { priceType = "regular", valueType = "min" } = _a2, passthroughProps = __objRest(_a2, ["priceType", "valueType"]);
  if (product == null) {
    throw new Error("Expected a ProductProvider context, but none was found");
  }
  let price;
  if (priceType === "compareAt") {
    if (valueType === "max") {
      price = (_a = product.compareAtPriceRange) === null || _a === void 0 ? void 0 : _a.maxVariantPrice;
    } else {
      price = (_b = product.compareAtPriceRange) === null || _b === void 0 ? void 0 : _b.minVariantPrice;
    }
  } else {
    if (valueType === "max") {
      price = (_c = product.priceRange) === null || _c === void 0 ? void 0 : _c.maxVariantPrice;
    } else {
      price = (_d = product.priceRange) === null || _d === void 0 ? void 0 : _d.minVariantPrice;
    }
  }
  if (price == null) {
    return null;
  }
  return React$2.createElement(Money, __spreadProps(__spreadValues({}, passthroughProps), { money: price }), props.children);
}
const ProductPrice = wrapInClientMarker({ name: "ProductPrice", id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/node_modules/@shopify/hydrogen/dist/esnext/components/ProductPrice/ProductPrice.client.js", component: ProductPrice$1, named: true });
function ProductMetafield$1(props) {
  const product = useProduct();
  if (product == null) {
    throw new Error("Expected a ProductProvider context, but none was found");
  }
  if (product.metafields == null) {
    console.warn("No metafields available for product");
    return null;
  }
  const _a = props, { namespace, keyName } = _a, passthroughProps = __objRest(_a, ["namespace", "keyName"]);
  const field = product.metafields.find((metafield) => metafield.namespace === namespace && metafield.key === keyName);
  return field ? React$2.createElement(Metafield, __spreadValues({ metafield: field }, passthroughProps)) : null;
}
const ProductMetafield = wrapInClientMarker({ name: "ProductMetafield", id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/node_modules/@shopify/hydrogen/dist/esnext/components/ProductMetafield/ProductMetafield.client.js", component: ProductMetafield$1, named: true });
function UnitPrice$1(props) {
  const _a = props, { unitPrice, unitPriceMeasurement, children, as } = _a, passthroughProps = __objRest(_a, ["unitPrice", "unitPriceMeasurement", "children", "as"]);
  const Wrapper = as !== null && as !== void 0 ? as : "div";
  const unitPriceMoneyObject = useMoney(unitPrice);
  const unitPriceAndMeasurementObject = __spreadValues(__spreadValues({}, unitPriceMoneyObject), unitPriceMeasurement);
  return React$2.createElement(Wrapper, __spreadValues({}, passthroughProps), typeof children === "function" ? children(unitPriceAndMeasurementObject) : React$2.createElement(React$2.Fragment, null, React$2.createElement(Money, { money: unitPrice }), "/", unitPriceMeasurement.referenceUnit));
}
UnitPrice$1.Fragment = UnitPriceFragment;
const UnitPrice = wrapInClientMarker({ name: "UnitPrice", id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/node_modules/@shopify/hydrogen/dist/esnext/components/UnitPrice/UnitPrice.client.js", component: UnitPrice$1, named: true });
function SelectedVariantUnitPrice$1(props) {
  var _a, _b;
  const product = useProduct();
  if (product == null) {
    throw new Error("Expected a ProductProvider context, but none was found");
  }
  return ((_a = product.selectedVariant) === null || _a === void 0 ? void 0 : _a.unitPrice) && ((_b = product.selectedVariant) === null || _b === void 0 ? void 0 : _b.unitPriceMeasurement) ? React$2.createElement(UnitPrice, __spreadProps(__spreadValues({}, props), { unitPrice: product.selectedVariant.unitPrice, unitPriceMeasurement: product.selectedVariant.unitPriceMeasurement })) : null;
}
const SelectedVariantUnitPrice = wrapInClientMarker({ name: "SelectedVariantUnitPrice", id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/node_modules/@shopify/hydrogen/dist/esnext/components/SelectedVariantUnitPrice/SelectedVariantUnitPrice.client.js", component: SelectedVariantUnitPrice$1, named: true });
function SelectedVariantMetafield$1(props) {
  var _a, _b, _c, _d;
  const product = useProduct();
  if (product == null) {
    throw new Error("Expected a Product context, but none was found");
  }
  const _a2 = props, { keyName, namespace } = _a2, passthroughProps = __objRest(_a2, ["keyName", "namespace"]);
  const metafield = (_d = (_c = (_b = (_a = product.selectedVariant) === null || _a === void 0 ? void 0 : _a.metafields) === null || _b === void 0 ? void 0 : _b.edges) === null || _c === void 0 ? void 0 : _c.find(({ node: node2 }) => {
    return node2.namespace === namespace && node2.key === keyName;
  })) === null || _d === void 0 ? void 0 : _d.node;
  return metafield ? React$2.createElement(Metafield, __spreadValues({ metafield }, passthroughProps)) : null;
}
const SelectedVariantMetafield = wrapInClientMarker({ name: "SelectedVariantMetafield", id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/node_modules/@shopify/hydrogen/dist/esnext/components/SelectedVariantMetafield/SelectedVariantMetafield.client.js", component: SelectedVariantMetafield$1, named: true });
function CartLineSelectedOptions$1(props) {
  const cartLine = useCartLine();
  const _a = props, {
    as,
    children
  } = _a, passthroughProps = __objRest(_a, [
    "as",
    "children"
  ]);
  const Wrapper = as ? as : "ul";
  const ChildWrapper = Wrapper === "ul" ? "li" : react.exports.Fragment;
  return /* @__PURE__ */ jsx(Wrapper, __spreadProps(__spreadValues({}, passthroughProps), {
    children: cartLine.merchandise.selectedOptions.map((option) => /* @__PURE__ */ jsx(ChildWrapper, {
      children: react.exports.cloneElement(children(option))
    }, `${option.name}-${option.value}`))
  }));
}
const CartLineSelectedOptions = wrapInClientMarker({ name: "CartLineSelectedOptions", id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/node_modules/@shopify/hydrogen/dist/esnext/components/CartLineSelectedOptions/CartLineSelectedOptions.client.js", component: CartLineSelectedOptions$1, named: true });
const Product$1 = ProductProvider;
Product$1.Description = ProductDescription;
Product$1.Price = ProductPrice;
Product$1.Title = ProductTitle;
Product$1.Metafield = ProductMetafield;
Product$1.SelectedVariant = {
  AddToCartButton: SelectedVariantAddToCartButton,
  BuyNowButton: SelectedVariantBuyNowButton,
  ShopPayButton: SelectedVariantShopPayButton,
  Price: SelectedVariantPrice,
  Image: SelectedVariantImage,
  UnitPrice: SelectedVariantUnitPrice,
  Metafield: SelectedVariantMetafield
};
const CartLine = CartLineProvider;
CartLine.Image = CartLineImage;
CartLine.Price = CartLinePrice;
CartLine.ProductTitle = CartLineProductTitle;
CartLine.Quantity = CartLineQuantity;
CartLine.QuantityAdjustButton = CartLineQuantityAdjustButton;
CartLine.SelectedOptions = CartLineSelectedOptions;
CartLine.Attributes = CartLineAttributes;
function LocalizationClientProvider$1({
  localization,
  children
}) {
  const {
    setServerState
  } = useServerState();
  const [country, setCountry] = react.exports.useState(localization.country);
  const [availableCountries] = react.exports.useState(localization.availableCountries);
  const setter = react.exports.useCallback((country2) => {
    setCountry(country2);
    setServerState("country", country2);
  }, [setServerState]);
  const contextValue = react.exports.useMemo(() => {
    return {
      country,
      setCountry: setter,
      availableCountries
    };
  }, [country, setter, availableCountries]);
  return /* @__PURE__ */ jsx(LocalizationContext.Provider, {
    value: contextValue,
    children
  });
}
var LocalizationClientProvider = wrapInClientMarker({ name: "LocalizationClientProvider", id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/node_modules/@shopify/hydrogen/dist/esnext/components/LocalizationProvider/LocalizationClientProvider.client.js", component: LocalizationClientProvider$1, named: false });
function getConfig() {
  return globalThis.__config || {};
}
function useShopQuery({ query, variables = {}, cache = {} }) {
  if (isClient()) {
    throw new Error("Shopify Storefront API requests should only be made from the server.");
  }
  const { storeDomain, storefrontToken, graphqlApiVersion } = useShop();
  const body = graphqlRequestBody(query, variables);
  const url = `https://${storeDomain}/api/${graphqlApiVersion}/graphql.json`;
  const request = new Request(url, {
    method: "POST",
    headers: {
      "X-Shopify-Storefront-Access-Token": storefrontToken,
      "content-type": "application/json"
    },
    body
  });
  const { data } = useQuery([storeDomain, graphqlApiVersion, body], fetchBuilder(request), { cache });
  if (data === null || data === void 0 ? void 0 : data.errors) {
    const errors = data.errors instanceof Array ? data.errors : [data.errors];
    for (const error of errors) {
      console.error("GraphQL Error", error);
      if (getConfig().dev) {
        throw new Error(error.message);
      }
    }
    console.error(`GraphQL errors: ${errors.length}`);
  }
  return data;
}
function LocalizationProvider({ children }) {
  const { data: { localization } } = useShopQuery({
    query: Localization,
    cache: { maxAge: 60 * 60, staleWhileRevalidate: 60 * 60 * 23 }
  });
  return React$2.createElement(LocalizationClientProvider, { localization }, children);
}
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
var __assign = function() {
  __assign = Object.assign || function __assign2(t2) {
    for (var s2, i = 1, n2 = arguments.length; i < n2; i++) {
      s2 = arguments[i];
      for (var p2 in s2)
        if (Object.prototype.hasOwnProperty.call(s2, p2))
          t2[p2] = s2[p2];
    }
    return t2;
  };
  return __assign.apply(this, arguments);
};
var docCache = new Map();
var fragmentSourceMap = new Map();
var printFragmentWarnings = true;
var experimentalFragmentVariables = false;
function normalize(string) {
  return string.replace(/[\s,]+/g, " ").trim();
}
function cacheKeyFromLoc(loc) {
  return normalize(loc.source.body.substring(loc.start, loc.end));
}
function processFragments(ast2) {
  var seenKeys = new Set();
  var definitions = [];
  ast2.definitions.forEach(function(fragmentDefinition) {
    if (fragmentDefinition.kind === "FragmentDefinition") {
      var fragmentName = fragmentDefinition.name.value;
      var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc);
      var sourceKeySet = fragmentSourceMap.get(fragmentName);
      if (sourceKeySet && !sourceKeySet.has(sourceKey)) {
        if (printFragmentWarnings) {
          console.warn("Warning: fragment with name " + fragmentName + " already exists.\ngraphql-tag enforces all fragment names across your application to be unique; read more about\nthis in the docs: http://dev.apollodata.com/core/fragments.html#unique-names");
        }
      } else if (!sourceKeySet) {
        fragmentSourceMap.set(fragmentName, sourceKeySet = new Set());
      }
      sourceKeySet.add(sourceKey);
      if (!seenKeys.has(sourceKey)) {
        seenKeys.add(sourceKey);
        definitions.push(fragmentDefinition);
      }
    } else {
      definitions.push(fragmentDefinition);
    }
  });
  return __assign(__assign({}, ast2), { definitions });
}
function stripLoc(doc) {
  var workSet = new Set(doc.definitions);
  workSet.forEach(function(node2) {
    if (node2.loc)
      delete node2.loc;
    Object.keys(node2).forEach(function(key) {
      var value = node2[key];
      if (value && typeof value === "object") {
        workSet.add(value);
      }
    });
  });
  var loc = doc.loc;
  if (loc) {
    delete loc.startToken;
    delete loc.endToken;
  }
  return doc;
}
function parseDocument(source) {
  var cacheKey = normalize(source);
  if (!docCache.has(cacheKey)) {
    var parsed = parse(source, {
      experimentalFragmentVariables,
      allowLegacyFragmentVariables: experimentalFragmentVariables
    });
    if (!parsed || parsed.kind !== "Document") {
      throw new Error("Not a valid GraphQL document.");
    }
    docCache.set(cacheKey, stripLoc(processFragments(parsed)));
  }
  return docCache.get(cacheKey);
}
function gql(literals) {
  var args = [];
  for (var _i = 1; _i < arguments.length; _i++) {
    args[_i - 1] = arguments[_i];
  }
  if (typeof literals === "string") {
    literals = [literals];
  }
  var result = literals[0];
  args.forEach(function(arg, i) {
    if (arg && arg.kind === "Document") {
      result += arg.loc.source.body;
    } else {
      result += arg;
    }
    result += literals[i + 1];
  });
  return parseDocument(result);
}
function resetCaches() {
  docCache.clear();
  fragmentSourceMap.clear();
}
function disableFragmentWarnings() {
  printFragmentWarnings = false;
}
function enableExperimentalFragmentVariables() {
  experimentalFragmentVariables = true;
}
function disableExperimentalFragmentVariables() {
  experimentalFragmentVariables = false;
}
var extras = {
  gql,
  resetCaches,
  disableFragmentWarnings,
  enableExperimentalFragmentVariables,
  disableExperimentalFragmentVariables
};
(function(gql_1) {
  gql_1.gql = extras.gql, gql_1.resetCaches = extras.resetCaches, gql_1.disableFragmentWarnings = extras.disableFragmentWarnings, gql_1.enableExperimentalFragmentVariables = extras.enableExperimentalFragmentVariables, gql_1.disableExperimentalFragmentVariables = extras.disableExperimentalFragmentVariables;
})(gql || (gql = {}));
gql["default"] = gql;
var gql$1 = gql;
function ServerStateRouter() {
  const { setServerState, pending, serverState } = useServerState();
  const [isNavigating, setIsNavigating] = react.exports.useState(false);
  const location = useLocation();
  react.exports.useEffect(() => {
    if (serverState.pathname !== location.pathname) {
      setIsNavigating(true);
      setServerState("pathname", location.pathname);
    }
  }, [location.pathname, setServerState]);
  react.exports.useEffect(() => {
    if (isNavigating && !pending) {
      window.scrollTo(0, 0);
      setIsNavigating(false);
    }
  }, [isNavigating, pending]);
  return null;
}
wrapInClientMarker({ name: "ServerStateRouter", id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/node_modules/@shopify/hydrogen/dist/esnext/foundation/Router/ServerStateRouter.client.js", component: ServerStateRouter, named: true });
const CartContext = react.exports.createContext(null);
function CartUIProvider$1({
  children
}) {
  const [open, setOpen] = react.exports.useState(false);
  const openCart = react.exports.useCallback(() => {
    setOpen(true);
  }, [setOpen]);
  const closeCart = react.exports.useCallback(() => {
    setOpen(false);
  }, [setOpen]);
  const toggleCart = react.exports.useCallback(() => {
    setOpen(!open);
  }, [setOpen, open]);
  const contextValue = react.exports.useMemo(() => {
    return {
      isCartOpen: open,
      openCart,
      closeCart,
      toggleCart
    };
  }, [open, openCart, closeCart, toggleCart]);
  return /* @__PURE__ */ jsx(CartContext.Provider, {
    value: contextValue,
    children
  });
}
function useCartUI() {
  return react.exports.useContext(CartContext);
}
var CartUIProvider = wrapInClientMarker({
  name: "CartUIProvider",
  id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/src/components/CartUIProvider.client.jsx",
  component: CartUIProvider$1,
  named: false
});
function CartIcon() {
  return /* @__PURE__ */ jsxs("svg", {
    "aria-hidden": "true",
    width: "40",
    height: "40",
    viewBox: "0 0 40 40",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: [/* @__PURE__ */ jsx("path", {
      d: "M26.5894 12H14.4106C13.8945 12 13.4632 12.3928 13.415 12.9067L12.205 25.8133C12.095 26.9865 13.018 28 14.1963 28H26.8037C27.982 28 28.905 26.9865 28.795 25.8133L27.585 12.9067C27.5368 12.3928 27.1055 12 26.5894 12Z",
      stroke: "#1F2937",
      strokeWidth: "2",
      strokeMiterlimit: "10",
      strokeLinecap: "round"
    }), /* @__PURE__ */ jsx("path", {
      d: "M17 12V14.9895C17 17.0075 18.6359 18.6434 20.6539 18.6434V18.6434C22.6718 18.6434 24.3077 17.0075 24.3077 14.9895V12",
      stroke: "#1F2937",
      strokeWidth: "2"
    }), /* @__PURE__ */ jsx("path", {
      d: "M24 11L24 9.5C24 7.567 22.433 6 20.5 6V6C18.567 6 17 7.567 17 9.5L17 11",
      stroke: "#1F2937",
      strokeWidth: "2"
    })]
  });
}
function CartIconWithItems$1() {
  const itemCount = useCartLinesTotalQuantity();
  return /* @__PURE__ */ jsxs(Fragment, {
    children: [/* @__PURE__ */ jsxs("div", {
      className: "relative",
      children: [/* @__PURE__ */ jsx(CartIcon, {}), /* @__PURE__ */ jsx("div", {
        className: `bg-blue-700 text-xs rounded-full leading-none text-white absolute bottom-3 right-1 flex items-center justify-center transform translate-y-1/2 transition-all ${itemCount > 0 ? "h-4 w-4" : "h-0 w-0 overflow-hidden"}`,
        "aria-hidden": true,
        children: itemCount > 0 ? itemCount : null
      })]
    }), /* @__PURE__ */ jsxs("span", {
      className: "sr-only",
      children: ["Cart, ", itemCount, " items"]
    })]
  });
}
var CartIconWithItems = wrapInClientMarker({
  name: "CartIconWithItems",
  id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/src/components/CartIconWithItems.client.jsx",
  component: CartIconWithItems$1,
  named: false
});
function CartToggle$1({
  handleClick
}) {
  const cartUI = useCartUI();
  if (cartUI == null) {
    throw new Error("CartToggle must be a descendent of a CartUIProvider");
  }
  const {
    isCartOpen,
    toggleCart
  } = cartUI;
  return /* @__PURE__ */ jsxs("button", {
    type: "button",
    "aria-expanded": isCartOpen,
    "aria-controls": "cart",
    onClick: () => {
      toggleCart();
      handleClick();
    },
    children: [/* @__PURE__ */ jsx(CartIconWithItems, {}), /* @__PURE__ */ jsx("span", {
      className: "sr-only",
      children: "Open cart"
    })]
  });
}
var CartToggle = wrapInClientMarker({
  name: "CartToggle",
  id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/src/components/CartToggle.client.jsx",
  component: CartToggle$1,
  named: false
});
function _extends() {
  _extends = Object.assign || function(target2) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target2[key] = source[key];
        }
      }
    }
    return target2;
  };
  return _extends.apply(this, arguments);
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target2 = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target2[key] = source[key];
  }
  return target2;
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray(o, minLen);
  var n2 = Object.prototype.toString.call(o).slice(8, -1);
  if (n2 === "Object" && o.constructor)
    n2 = o.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _createForOfIteratorHelperLoose(o, allowArrayLike) {
  var it2;
  if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
    if (Array.isArray(o) || (it2 = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it2)
        o = it2;
      var i = 0;
      return function() {
        if (i >= o.length)
          return {
            done: true
          };
        return {
          done: false,
          value: o[i++]
        };
      };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  it2 = o[Symbol.iterator]();
  return it2.next.bind(it2);
}
function match(value, lookup) {
  if (value in lookup) {
    var returnValue = lookup[value];
    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }
    return typeof returnValue === "function" ? returnValue.apply(void 0, args) : returnValue;
  }
  var error = new Error('Tried to handle "' + value + '" but there is no handler defined. Only defined handlers are: ' + Object.keys(lookup).map(function(key) {
    return '"' + key + '"';
  }).join(", ") + ".");
  if (Error.captureStackTrace)
    Error.captureStackTrace(error, match);
  throw error;
}
var Features$1;
(function(Features2) {
  Features2[Features2["None"] = 0] = "None";
  Features2[Features2["RenderStrategy"] = 1] = "RenderStrategy";
  Features2[Features2["Static"] = 2] = "Static";
})(Features$1 || (Features$1 = {}));
var RenderStrategy;
(function(RenderStrategy2) {
  RenderStrategy2[RenderStrategy2["Unmount"] = 0] = "Unmount";
  RenderStrategy2[RenderStrategy2["Hidden"] = 1] = "Hidden";
})(RenderStrategy || (RenderStrategy = {}));
function render(_ref) {
  var props = _ref.props, slot = _ref.slot, defaultTag = _ref.defaultTag, features = _ref.features, _ref$visible = _ref.visible, visible = _ref$visible === void 0 ? true : _ref$visible, name = _ref.name;
  if (visible)
    return _render(props, slot, defaultTag, name);
  var featureFlags = features != null ? features : Features$1.None;
  if (featureFlags & Features$1.Static) {
    var _props$static = props["static"], isStatic = _props$static === void 0 ? false : _props$static, rest = _objectWithoutPropertiesLoose(props, ["static"]);
    if (isStatic)
      return _render(rest, slot, defaultTag, name);
  }
  if (featureFlags & Features$1.RenderStrategy) {
    var _match;
    var _props$unmount = props.unmount, unmount = _props$unmount === void 0 ? true : _props$unmount, _rest = _objectWithoutPropertiesLoose(props, ["unmount"]);
    var strategy = unmount ? RenderStrategy.Unmount : RenderStrategy.Hidden;
    return match(strategy, (_match = {}, _match[RenderStrategy.Unmount] = function() {
      return null;
    }, _match[RenderStrategy.Hidden] = function() {
      return _render(_extends({}, _rest, {
        hidden: true,
        style: {
          display: "none"
        }
      }), slot, defaultTag, name);
    }, _match));
  }
  return _render(props, slot, defaultTag, name);
}
function _render(props, slot, tag, name) {
  var _ref2;
  if (slot === void 0) {
    slot = {};
  }
  var _omit = omit(props, ["unmount", "static"]), _omit$as = _omit.as, Component = _omit$as === void 0 ? tag : _omit$as, children = _omit.children, _omit$refName = _omit.refName, refName = _omit$refName === void 0 ? "ref" : _omit$refName, passThroughProps = _objectWithoutPropertiesLoose(_omit, ["as", "children", "refName"]);
  var refRelatedProps = props.ref !== void 0 ? (_ref2 = {}, _ref2[refName] = props.ref, _ref2) : {};
  var resolvedChildren = typeof children === "function" ? children(slot) : children;
  if (passThroughProps.className && typeof passThroughProps.className === "function") {
    passThroughProps.className = passThroughProps.className(slot);
  }
  if (Component === react.exports.Fragment) {
    if (Object.keys(passThroughProps).length > 0) {
      if (!react.exports.isValidElement(resolvedChildren) || Array.isArray(resolvedChildren) && resolvedChildren.length > 1) {
        throw new Error(['Passing props on "Fragment"!', "", "The current component <" + name + ' /> is rendering a "Fragment".', "However we need to passthrough the following props:", Object.keys(passThroughProps).map(function(line) {
          return "  - " + line;
        }).join("\n"), "", "You can apply a few solutions:", ['Add an `as="..."` prop, to ensure that we render an actual element instead of a "Fragment".', "Render a single element as the child so that we can forward the props onto that element."].map(function(line) {
          return "  - " + line;
        }).join("\n")].join("\n"));
      }
      return react.exports.cloneElement(resolvedChildren, Object.assign({}, mergeEventFunctions(compact(omit(passThroughProps, ["ref"])), resolvedChildren.props, ["onClick"]), refRelatedProps));
    }
  }
  return react.exports.createElement(Component, Object.assign({}, omit(passThroughProps, ["ref"]), Component !== react.exports.Fragment && refRelatedProps), resolvedChildren);
}
function mergeEventFunctions(passThroughProps, existingProps, functionsToMerge) {
  var clone = Object.assign({}, passThroughProps);
  var _loop = function _loop2() {
    var func = _step.value;
    if (passThroughProps[func] !== void 0 && existingProps[func] !== void 0) {
      var _Object$assign;
      Object.assign(clone, (_Object$assign = {}, _Object$assign[func] = function(event) {
        if (!event.defaultPrevented)
          passThroughProps[func](event);
        if (!event.defaultPrevented)
          existingProps[func](event);
      }, _Object$assign));
    }
  };
  for (var _iterator = _createForOfIteratorHelperLoose(functionsToMerge), _step; !(_step = _iterator()).done; ) {
    _loop();
  }
  return clone;
}
function forwardRefWithAs(component) {
  var _component$displayNam;
  return Object.assign(react.exports.forwardRef(component), {
    displayName: (_component$displayNam = component.displayName) != null ? _component$displayNam : component.name
  });
}
function compact(object) {
  var clone = Object.assign({}, object);
  for (var key in clone) {
    if (clone[key] === void 0)
      delete clone[key];
  }
  return clone;
}
function omit(object, keysToOmit) {
  if (keysToOmit === void 0) {
    keysToOmit = [];
  }
  var clone = Object.assign({}, object);
  for (var _iterator2 = _createForOfIteratorHelperLoose(keysToOmit), _step2; !(_step2 = _iterator2()).done; ) {
    var key = _step2.value;
    if (key in clone)
      delete clone[key];
  }
  return clone;
}
var useIsoMorphicEffect = typeof window !== "undefined" ? react.exports.useLayoutEffect : react.exports.useEffect;
var state = {
  serverHandoffComplete: false
};
function useServerHandoffComplete() {
  var _useState = react.exports.useState(state.serverHandoffComplete), serverHandoffComplete = _useState[0], setServerHandoffComplete = _useState[1];
  react.exports.useEffect(function() {
    if (serverHandoffComplete === true)
      return;
    setServerHandoffComplete(true);
  }, [serverHandoffComplete]);
  react.exports.useEffect(function() {
    if (state.serverHandoffComplete === false)
      state.serverHandoffComplete = true;
  }, []);
  return serverHandoffComplete;
}
var ForcePortalRootContext = /* @__PURE__ */ react.exports.createContext(false);
function usePortalRoot() {
  return react.exports.useContext(ForcePortalRootContext);
}
function ForcePortalRoot(props) {
  return /* @__PURE__ */ jsx(ForcePortalRootContext.Provider, {
    value: props.force,
    children: props.children
  });
}
function usePortalTarget() {
  var forceInRoot = usePortalRoot();
  var groupTarget = react.exports.useContext(PortalGroupContext);
  var _useState = react.exports.useState(function() {
    if (!forceInRoot && groupTarget !== null)
      return null;
    if (typeof window === "undefined")
      return null;
    var existingRoot = document.getElementById("headlessui-portal-root");
    if (existingRoot)
      return existingRoot;
    var root = document.createElement("div");
    root.setAttribute("id", "headlessui-portal-root");
    return document.body.appendChild(root);
  }), target2 = _useState[0], setTarget = _useState[1];
  react.exports.useEffect(function() {
    if (forceInRoot)
      return;
    if (groupTarget === null)
      return;
    setTarget(groupTarget.current);
  }, [groupTarget, setTarget, forceInRoot]);
  return target2;
}
var DEFAULT_PORTAL_TAG = react.exports.Fragment;
function Portal(props) {
  var passthroughProps = props;
  var target2 = usePortalTarget();
  var _useState2 = react.exports.useState(function() {
    return typeof window === "undefined" ? null : document.createElement("div");
  }), element = _useState2[0];
  var ready = useServerHandoffComplete();
  useIsoMorphicEffect(function() {
    if (!target2)
      return;
    if (!element)
      return;
    target2.appendChild(element);
    return function() {
      if (!target2)
        return;
      if (!element)
        return;
      target2.removeChild(element);
      if (target2.childNodes.length <= 0) {
        var _target$parentElement;
        (_target$parentElement = target2.parentElement) == null ? void 0 : _target$parentElement.removeChild(target2);
      }
    };
  }, [target2, element]);
  if (!ready)
    return null;
  return !target2 || !element ? null : reactDom.exports.createPortal(render({
    props: passthroughProps,
    defaultTag: DEFAULT_PORTAL_TAG,
    name: "Portal"
  }), element);
}
var DEFAULT_GROUP_TAG = react.exports.Fragment;
var PortalGroupContext = /* @__PURE__ */ react.exports.createContext(null);
function Group(props) {
  var target2 = props.target, passthroughProps = _objectWithoutPropertiesLoose(props, ["target"]);
  return /* @__PURE__ */ jsx(PortalGroupContext.Provider, {
    value: target2,
    children: render({
      props: passthroughProps,
      defaultTag: DEFAULT_GROUP_TAG,
      name: "Popover.Group"
    })
  });
}
Portal.Group = Group;
function useSyncRefs() {
  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {
    refs[_key] = arguments[_key];
  }
  var cache = react.exports.useRef(refs);
  react.exports.useEffect(function() {
    cache.current = refs;
  }, [refs]);
  return react.exports.useCallback(function(value) {
    for (var _iterator = _createForOfIteratorHelperLoose(cache.current), _step; !(_step = _iterator()).done; ) {
      var ref = _step.value;
      if (ref == null)
        continue;
      if (typeof ref === "function")
        ref(value);
      else
        ref.current = value;
    }
  }, [cache]);
}
var Keys;
(function(Keys2) {
  Keys2["Space"] = " ";
  Keys2["Enter"] = "Enter";
  Keys2["Escape"] = "Escape";
  Keys2["Backspace"] = "Backspace";
  Keys2["ArrowLeft"] = "ArrowLeft";
  Keys2["ArrowUp"] = "ArrowUp";
  Keys2["ArrowRight"] = "ArrowRight";
  Keys2["ArrowDown"] = "ArrowDown";
  Keys2["Home"] = "Home";
  Keys2["End"] = "End";
  Keys2["PageUp"] = "PageUp";
  Keys2["PageDown"] = "PageDown";
  Keys2["Tab"] = "Tab";
})(Keys || (Keys = {}));
function isDisabledReactIssue7711(element) {
  var _ref, _parent;
  var parent = element.parentElement;
  var legend = null;
  while (parent && !(parent instanceof HTMLFieldSetElement)) {
    if (parent instanceof HTMLLegendElement)
      legend = parent;
    parent = parent.parentElement;
  }
  var isParentDisabled = (_ref = ((_parent = parent) == null ? void 0 : _parent.getAttribute("disabled")) === "") != null ? _ref : false;
  if (isParentDisabled && isFirstLegend(legend))
    return false;
  return isParentDisabled;
}
function isFirstLegend(element) {
  if (!element)
    return false;
  var previous = element.previousElementSibling;
  while (previous !== null) {
    if (previous instanceof HTMLLegendElement)
      return false;
    previous = previous.previousElementSibling;
  }
  return true;
}
var id = 0;
function generateId() {
  return ++id;
}
function useId() {
  var ready = useServerHandoffComplete();
  var _useState = react.exports.useState(ready ? generateId : null), id2 = _useState[0], setId = _useState[1];
  useIsoMorphicEffect(function() {
    if (id2 === null)
      setId(generateId());
  }, [id2]);
  return id2 != null ? "" + id2 : void 0;
}
function useWindowEvent(type, listener, options) {
  var listenerRef = react.exports.useRef(listener);
  listenerRef.current = listener;
  react.exports.useEffect(function() {
    function handler(event) {
      listenerRef.current.call(window, event);
    }
    window.addEventListener(type, handler, options);
    return function() {
      return window.removeEventListener(type, handler, options);
    };
  }, [type, options]);
}
var focusableSelector = /* @__PURE__ */ ["[contentEditable=true]", "[tabindex]", "a[href]", "area[href]", "button:not([disabled])", "iframe", "input:not([disabled])", "select:not([disabled])", "textarea:not([disabled])"].map(function(selector) {
  return selector + ":not([tabindex='-1'])";
}).join(",");
var Focus$1;
(function(Focus2) {
  Focus2[Focus2["First"] = 1] = "First";
  Focus2[Focus2["Previous"] = 2] = "Previous";
  Focus2[Focus2["Next"] = 4] = "Next";
  Focus2[Focus2["Last"] = 8] = "Last";
  Focus2[Focus2["WrapAround"] = 16] = "WrapAround";
  Focus2[Focus2["NoScroll"] = 32] = "NoScroll";
})(Focus$1 || (Focus$1 = {}));
var FocusResult;
(function(FocusResult2) {
  FocusResult2[FocusResult2["Error"] = 0] = "Error";
  FocusResult2[FocusResult2["Overflow"] = 1] = "Overflow";
  FocusResult2[FocusResult2["Success"] = 2] = "Success";
  FocusResult2[FocusResult2["Underflow"] = 3] = "Underflow";
})(FocusResult || (FocusResult = {}));
var Direction;
(function(Direction2) {
  Direction2[Direction2["Previous"] = -1] = "Previous";
  Direction2[Direction2["Next"] = 1] = "Next";
})(Direction || (Direction = {}));
function getFocusableElements(container) {
  if (container === void 0) {
    container = document.body;
  }
  if (container == null)
    return [];
  return Array.from(container.querySelectorAll(focusableSelector));
}
var FocusableMode;
(function(FocusableMode2) {
  FocusableMode2[FocusableMode2["Strict"] = 0] = "Strict";
  FocusableMode2[FocusableMode2["Loose"] = 1] = "Loose";
})(FocusableMode || (FocusableMode = {}));
function isFocusableElement(element, mode) {
  var _match;
  if (mode === void 0) {
    mode = FocusableMode.Strict;
  }
  if (element === document.body)
    return false;
  return match(mode, (_match = {}, _match[FocusableMode.Strict] = function() {
    return element.matches(focusableSelector);
  }, _match[FocusableMode.Loose] = function() {
    var next = element;
    while (next !== null) {
      if (next.matches(focusableSelector))
        return true;
      next = next.parentElement;
    }
    return false;
  }, _match));
}
function focusElement(element) {
  element == null ? void 0 : element.focus({
    preventScroll: true
  });
}
function focusIn(container, focus) {
  var elements = Array.isArray(container) ? container : getFocusableElements(container);
  var active = document.activeElement;
  var direction = function() {
    if (focus & (Focus$1.First | Focus$1.Next))
      return Direction.Next;
    if (focus & (Focus$1.Previous | Focus$1.Last))
      return Direction.Previous;
    throw new Error("Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last");
  }();
  var startIndex = function() {
    if (focus & Focus$1.First)
      return 0;
    if (focus & Focus$1.Previous)
      return Math.max(0, elements.indexOf(active)) - 1;
    if (focus & Focus$1.Next)
      return Math.max(0, elements.indexOf(active)) + 1;
    if (focus & Focus$1.Last)
      return elements.length - 1;
    throw new Error("Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last");
  }();
  var focusOptions = focus & Focus$1.NoScroll ? {
    preventScroll: true
  } : {};
  var offset = 0;
  var total = elements.length;
  var next = void 0;
  do {
    var _next;
    if (offset >= total || offset + total <= 0)
      return FocusResult.Error;
    var nextIdx = startIndex + offset;
    if (focus & Focus$1.WrapAround) {
      nextIdx = (nextIdx + total) % total;
    } else {
      if (nextIdx < 0)
        return FocusResult.Underflow;
      if (nextIdx >= total)
        return FocusResult.Overflow;
    }
    next = elements[nextIdx];
    (_next = next) == null ? void 0 : _next.focus(focusOptions);
    offset += direction;
  } while (next !== document.activeElement);
  if (!next.hasAttribute("tabindex"))
    next.setAttribute("tabindex", "0");
  return FocusResult.Success;
}
function useIsMounted() {
  var mounted = react.exports.useRef(false);
  react.exports.useEffect(function() {
    mounted.current = true;
    return function() {
      mounted.current = false;
    };
  }, []);
  return mounted;
}
var Features;
(function(Features2) {
  Features2[Features2["None"] = 1] = "None";
  Features2[Features2["InitialFocus"] = 2] = "InitialFocus";
  Features2[Features2["TabLock"] = 4] = "TabLock";
  Features2[Features2["FocusLock"] = 8] = "FocusLock";
  Features2[Features2["RestoreFocus"] = 16] = "RestoreFocus";
  Features2[Features2["All"] = 30] = "All";
})(Features || (Features = {}));
function useFocusTrap(container, features, _temp) {
  if (features === void 0) {
    features = Features.All;
  }
  var _ref = _temp === void 0 ? {} : _temp, initialFocus = _ref.initialFocus, containers = _ref.containers;
  var restoreElement = react.exports.useRef(typeof window !== "undefined" ? document.activeElement : null);
  var previousActiveElement = react.exports.useRef(null);
  var mounted = useIsMounted();
  var featuresRestoreFocus = Boolean(features & Features.RestoreFocus);
  var featuresInitialFocus = Boolean(features & Features.InitialFocus);
  react.exports.useEffect(function() {
    if (!featuresRestoreFocus)
      return;
    restoreElement.current = document.activeElement;
  }, [featuresRestoreFocus]);
  react.exports.useEffect(function() {
    if (!featuresRestoreFocus)
      return;
    return function() {
      focusElement(restoreElement.current);
      restoreElement.current = null;
    };
  }, [featuresRestoreFocus]);
  react.exports.useEffect(function() {
    if (!featuresInitialFocus)
      return;
    if (!container.current)
      return;
    var activeElement = document.activeElement;
    if (initialFocus == null ? void 0 : initialFocus.current) {
      if ((initialFocus == null ? void 0 : initialFocus.current) === activeElement) {
        previousActiveElement.current = activeElement;
        return;
      }
    } else if (container.current.contains(activeElement)) {
      previousActiveElement.current = activeElement;
      return;
    }
    if (initialFocus == null ? void 0 : initialFocus.current) {
      focusElement(initialFocus.current);
    } else {
      if (focusIn(container.current, Focus$1.First) === FocusResult.Error) {
        console.warn("There are no focusable elements inside the <FocusTrap />");
      }
    }
    previousActiveElement.current = document.activeElement;
  }, [container, initialFocus, featuresInitialFocus]);
  useWindowEvent("keydown", function(event) {
    if (!(features & Features.TabLock))
      return;
    if (!container.current)
      return;
    if (event.key !== Keys.Tab)
      return;
    event.preventDefault();
    if (focusIn(container.current, (event.shiftKey ? Focus$1.Previous : Focus$1.Next) | Focus$1.WrapAround) === FocusResult.Success) {
      previousActiveElement.current = document.activeElement;
    }
  });
  useWindowEvent("focus", function(event) {
    if (!(features & Features.FocusLock))
      return;
    var allContainers = new Set(containers == null ? void 0 : containers.current);
    allContainers.add(container);
    if (!allContainers.size)
      return;
    var previous = previousActiveElement.current;
    if (!previous)
      return;
    if (!mounted.current)
      return;
    var toElement = event.target;
    if (toElement && toElement instanceof HTMLElement) {
      if (!contains(allContainers, toElement)) {
        event.preventDefault();
        event.stopPropagation();
        focusElement(previous);
      } else {
        previousActiveElement.current = toElement;
        focusElement(toElement);
      }
    } else {
      focusElement(previousActiveElement.current);
    }
  }, true);
}
function contains(containers, element) {
  for (var _iterator = _createForOfIteratorHelperLoose(containers), _step; !(_step = _iterator()).done; ) {
    var _container$current;
    var container = _step.value;
    if ((_container$current = container.current) == null ? void 0 : _container$current.contains(element))
      return true;
  }
  return false;
}
var interactables = /* @__PURE__ */ new Set();
var originals = /* @__PURE__ */ new Map();
function inert(element) {
  element.setAttribute("aria-hidden", "true");
  element.inert = true;
}
function restore(element) {
  var original = originals.get(element);
  if (!original)
    return;
  if (original["aria-hidden"] === null)
    element.removeAttribute("aria-hidden");
  else
    element.setAttribute("aria-hidden", original["aria-hidden"]);
  element.inert = original.inert;
}
function useInertOthers(container, enabled) {
  if (enabled === void 0) {
    enabled = true;
  }
  useIsoMorphicEffect(function() {
    if (!enabled)
      return;
    if (!container.current)
      return;
    var element = container.current;
    interactables.add(element);
    for (var _iterator = _createForOfIteratorHelperLoose(originals.keys()), _step; !(_step = _iterator()).done; ) {
      var original = _step.value;
      if (original.contains(element)) {
        restore(original);
        originals["delete"](original);
      }
    }
    document.querySelectorAll("body > *").forEach(function(child) {
      if (!(child instanceof HTMLElement))
        return;
      for (var _iterator2 = _createForOfIteratorHelperLoose(interactables), _step2; !(_step2 = _iterator2()).done; ) {
        var interactable = _step2.value;
        if (child.contains(interactable))
          return;
      }
      if (interactables.size === 1) {
        originals.set(child, {
          "aria-hidden": child.getAttribute("aria-hidden"),
          inert: child.inert
        });
        inert(child);
      }
    });
    return function() {
      interactables["delete"](element);
      if (interactables.size > 0) {
        document.querySelectorAll("body > *").forEach(function(child) {
          if (!(child instanceof HTMLElement))
            return;
          if (originals.has(child))
            return;
          for (var _iterator3 = _createForOfIteratorHelperLoose(interactables), _step3; !(_step3 = _iterator3()).done; ) {
            var interactable = _step3.value;
            if (child.contains(interactable))
              return;
          }
          originals.set(child, {
            "aria-hidden": child.getAttribute("aria-hidden"),
            inert: child.inert
          });
          inert(child);
        });
      } else {
        for (var _iterator4 = _createForOfIteratorHelperLoose(originals.keys()), _step4; !(_step4 = _iterator4()).done; ) {
          var _element = _step4.value;
          restore(_element);
          originals["delete"](_element);
        }
      }
    };
  }, [enabled]);
}
var DescriptionContext = /* @__PURE__ */ react.exports.createContext(null);
function useDescriptionContext() {
  var context2 = react.exports.useContext(DescriptionContext);
  if (context2 === null) {
    var err = new Error("You used a <Description /> component, but it is not inside a relevant parent.");
    if (Error.captureStackTrace)
      Error.captureStackTrace(err, useDescriptionContext);
    throw err;
  }
  return context2;
}
function useDescriptions() {
  var _useState = react.exports.useState([]), descriptionIds = _useState[0], setDescriptionIds = _useState[1];
  return [
    descriptionIds.length > 0 ? descriptionIds.join(" ") : void 0,
    react.exports.useMemo(function() {
      return function DescriptionProvider(props) {
        var register = react.exports.useCallback(function(value) {
          setDescriptionIds(function(existing) {
            return [].concat(existing, [value]);
          });
          return function() {
            return setDescriptionIds(function(existing) {
              var clone = existing.slice();
              var idx = clone.indexOf(value);
              if (idx !== -1)
                clone.splice(idx, 1);
              return clone;
            });
          };
        }, []);
        var contextBag = react.exports.useMemo(function() {
          return {
            register,
            slot: props.slot,
            name: props.name,
            props: props.props
          };
        }, [register, props.slot, props.name, props.props]);
        return /* @__PURE__ */ jsx(DescriptionContext.Provider, {
          value: contextBag,
          children: props.children
        });
      };
    }, [setDescriptionIds])
  ];
}
var DEFAULT_DESCRIPTION_TAG = "p";
function Description(props) {
  var context2 = useDescriptionContext();
  var id2 = "headlessui-description-" + useId();
  useIsoMorphicEffect(function() {
    return context2.register(id2);
  }, [id2, context2.register]);
  var passThroughProps = props;
  var propsWeControl = _extends({}, context2.props, {
    id: id2
  });
  return render({
    props: _extends({}, passThroughProps, propsWeControl),
    slot: context2.slot || {},
    defaultTag: DEFAULT_DESCRIPTION_TAG,
    name: context2.name || "Description"
  });
}
var Context = /* @__PURE__ */ react.exports.createContext(null);
Context.displayName = "OpenClosedContext";
var State;
(function(State2) {
  State2[State2["Open"] = 0] = "Open";
  State2[State2["Closed"] = 1] = "Closed";
})(State || (State = {}));
function useOpenClosed() {
  return react.exports.useContext(Context);
}
function OpenClosedProvider(_ref) {
  var value = _ref.value, children = _ref.children;
  return /* @__PURE__ */ jsx(Context.Provider, {
    value,
    children
  });
}
var StackContext = /* @__PURE__ */ react.exports.createContext(function() {
});
StackContext.displayName = "StackContext";
var StackMessage;
(function(StackMessage2) {
  StackMessage2[StackMessage2["Add"] = 0] = "Add";
  StackMessage2[StackMessage2["Remove"] = 1] = "Remove";
})(StackMessage || (StackMessage = {}));
function useStackContext() {
  return react.exports.useContext(StackContext);
}
function StackProvider(_ref) {
  var children = _ref.children, onUpdate = _ref.onUpdate, type = _ref.type, element = _ref.element;
  var parentUpdate = useStackContext();
  var notify = react.exports.useCallback(function() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    onUpdate == null ? void 0 : onUpdate.apply(void 0, args);
    parentUpdate.apply(void 0, args);
  }, [parentUpdate, onUpdate]);
  useIsoMorphicEffect(function() {
    notify(StackMessage.Add, type, element);
    return function() {
      return notify(StackMessage.Remove, type, element);
    };
  }, [notify, type, element]);
  return /* @__PURE__ */ jsx(StackContext.Provider, {
    value: notify,
    children
  });
}
var _reducers$1;
var DialogStates;
(function(DialogStates2) {
  DialogStates2[DialogStates2["Open"] = 0] = "Open";
  DialogStates2[DialogStates2["Closed"] = 1] = "Closed";
})(DialogStates || (DialogStates = {}));
var ActionTypes$1;
(function(ActionTypes2) {
  ActionTypes2[ActionTypes2["SetTitleId"] = 0] = "SetTitleId";
})(ActionTypes$1 || (ActionTypes$1 = {}));
var reducers$1 = (_reducers$1 = {}, _reducers$1[ActionTypes$1.SetTitleId] = function(state2, action) {
  if (state2.titleId === action.id)
    return state2;
  return _extends({}, state2, {
    titleId: action.id
  });
}, _reducers$1);
var DialogContext = /* @__PURE__ */ react.exports.createContext(null);
DialogContext.displayName = "DialogContext";
function useDialogContext(component) {
  var context2 = react.exports.useContext(DialogContext);
  if (context2 === null) {
    var err = new Error("<" + component + " /> is missing a parent <" + Dialog.displayName + " /> component.");
    if (Error.captureStackTrace)
      Error.captureStackTrace(err, useDialogContext);
    throw err;
  }
  return context2;
}
function stateReducer$1(state2, action) {
  return match(action.type, reducers$1, state2, action);
}
var DEFAULT_DIALOG_TAG = "div";
var DialogRenderFeatures = Features$1.RenderStrategy | Features$1.Static;
var DialogRoot = /* @__PURE__ */ forwardRefWithAs(function Dialog2(props, ref) {
  var open = props.open, onClose = props.onClose, initialFocus = props.initialFocus, rest = _objectWithoutPropertiesLoose(props, ["open", "onClose", "initialFocus"]);
  var _useState = react.exports.useState(0), nestedDialogCount = _useState[0], setNestedDialogCount = _useState[1];
  var usesOpenClosedState = useOpenClosed();
  if (open === void 0 && usesOpenClosedState !== null) {
    var _match;
    open = match(usesOpenClosedState, (_match = {}, _match[State.Open] = true, _match[State.Closed] = false, _match));
  }
  var containers = react.exports.useRef(new Set());
  var internalDialogRef = react.exports.useRef(null);
  var dialogRef = useSyncRefs(internalDialogRef, ref);
  var hasOpen = props.hasOwnProperty("open") || usesOpenClosedState !== null;
  var hasOnClose = props.hasOwnProperty("onClose");
  if (!hasOpen && !hasOnClose) {
    throw new Error("You have to provide an `open` and an `onClose` prop to the `Dialog` component.");
  }
  if (!hasOpen) {
    throw new Error("You provided an `onClose` prop to the `Dialog`, but forgot an `open` prop.");
  }
  if (!hasOnClose) {
    throw new Error("You provided an `open` prop to the `Dialog`, but forgot an `onClose` prop.");
  }
  if (typeof open !== "boolean") {
    throw new Error("You provided an `open` prop to the `Dialog`, but the value is not a boolean. Received: " + open);
  }
  if (typeof onClose !== "function") {
    throw new Error("You provided an `onClose` prop to the `Dialog`, but the value is not a function. Received: " + onClose);
  }
  var dialogState = open ? DialogStates.Open : DialogStates.Closed;
  var visible = function() {
    if (usesOpenClosedState !== null) {
      return usesOpenClosedState === State.Open;
    }
    return dialogState === DialogStates.Open;
  }();
  var _useReducer = react.exports.useReducer(stateReducer$1, {
    titleId: null,
    descriptionId: null
  }), state2 = _useReducer[0], dispatch = _useReducer[1];
  var close = react.exports.useCallback(function() {
    return onClose(false);
  }, [onClose]);
  var setTitleId = react.exports.useCallback(function(id3) {
    return dispatch({
      type: ActionTypes$1.SetTitleId,
      id: id3
    });
  }, [dispatch]);
  var ready = useServerHandoffComplete();
  var enabled = ready && dialogState === DialogStates.Open;
  var hasNestedDialogs = nestedDialogCount > 1;
  var hasParentDialog = react.exports.useContext(DialogContext) !== null;
  var position = !hasNestedDialogs ? "leaf" : "parent";
  useFocusTrap(internalDialogRef, enabled ? match(position, {
    parent: Features.RestoreFocus,
    leaf: Features.All
  }) : Features.None, {
    initialFocus,
    containers
  });
  useInertOthers(internalDialogRef, hasNestedDialogs ? enabled : false);
  useWindowEvent("mousedown", function(event) {
    var _internalDialogRef$cu;
    var target2 = event.target;
    if (dialogState !== DialogStates.Open)
      return;
    if (hasNestedDialogs)
      return;
    if ((_internalDialogRef$cu = internalDialogRef.current) == null ? void 0 : _internalDialogRef$cu.contains(target2))
      return;
    close();
  });
  useWindowEvent("keydown", function(event) {
    if (event.key !== Keys.Escape)
      return;
    if (dialogState !== DialogStates.Open)
      return;
    if (hasNestedDialogs)
      return;
    event.preventDefault();
    event.stopPropagation();
    close();
  });
  react.exports.useEffect(function() {
    if (dialogState !== DialogStates.Open)
      return;
    if (hasParentDialog)
      return;
    var overflow = document.documentElement.style.overflow;
    var paddingRight = document.documentElement.style.paddingRight;
    var scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;
    document.documentElement.style.overflow = "hidden";
    document.documentElement.style.paddingRight = scrollbarWidth + "px";
    return function() {
      document.documentElement.style.overflow = overflow;
      document.documentElement.style.paddingRight = paddingRight;
    };
  }, [dialogState, hasParentDialog]);
  react.exports.useEffect(function() {
    if (dialogState !== DialogStates.Open)
      return;
    if (!internalDialogRef.current)
      return;
    var observer = new IntersectionObserver(function(entries) {
      for (var _iterator = _createForOfIteratorHelperLoose(entries), _step; !(_step = _iterator()).done; ) {
        var entry = _step.value;
        if (entry.boundingClientRect.x === 0 && entry.boundingClientRect.y === 0 && entry.boundingClientRect.width === 0 && entry.boundingClientRect.height === 0) {
          close();
        }
      }
    });
    observer.observe(internalDialogRef.current);
    return function() {
      return observer.disconnect();
    };
  }, [dialogState, internalDialogRef, close]);
  var _useDescriptions = useDescriptions(), describedby = _useDescriptions[0], DescriptionProvider = _useDescriptions[1];
  var id2 = "headlessui-dialog-" + useId();
  var contextBag = react.exports.useMemo(function() {
    return [{
      dialogState,
      close,
      setTitleId
    }, state2];
  }, [dialogState, state2, close, setTitleId]);
  var slot = react.exports.useMemo(function() {
    return {
      open: dialogState === DialogStates.Open
    };
  }, [dialogState]);
  var propsWeControl = {
    ref: dialogRef,
    id: id2,
    role: "dialog",
    "aria-modal": dialogState === DialogStates.Open ? true : void 0,
    "aria-labelledby": state2.titleId,
    "aria-describedby": describedby,
    onClick: function onClick(event) {
      event.stopPropagation();
    }
  };
  var passthroughProps = rest;
  return /* @__PURE__ */ jsx(StackProvider, {
    type: "Dialog",
    element: internalDialogRef,
    onUpdate: react.exports.useCallback(function(message, type, element) {
      var _match2;
      if (type !== "Dialog")
        return;
      match(message, (_match2 = {}, _match2[StackMessage.Add] = function() {
        containers.current.add(element);
        setNestedDialogCount(function(count) {
          return count + 1;
        });
      }, _match2[StackMessage.Remove] = function() {
        containers.current.add(element);
        setNestedDialogCount(function(count) {
          return count - 1;
        });
      }, _match2));
    }, []),
    children: /* @__PURE__ */ jsx(ForcePortalRoot, {
      force: true,
      children: /* @__PURE__ */ jsx(Portal, {
        children: /* @__PURE__ */ jsx(DialogContext.Provider, {
          value: contextBag,
          children: /* @__PURE__ */ jsx(Portal.Group, {
            target: internalDialogRef,
            children: /* @__PURE__ */ jsx(ForcePortalRoot, {
              force: false,
              children: /* @__PURE__ */ jsx(DescriptionProvider, {
                slot,
                name: "Dialog.Description",
                children: render({
                  props: _extends({}, passthroughProps, propsWeControl),
                  slot,
                  defaultTag: DEFAULT_DIALOG_TAG,
                  features: DialogRenderFeatures,
                  visible,
                  name: "Dialog"
                })
              })
            })
          })
        })
      })
    })
  });
});
var DEFAULT_OVERLAY_TAG = "div";
var Overlay = /* @__PURE__ */ forwardRefWithAs(function Overlay2(props, ref) {
  var _useDialogContext = useDialogContext([Dialog.displayName, Overlay2.name].join(".")), _useDialogContext$ = _useDialogContext[0], dialogState = _useDialogContext$.dialogState, close = _useDialogContext$.close;
  var overlayRef = useSyncRefs(ref);
  var id2 = "headlessui-dialog-overlay-" + useId();
  var handleClick = react.exports.useCallback(function(event) {
    if (event.target !== event.currentTarget)
      return;
    if (isDisabledReactIssue7711(event.currentTarget))
      return event.preventDefault();
    event.preventDefault();
    event.stopPropagation();
    close();
  }, [close]);
  var slot = react.exports.useMemo(function() {
    return {
      open: dialogState === DialogStates.Open
    };
  }, [dialogState]);
  var propsWeControl = {
    ref: overlayRef,
    id: id2,
    "aria-hidden": true,
    onClick: handleClick
  };
  var passthroughProps = props;
  return render({
    props: _extends({}, passthroughProps, propsWeControl),
    slot,
    defaultTag: DEFAULT_OVERLAY_TAG,
    name: "Dialog.Overlay"
  });
});
var DEFAULT_TITLE_TAG = "h2";
function Title(props) {
  var _useDialogContext2 = useDialogContext([Dialog.displayName, Title.name].join(".")), _useDialogContext2$ = _useDialogContext2[0], dialogState = _useDialogContext2$.dialogState, setTitleId = _useDialogContext2$.setTitleId;
  var id2 = "headlessui-dialog-title-" + useId();
  react.exports.useEffect(function() {
    setTitleId(id2);
    return function() {
      return setTitleId(null);
    };
  }, [id2, setTitleId]);
  var slot = react.exports.useMemo(function() {
    return {
      open: dialogState === DialogStates.Open
    };
  }, [dialogState]);
  var propsWeControl = {
    id: id2
  };
  var passthroughProps = props;
  return render({
    props: _extends({}, passthroughProps, propsWeControl),
    slot,
    defaultTag: DEFAULT_TITLE_TAG,
    name: "Dialog.Title"
  });
}
var Dialog = /* @__PURE__ */ Object.assign(DialogRoot, {
  Overlay,
  Title,
  Description
});
function resolveType(props) {
  var _props$as;
  if (props.type)
    return props.type;
  var tag = (_props$as = props.as) != null ? _props$as : "button";
  if (typeof tag === "string" && tag.toLowerCase() === "button")
    return "button";
  return void 0;
}
function useResolveButtonType(props, ref) {
  var _useState = react.exports.useState(function() {
    return resolveType(props);
  }), type = _useState[0], setType = _useState[1];
  useIsoMorphicEffect(function() {
    setType(resolveType(props));
  }, [props.type, props.as]);
  useIsoMorphicEffect(function() {
    if (type)
      return;
    if (!ref.current)
      return;
    if (ref.current instanceof HTMLButtonElement && !ref.current.hasAttribute("type")) {
      setType("button");
    }
  }, [type, ref]);
  return type;
}
var DEFAULT_FOCUS_TRAP_TAG = "div";
function FocusTrap(props) {
  var container = react.exports.useRef(null);
  var initialFocus = props.initialFocus, passthroughProps = _objectWithoutPropertiesLoose(props, ["initialFocus"]);
  var ready = useServerHandoffComplete();
  useFocusTrap(container, ready ? Features.All : Features.None, {
    initialFocus
  });
  var propsWeControl = {
    ref: container
  };
  return render({
    props: _extends({}, passthroughProps, propsWeControl),
    defaultTag: DEFAULT_FOCUS_TRAP_TAG,
    name: "FocusTrap"
  });
}
function disposables() {
  var disposables2 = [];
  var api = {
    requestAnimationFrame: function(_requestAnimationFrame) {
      function requestAnimationFrame2() {
        return _requestAnimationFrame.apply(this, arguments);
      }
      requestAnimationFrame2.toString = function() {
        return _requestAnimationFrame.toString();
      };
      return requestAnimationFrame2;
    }(function() {
      var raf = requestAnimationFrame.apply(void 0, arguments);
      api.add(function() {
        return cancelAnimationFrame(raf);
      });
    }),
    nextFrame: function nextFrame() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      api.requestAnimationFrame(function() {
        api.requestAnimationFrame.apply(api, args);
      });
    },
    setTimeout: function(_setTimeout) {
      function setTimeout2() {
        return _setTimeout.apply(this, arguments);
      }
      setTimeout2.toString = function() {
        return _setTimeout.toString();
      };
      return setTimeout2;
    }(function() {
      var timer = setTimeout.apply(void 0, arguments);
      api.add(function() {
        return clearTimeout(timer);
      });
    }),
    add: function add(cb2) {
      disposables2.push(cb2);
    },
    dispose: function dispose() {
      for (var _iterator = _createForOfIteratorHelperLoose(disposables2.splice(0)), _step; !(_step = _iterator()).done; ) {
        var dispose2 = _step.value;
        dispose2();
      }
    }
  };
  return api;
}
function useDisposables() {
  var _useState = react.exports.useState(disposables), d2 = _useState[0];
  react.exports.useEffect(function() {
    return function() {
      return d2.dispose();
    };
  }, [d2]);
  return d2;
}
function useComputed(cb2, dependencies) {
  var _useState = react.exports.useState(cb2), value = _useState[0], setValue = _useState[1];
  var cbRef = react.exports.useRef(cb2);
  useIsoMorphicEffect(function() {
    cbRef.current = cb2;
  }, [cb2]);
  useIsoMorphicEffect(function() {
    return setValue(cbRef.current);
  }, [cbRef, setValue].concat(dependencies));
  return value;
}
function assertNever(x2) {
  throw new Error("Unexpected object: " + x2);
}
var Focus;
(function(Focus2) {
  Focus2[Focus2["First"] = 0] = "First";
  Focus2[Focus2["Previous"] = 1] = "Previous";
  Focus2[Focus2["Next"] = 2] = "Next";
  Focus2[Focus2["Last"] = 3] = "Last";
  Focus2[Focus2["Specific"] = 4] = "Specific";
  Focus2[Focus2["Nothing"] = 5] = "Nothing";
})(Focus || (Focus = {}));
function calculateActiveIndex(action, resolvers) {
  var items = resolvers.resolveItems();
  if (items.length <= 0)
    return null;
  var currentActiveIndex = resolvers.resolveActiveIndex();
  var activeIndex = currentActiveIndex != null ? currentActiveIndex : -1;
  var nextActiveIndex = function() {
    switch (action.focus) {
      case Focus.First:
        return items.findIndex(function(item) {
          return !resolvers.resolveDisabled(item);
        });
      case Focus.Previous: {
        var idx = items.slice().reverse().findIndex(function(item, idx2, all) {
          if (activeIndex !== -1 && all.length - idx2 - 1 >= activeIndex)
            return false;
          return !resolvers.resolveDisabled(item);
        });
        if (idx === -1)
          return idx;
        return items.length - 1 - idx;
      }
      case Focus.Next:
        return items.findIndex(function(item, idx2) {
          if (idx2 <= activeIndex)
            return false;
          return !resolvers.resolveDisabled(item);
        });
      case Focus.Last: {
        var _idx = items.slice().reverse().findIndex(function(item) {
          return !resolvers.resolveDisabled(item);
        });
        if (_idx === -1)
          return _idx;
        return items.length - 1 - _idx;
      }
      case Focus.Specific:
        return items.findIndex(function(item) {
          return resolvers.resolveId(item) === action.id;
        });
      case Focus.Nothing:
        return null;
      default:
        assertNever(action);
    }
  }();
  return nextActiveIndex === -1 ? currentActiveIndex : nextActiveIndex;
}
var _reducers;
var ListboxStates;
(function(ListboxStates2) {
  ListboxStates2[ListboxStates2["Open"] = 0] = "Open";
  ListboxStates2[ListboxStates2["Closed"] = 1] = "Closed";
})(ListboxStates || (ListboxStates = {}));
var ActionTypes;
(function(ActionTypes2) {
  ActionTypes2[ActionTypes2["OpenListbox"] = 0] = "OpenListbox";
  ActionTypes2[ActionTypes2["CloseListbox"] = 1] = "CloseListbox";
  ActionTypes2[ActionTypes2["SetDisabled"] = 2] = "SetDisabled";
  ActionTypes2[ActionTypes2["SetOrientation"] = 3] = "SetOrientation";
  ActionTypes2[ActionTypes2["GoToOption"] = 4] = "GoToOption";
  ActionTypes2[ActionTypes2["Search"] = 5] = "Search";
  ActionTypes2[ActionTypes2["ClearSearch"] = 6] = "ClearSearch";
  ActionTypes2[ActionTypes2["RegisterOption"] = 7] = "RegisterOption";
  ActionTypes2[ActionTypes2["UnregisterOption"] = 8] = "UnregisterOption";
})(ActionTypes || (ActionTypes = {}));
var reducers = (_reducers = {}, _reducers[ActionTypes.CloseListbox] = function(state2) {
  if (state2.disabled)
    return state2;
  if (state2.listboxState === ListboxStates.Closed)
    return state2;
  return _extends({}, state2, {
    activeOptionIndex: null,
    listboxState: ListboxStates.Closed
  });
}, _reducers[ActionTypes.OpenListbox] = function(state2) {
  if (state2.disabled)
    return state2;
  if (state2.listboxState === ListboxStates.Open)
    return state2;
  return _extends({}, state2, {
    listboxState: ListboxStates.Open
  });
}, _reducers[ActionTypes.SetDisabled] = function(state2, action) {
  if (state2.disabled === action.disabled)
    return state2;
  return _extends({}, state2, {
    disabled: action.disabled
  });
}, _reducers[ActionTypes.SetOrientation] = function(state2, action) {
  if (state2.orientation === action.orientation)
    return state2;
  return _extends({}, state2, {
    orientation: action.orientation
  });
}, _reducers[ActionTypes.GoToOption] = function(state2, action) {
  if (state2.disabled)
    return state2;
  if (state2.listboxState === ListboxStates.Closed)
    return state2;
  var activeOptionIndex = calculateActiveIndex(action, {
    resolveItems: function resolveItems() {
      return state2.options;
    },
    resolveActiveIndex: function resolveActiveIndex() {
      return state2.activeOptionIndex;
    },
    resolveId: function resolveId(item) {
      return item.id;
    },
    resolveDisabled: function resolveDisabled(item) {
      return item.dataRef.current.disabled;
    }
  });
  if (state2.searchQuery === "" && state2.activeOptionIndex === activeOptionIndex)
    return state2;
  return _extends({}, state2, {
    searchQuery: "",
    activeOptionIndex
  });
}, _reducers[ActionTypes.Search] = function(state2, action) {
  if (state2.disabled)
    return state2;
  if (state2.listboxState === ListboxStates.Closed)
    return state2;
  var searchQuery = state2.searchQuery + action.value.toLowerCase();
  var match2 = state2.options.findIndex(function(option) {
    var _option$dataRef$curre;
    return !option.dataRef.current.disabled && ((_option$dataRef$curre = option.dataRef.current.textValue) == null ? void 0 : _option$dataRef$curre.startsWith(searchQuery));
  });
  if (match2 === -1 || match2 === state2.activeOptionIndex)
    return _extends({}, state2, {
      searchQuery
    });
  return _extends({}, state2, {
    searchQuery,
    activeOptionIndex: match2
  });
}, _reducers[ActionTypes.ClearSearch] = function(state2) {
  if (state2.disabled)
    return state2;
  if (state2.listboxState === ListboxStates.Closed)
    return state2;
  if (state2.searchQuery === "")
    return state2;
  return _extends({}, state2, {
    searchQuery: ""
  });
}, _reducers[ActionTypes.RegisterOption] = function(state2, action) {
  return _extends({}, state2, {
    options: [].concat(state2.options, [{
      id: action.id,
      dataRef: action.dataRef
    }])
  });
}, _reducers[ActionTypes.UnregisterOption] = function(state2, action) {
  var nextOptions = state2.options.slice();
  var currentActiveOption = state2.activeOptionIndex !== null ? nextOptions[state2.activeOptionIndex] : null;
  var idx = nextOptions.findIndex(function(a2) {
    return a2.id === action.id;
  });
  if (idx !== -1)
    nextOptions.splice(idx, 1);
  return _extends({}, state2, {
    options: nextOptions,
    activeOptionIndex: function() {
      if (idx === state2.activeOptionIndex)
        return null;
      if (currentActiveOption === null)
        return null;
      return nextOptions.indexOf(currentActiveOption);
    }()
  });
}, _reducers);
var ListboxContext = /* @__PURE__ */ react.exports.createContext(null);
ListboxContext.displayName = "ListboxContext";
function useListboxContext(component) {
  var context2 = react.exports.useContext(ListboxContext);
  if (context2 === null) {
    var err = new Error("<" + component + " /> is missing a parent <" + Listbox.name + " /> component.");
    if (Error.captureStackTrace)
      Error.captureStackTrace(err, useListboxContext);
    throw err;
  }
  return context2;
}
function stateReducer(state2, action) {
  return match(action.type, reducers, state2, action);
}
var DEFAULT_LISTBOX_TAG = react.exports.Fragment;
function Listbox(props) {
  var _match;
  var value = props.value, onChange = props.onChange, _props$disabled = props.disabled, disabled = _props$disabled === void 0 ? false : _props$disabled, _props$horizontal = props.horizontal, horizontal = _props$horizontal === void 0 ? false : _props$horizontal, passThroughProps = _objectWithoutPropertiesLoose(props, ["value", "onChange", "disabled", "horizontal"]);
  var orientation = horizontal ? "horizontal" : "vertical";
  var reducerBag = react.exports.useReducer(stateReducer, {
    listboxState: ListboxStates.Closed,
    propsRef: {
      current: {
        value,
        onChange
      }
    },
    labelRef: react.exports.createRef(),
    buttonRef: react.exports.createRef(),
    optionsRef: react.exports.createRef(),
    disabled,
    orientation,
    options: [],
    searchQuery: "",
    activeOptionIndex: null
  });
  var _reducerBag$ = reducerBag[0], listboxState = _reducerBag$.listboxState, propsRef = _reducerBag$.propsRef, optionsRef = _reducerBag$.optionsRef, buttonRef = _reducerBag$.buttonRef, dispatch = reducerBag[1];
  useIsoMorphicEffect(function() {
    propsRef.current.value = value;
  }, [value, propsRef]);
  useIsoMorphicEffect(function() {
    propsRef.current.onChange = onChange;
  }, [onChange, propsRef]);
  useIsoMorphicEffect(function() {
    return dispatch({
      type: ActionTypes.SetDisabled,
      disabled
    });
  }, [disabled]);
  useIsoMorphicEffect(function() {
    return dispatch({
      type: ActionTypes.SetOrientation,
      orientation
    });
  }, [orientation]);
  useWindowEvent("mousedown", function(event) {
    var _buttonRef$current, _optionsRef$current;
    var target2 = event.target;
    if (listboxState !== ListboxStates.Open)
      return;
    if ((_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.contains(target2))
      return;
    if ((_optionsRef$current = optionsRef.current) == null ? void 0 : _optionsRef$current.contains(target2))
      return;
    dispatch({
      type: ActionTypes.CloseListbox
    });
    if (!isFocusableElement(target2, FocusableMode.Loose)) {
      var _buttonRef$current2;
      event.preventDefault();
      (_buttonRef$current2 = buttonRef.current) == null ? void 0 : _buttonRef$current2.focus();
    }
  });
  var slot = react.exports.useMemo(function() {
    return {
      open: listboxState === ListboxStates.Open,
      disabled
    };
  }, [listboxState, disabled]);
  return /* @__PURE__ */ jsx(ListboxContext.Provider, {
    value: reducerBag,
    children: /* @__PURE__ */ jsx(OpenClosedProvider, {
      value: match(listboxState, (_match = {}, _match[ListboxStates.Open] = State.Open, _match[ListboxStates.Closed] = State.Closed, _match)),
      children: render({
        props: passThroughProps,
        slot,
        defaultTag: DEFAULT_LISTBOX_TAG,
        name: "Listbox"
      })
    })
  });
}
var DEFAULT_BUTTON_TAG = "button";
var Button$2 = /* @__PURE__ */ forwardRefWithAs(function Button2(props, ref) {
  var _state$optionsRef$cur;
  var _useListboxContext = useListboxContext([Listbox.name, Button2.name].join(".")), state2 = _useListboxContext[0], dispatch = _useListboxContext[1];
  var buttonRef = useSyncRefs(state2.buttonRef, ref);
  var id2 = "headlessui-listbox-button-" + useId();
  var d2 = useDisposables();
  var handleKeyDown = react.exports.useCallback(function(event) {
    switch (event.key) {
      case Keys.Space:
      case Keys.Enter:
      case Keys.ArrowDown:
        event.preventDefault();
        dispatch({
          type: ActionTypes.OpenListbox
        });
        d2.nextFrame(function() {
          if (!state2.propsRef.current.value)
            dispatch({
              type: ActionTypes.GoToOption,
              focus: Focus.First
            });
        });
        break;
      case Keys.ArrowUp:
        event.preventDefault();
        dispatch({
          type: ActionTypes.OpenListbox
        });
        d2.nextFrame(function() {
          if (!state2.propsRef.current.value)
            dispatch({
              type: ActionTypes.GoToOption,
              focus: Focus.Last
            });
        });
        break;
    }
  }, [dispatch, state2, d2]);
  var handleKeyUp = react.exports.useCallback(function(event) {
    switch (event.key) {
      case Keys.Space:
        event.preventDefault();
        break;
    }
  }, []);
  var handleClick = react.exports.useCallback(function(event) {
    if (isDisabledReactIssue7711(event.currentTarget))
      return event.preventDefault();
    if (state2.listboxState === ListboxStates.Open) {
      dispatch({
        type: ActionTypes.CloseListbox
      });
      d2.nextFrame(function() {
        var _state$buttonRef$curr;
        return (_state$buttonRef$curr = state2.buttonRef.current) == null ? void 0 : _state$buttonRef$curr.focus({
          preventScroll: true
        });
      });
    } else {
      event.preventDefault();
      dispatch({
        type: ActionTypes.OpenListbox
      });
    }
  }, [dispatch, d2, state2]);
  var labelledby = useComputed(function() {
    if (!state2.labelRef.current)
      return void 0;
    return [state2.labelRef.current.id, id2].join(" ");
  }, [state2.labelRef.current, id2]);
  var slot = react.exports.useMemo(function() {
    return {
      open: state2.listboxState === ListboxStates.Open,
      disabled: state2.disabled
    };
  }, [state2]);
  var passthroughProps = props;
  var propsWeControl = {
    ref: buttonRef,
    id: id2,
    type: useResolveButtonType(props, state2.buttonRef),
    "aria-haspopup": true,
    "aria-controls": (_state$optionsRef$cur = state2.optionsRef.current) == null ? void 0 : _state$optionsRef$cur.id,
    "aria-expanded": state2.disabled ? void 0 : state2.listboxState === ListboxStates.Open,
    "aria-labelledby": labelledby,
    disabled: state2.disabled,
    onKeyDown: handleKeyDown,
    onKeyUp: handleKeyUp,
    onClick: handleClick
  };
  return render({
    props: _extends({}, passthroughProps, propsWeControl),
    slot,
    defaultTag: DEFAULT_BUTTON_TAG,
    name: "Listbox.Button"
  });
});
var DEFAULT_LABEL_TAG = "label";
function Label(props) {
  var _useListboxContext2 = useListboxContext([Listbox.name, Label.name].join(".")), state2 = _useListboxContext2[0];
  var id2 = "headlessui-listbox-label-" + useId();
  var handleClick = react.exports.useCallback(function() {
    var _state$buttonRef$curr2;
    return (_state$buttonRef$curr2 = state2.buttonRef.current) == null ? void 0 : _state$buttonRef$curr2.focus({
      preventScroll: true
    });
  }, [state2.buttonRef]);
  var slot = react.exports.useMemo(function() {
    return {
      open: state2.listboxState === ListboxStates.Open,
      disabled: state2.disabled
    };
  }, [state2]);
  var propsWeControl = {
    ref: state2.labelRef,
    id: id2,
    onClick: handleClick
  };
  return render({
    props: _extends({}, props, propsWeControl),
    slot,
    defaultTag: DEFAULT_LABEL_TAG,
    name: "Listbox.Label"
  });
}
var DEFAULT_OPTIONS_TAG = "ul";
var OptionsRenderFeatures = Features$1.RenderStrategy | Features$1.Static;
var Options = /* @__PURE__ */ forwardRefWithAs(function Options2(props, ref) {
  var _state$options$state$;
  var _useListboxContext3 = useListboxContext([Listbox.name, Options2.name].join(".")), state2 = _useListboxContext3[0], dispatch = _useListboxContext3[1];
  var optionsRef = useSyncRefs(state2.optionsRef, ref);
  var id2 = "headlessui-listbox-options-" + useId();
  var d2 = useDisposables();
  var searchDisposables = useDisposables();
  var usesOpenClosedState = useOpenClosed();
  var visible = function() {
    if (usesOpenClosedState !== null) {
      return usesOpenClosedState === State.Open;
    }
    return state2.listboxState === ListboxStates.Open;
  }();
  useIsoMorphicEffect(function() {
    var container = state2.optionsRef.current;
    if (!container)
      return;
    if (state2.listboxState !== ListboxStates.Open)
      return;
    if (container === document.activeElement)
      return;
    container.focus({
      preventScroll: true
    });
  }, [state2.listboxState, state2.optionsRef]);
  var handleKeyDown = react.exports.useCallback(function(event) {
    searchDisposables.dispose();
    switch (event.key) {
      case Keys.Space:
        if (state2.searchQuery !== "") {
          event.preventDefault();
          event.stopPropagation();
          return dispatch({
            type: ActionTypes.Search,
            value: event.key
          });
        }
      case Keys.Enter:
        event.preventDefault();
        event.stopPropagation();
        dispatch({
          type: ActionTypes.CloseListbox
        });
        if (state2.activeOptionIndex !== null) {
          var dataRef = state2.options[state2.activeOptionIndex].dataRef;
          state2.propsRef.current.onChange(dataRef.current.value);
        }
        disposables().nextFrame(function() {
          var _state$buttonRef$curr3;
          return (_state$buttonRef$curr3 = state2.buttonRef.current) == null ? void 0 : _state$buttonRef$curr3.focus({
            preventScroll: true
          });
        });
        break;
      case match(state2.orientation, {
        vertical: Keys.ArrowDown,
        horizontal: Keys.ArrowRight
      }):
        event.preventDefault();
        event.stopPropagation();
        return dispatch({
          type: ActionTypes.GoToOption,
          focus: Focus.Next
        });
      case match(state2.orientation, {
        vertical: Keys.ArrowUp,
        horizontal: Keys.ArrowLeft
      }):
        event.preventDefault();
        event.stopPropagation();
        return dispatch({
          type: ActionTypes.GoToOption,
          focus: Focus.Previous
        });
      case Keys.Home:
      case Keys.PageUp:
        event.preventDefault();
        event.stopPropagation();
        return dispatch({
          type: ActionTypes.GoToOption,
          focus: Focus.First
        });
      case Keys.End:
      case Keys.PageDown:
        event.preventDefault();
        event.stopPropagation();
        return dispatch({
          type: ActionTypes.GoToOption,
          focus: Focus.Last
        });
      case Keys.Escape:
        event.preventDefault();
        event.stopPropagation();
        dispatch({
          type: ActionTypes.CloseListbox
        });
        return d2.nextFrame(function() {
          var _state$buttonRef$curr4;
          return (_state$buttonRef$curr4 = state2.buttonRef.current) == null ? void 0 : _state$buttonRef$curr4.focus({
            preventScroll: true
          });
        });
      case Keys.Tab:
        event.preventDefault();
        event.stopPropagation();
        break;
      default:
        if (event.key.length === 1) {
          dispatch({
            type: ActionTypes.Search,
            value: event.key
          });
          searchDisposables.setTimeout(function() {
            return dispatch({
              type: ActionTypes.ClearSearch
            });
          }, 350);
        }
        break;
    }
  }, [d2, dispatch, searchDisposables, state2]);
  var labelledby = useComputed(function() {
    var _state$labelRef$curre, _state$labelRef$curre2, _state$buttonRef$curr5;
    return (_state$labelRef$curre = (_state$labelRef$curre2 = state2.labelRef.current) == null ? void 0 : _state$labelRef$curre2.id) != null ? _state$labelRef$curre : (_state$buttonRef$curr5 = state2.buttonRef.current) == null ? void 0 : _state$buttonRef$curr5.id;
  }, [state2.labelRef.current, state2.buttonRef.current]);
  var slot = react.exports.useMemo(function() {
    return {
      open: state2.listboxState === ListboxStates.Open
    };
  }, [state2]);
  var propsWeControl = {
    "aria-activedescendant": state2.activeOptionIndex === null ? void 0 : (_state$options$state$ = state2.options[state2.activeOptionIndex]) == null ? void 0 : _state$options$state$.id,
    "aria-labelledby": labelledby,
    "aria-orientation": state2.orientation,
    id: id2,
    onKeyDown: handleKeyDown,
    role: "listbox",
    tabIndex: 0,
    ref: optionsRef
  };
  var passthroughProps = props;
  return render({
    props: _extends({}, passthroughProps, propsWeControl),
    slot,
    defaultTag: DEFAULT_OPTIONS_TAG,
    features: OptionsRenderFeatures,
    visible,
    name: "Listbox.Options"
  });
});
var DEFAULT_OPTION_TAG = "li";
function Option(props) {
  var _props$disabled2 = props.disabled, disabled = _props$disabled2 === void 0 ? false : _props$disabled2, value = props.value, passthroughProps = _objectWithoutPropertiesLoose(props, ["disabled", "value"]);
  var _useListboxContext4 = useListboxContext([Listbox.name, Option.name].join(".")), state2 = _useListboxContext4[0], dispatch = _useListboxContext4[1];
  var id2 = "headlessui-listbox-option-" + useId();
  var active = state2.activeOptionIndex !== null ? state2.options[state2.activeOptionIndex].id === id2 : false;
  var selected = state2.propsRef.current.value === value;
  var bag = react.exports.useRef({
    disabled,
    value
  });
  useIsoMorphicEffect(function() {
    bag.current.disabled = disabled;
  }, [bag, disabled]);
  useIsoMorphicEffect(function() {
    bag.current.value = value;
  }, [bag, value]);
  useIsoMorphicEffect(function() {
    var _document$getElementB, _document$getElementB2;
    bag.current.textValue = (_document$getElementB = document.getElementById(id2)) == null ? void 0 : (_document$getElementB2 = _document$getElementB.textContent) == null ? void 0 : _document$getElementB2.toLowerCase();
  }, [bag, id2]);
  var select = react.exports.useCallback(function() {
    return state2.propsRef.current.onChange(value);
  }, [state2.propsRef, value]);
  useIsoMorphicEffect(function() {
    dispatch({
      type: ActionTypes.RegisterOption,
      id: id2,
      dataRef: bag
    });
    return function() {
      return dispatch({
        type: ActionTypes.UnregisterOption,
        id: id2
      });
    };
  }, [bag, id2]);
  useIsoMorphicEffect(function() {
    var _document$getElementB3;
    if (state2.listboxState !== ListboxStates.Open)
      return;
    if (!selected)
      return;
    dispatch({
      type: ActionTypes.GoToOption,
      focus: Focus.Specific,
      id: id2
    });
    (_document$getElementB3 = document.getElementById(id2)) == null ? void 0 : _document$getElementB3.focus == null ? void 0 : _document$getElementB3.focus();
  }, [state2.listboxState]);
  useIsoMorphicEffect(function() {
    if (state2.listboxState !== ListboxStates.Open)
      return;
    if (!active)
      return;
    var d2 = disposables();
    d2.nextFrame(function() {
      var _document$getElementB4;
      return (_document$getElementB4 = document.getElementById(id2)) == null ? void 0 : _document$getElementB4.scrollIntoView == null ? void 0 : _document$getElementB4.scrollIntoView({
        block: "nearest"
      });
    });
    return d2.dispose;
  }, [id2, active, state2.listboxState]);
  var handleClick = react.exports.useCallback(function(event) {
    if (disabled)
      return event.preventDefault();
    select();
    dispatch({
      type: ActionTypes.CloseListbox
    });
    disposables().nextFrame(function() {
      var _state$buttonRef$curr6;
      return (_state$buttonRef$curr6 = state2.buttonRef.current) == null ? void 0 : _state$buttonRef$curr6.focus({
        preventScroll: true
      });
    });
  }, [dispatch, state2.buttonRef, disabled, select]);
  var handleFocus = react.exports.useCallback(function() {
    if (disabled)
      return dispatch({
        type: ActionTypes.GoToOption,
        focus: Focus.Nothing
      });
    dispatch({
      type: ActionTypes.GoToOption,
      focus: Focus.Specific,
      id: id2
    });
  }, [disabled, id2, dispatch]);
  var handleMove = react.exports.useCallback(function() {
    if (disabled)
      return;
    if (active)
      return;
    dispatch({
      type: ActionTypes.GoToOption,
      focus: Focus.Specific,
      id: id2
    });
  }, [disabled, active, id2, dispatch]);
  var handleLeave = react.exports.useCallback(function() {
    if (disabled)
      return;
    if (!active)
      return;
    dispatch({
      type: ActionTypes.GoToOption,
      focus: Focus.Nothing
    });
  }, [disabled, active, dispatch]);
  var slot = react.exports.useMemo(function() {
    return {
      active,
      selected,
      disabled
    };
  }, [active, selected, disabled]);
  var propsWeControl = {
    id: id2,
    role: "option",
    tabIndex: disabled === true ? void 0 : -1,
    "aria-disabled": disabled === true ? true : void 0,
    "aria-selected": selected === true ? true : void 0,
    disabled: void 0,
    onClick: handleClick,
    onFocus: handleFocus,
    onPointerMove: handleMove,
    onMouseMove: handleMove,
    onPointerLeave: handleLeave,
    onMouseLeave: handleLeave
  };
  return render({
    props: _extends({}, passthroughProps, propsWeControl),
    slot,
    defaultTag: DEFAULT_OPTION_TAG,
    name: "Listbox.Option"
  });
}
Listbox.Button = Button$2;
Listbox.Label = Label;
Listbox.Options = Options;
Listbox.Option = Option;
function CurrencySelector$1() {
  const countries = useAvailableCountries();
  const [selectedCountry, setSelectedCountry] = useCountry();
  const setCountry = react.exports.useCallback((isoCode) => {
    setSelectedCountry(countries.find((country) => country.isoCode === isoCode));
  }, [countries, setSelectedCountry]);
  return /* @__PURE__ */ jsx("div", {
    className: "hidden lg:block",
    children: /* @__PURE__ */ jsx(Listbox, {
      onChange: setCountry,
      children: ({
        open
      }) => /* @__PURE__ */ jsxs(Fragment, {
        children: [/* @__PURE__ */ jsxs(Listbox.Button, {
          className: "font-medium text-sm h-8 p-2 flex items-center",
          children: [/* @__PURE__ */ jsx("span", {
            className: "mr-4",
            children: selectedCountry.currency.isoCode
          }), /* @__PURE__ */ jsx(ArrowIcon$2, {
            isOpen: open
          })]
        }), /* @__PURE__ */ jsx(Listbox.Options, {
          className: "absolute z-10 mt-2",
          children: /* @__PURE__ */ jsxs("div", {
            className: "bg-white p-4 rounded-lg drop-shadow-2xl",
            children: [/* @__PURE__ */ jsx(Listbox.Option, {
              disabled: true,
              className: "p-2 text-md text-left font-medium uppercase",
              children: "Currency"
            }), countries.map((country) => {
              const isSelected = country.isoCode === selectedCountry.isoCode;
              return /* @__PURE__ */ jsx(Listbox.Option, {
                value: country.isoCode,
                children: ({
                  active
                }) => /* @__PURE__ */ jsxs("div", {
                  className: `w-36 py-2 px-3 flex justify-between items-center text-left cursor-pointer rounded
                          ${active ? "bg-gray-200" : null}`,
                  children: [country.currency.isoCode, isSelected ? /* @__PURE__ */ jsx(CheckIcon$1, {}) : null]
                })
              }, country.isoCode);
            })]
          })
        })]
      })
    })
  });
}
function CheckIcon$1() {
  return /* @__PURE__ */ jsx("svg", {
    width: "20",
    height: "20",
    viewBox: "0 0 20 20",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    "aria-hidden": "true",
    children: /* @__PURE__ */ jsx("path", {
      d: "M7 10L9 12L13 8M19 10C19 14.9706 14.9706 19 10 19C5.02944 19 1 14.9706 1 10C1 5.02944 5.02944 1 10 1C14.9706 1 19 5.02944 19 10Z",
      stroke: "#354CF6",
      strokeWidth: "2",
      strokeLinecap: "round",
      strokeLinejoin: "round"
    })
  });
}
function ArrowIcon$2({
  isOpen
}) {
  return /* @__PURE__ */ jsx("svg", {
    className: `transition-transform duration-300 ${isOpen ? "rotate-180" : null}`,
    "aria-hidden": "true",
    width: "10",
    height: "6",
    viewBox: "0 0 10 6",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: /* @__PURE__ */ jsx("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M0.292893 0.292893C0.683416 -0.097631 1.31658 -0.097631 1.7071 0.292893L4.99999 3.58579L8.29288 0.292893C8.6834 -0.0976311 9.31657 -0.0976311 9.70709 0.292893C10.0976 0.683417 10.0976 1.31658 9.70709 1.70711L5.7071 5.70711C5.31657 6.09763 4.68341 6.09763 4.29289 5.70711L0.292893 1.70711C-0.0976309 1.31658 -0.0976309 0.683417 0.292893 0.292893Z",
      fill: "#374151"
    })
  });
}
var CurrencySelector = wrapInClientMarker({
  name: "CurrencySelector",
  id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/src/components/CurrencySelector.client.jsx",
  component: CurrencySelector$1,
  named: false
});
const CheckIcon = wrapInClientMarker({
  name: "CheckIcon",
  id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/src/components/CurrencySelector.client.jsx",
  component: CheckIcon$1,
  named: true
});
const ArrowIcon$1 = wrapInClientMarker({
  name: "ArrowIcon",
  id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/src/components/CurrencySelector.client.jsx",
  component: ArrowIcon$2,
  named: true
});
function Navigation$1({
  collections
}) {
  return /* @__PURE__ */ jsx("nav", {
    className: "hidden lg:block text-center",
    children: /* @__PURE__ */ jsx("ul", {
      className: "md:flex items-center justify-center",
      children: collections.map((collection) => /* @__PURE__ */ jsx("li", {
        children: /* @__PURE__ */ jsx(Link, {
          to: `/collections/${collection.handle}`,
          className: "block p-4 hover:opacity-80 text-pink-600",
          children: collection.title
        })
      }, collection.id))
    })
  });
}
var Navigation = wrapInClientMarker({
  name: "Navigation",
  id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/src/components/Navigation.client.jsx",
  component: Navigation$1,
  named: false
});
function MobileCurrencySelector$1() {
  const countries = useAvailableCountries();
  const [selectedCountry, setSelectedCountry] = useCountry();
  const setCountry = react.exports.useCallback((isoCode) => {
    setSelectedCountry(countries.find((country) => country.isoCode === isoCode));
  }, [countries, setSelectedCountry]);
  return /* @__PURE__ */ jsx("div", {
    className: "mt-8 rounded border border-gray-200 w-full",
    children: /* @__PURE__ */ jsx(Listbox, {
      onChange: setCountry,
      children: ({
        open
      }) => /* @__PURE__ */ jsxs(Fragment, {
        children: [/* @__PURE__ */ jsxs(Listbox.Button, {
          className: "w-full flex justify-between text-sm items-center py-5 px-7",
          children: [selectedCountry.currency.isoCode, /* @__PURE__ */ jsx(ArrowIcon$1, {
            isOpen: open
          })]
        }), /* @__PURE__ */ jsxs(Listbox.Options, {
          className: "w-full px-3 pb-2 text-lg",
          children: [/* @__PURE__ */ jsx(Listbox.Option, {
            disabled: true,
            className: "font-medium px-4 pb-4 w-full text-left uppercase",
            children: "Currency"
          }), countries.map((country) => {
            const isSelected = country.isoCode === selectedCountry.isoCode;
            return /* @__PURE__ */ jsx(Listbox.Option, {
              value: country.isoCode,
              children: ({
                active
              }) => /* @__PURE__ */ jsxs("div", {
                className: `py-2 px-4 rounded flex justify-between items-center text-left w-full cursor-pointer ${active ? "bg-gray-100" : null}`,
                children: [country.currency.isoCode, isSelected ? /* @__PURE__ */ jsx(CheckIcon, {}) : null]
              })
            }, country.isoCode);
          })]
        })]
      })
    })
  });
}
var MobileCurrencySelector = wrapInClientMarker({
  name: "MobileCurrencySelector",
  id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/src/components/MobileCurrencySelector.client.jsx",
  component: MobileCurrencySelector$1,
  named: false
});
function OpenIcon() {
  return /* @__PURE__ */ jsxs("svg", {
    width: "24",
    height: "20",
    viewBox: "0 0 24 20",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: [/* @__PURE__ */ jsx("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M0.800049 1.9999C0.800049 1.11625 1.51639 0.399902 2.40005 0.399902H21.6C22.4837 0.399902 23.2001 1.11625 23.2001 1.9999C23.2001 2.88356 22.4837 3.5999 21.6 3.5999H2.40005C1.51639 3.5999 0.800049 2.88356 0.800049 1.9999Z",
      fill: "black"
    }), /* @__PURE__ */ jsx("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M0.800049 9.9999C0.800049 9.11625 1.51639 8.3999 2.40005 8.3999H21.6C22.4837 8.3999 23.2001 9.11625 23.2001 9.9999C23.2001 10.8836 22.4837 11.5999 21.6 11.5999H2.40005C1.51639 11.5999 0.800049 10.8836 0.800049 9.9999Z",
      fill: "black"
    }), /* @__PURE__ */ jsx("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M0.800049 17.9999C0.800049 17.1162 1.51639 16.3999 2.40005 16.3999H21.6C22.4837 16.3999 23.2001 17.1162 23.2001 17.9999C23.2001 18.8836 22.4837 19.5999 21.6 19.5999H2.40005C1.51639 19.5999 0.800049 18.8836 0.800049 17.9999Z",
      fill: "black"
    })]
  });
}
function MobileNavigation$1({
  collections,
  isOpen,
  setIsOpen
}) {
  const OpenFocusTrap = isOpen ? FocusTrap : react.exports.Fragment;
  return /* @__PURE__ */ jsx("div", {
    className: "lg:hidden",
    children: /* @__PURE__ */ jsxs(OpenFocusTrap, {
      children: [/* @__PURE__ */ jsx("button", {
        type: "button",
        className: "flex justify-center items-center w-7 h-full",
        onClick: () => setIsOpen((previousIsOpen) => !previousIsOpen),
        children: isOpen ? /* @__PURE__ */ jsx(CloseIcon, {}) : /* @__PURE__ */ jsx(OpenIcon, {})
      }), isOpen ? /* @__PURE__ */ jsxs("div", {
        className: "absolute -left-0 top-20 w-full h-screen z-10 bg-pink-100 px-4 md:px-12 py-7",
        children: [/* @__PURE__ */ jsx("ul", {
          children: collections.map((collection) => /* @__PURE__ */ jsx("li", {
            className: "border-b border-gray-300",
            children: /* @__PURE__ */ jsxs(Link, {
              className: "group py-5 text-gray-900 flex items-center justify-between",
              to: `/collections/${collection.handle}`,
              onClick: () => setIsOpen(false),
              children: [collection.title, /* @__PURE__ */ jsx(ArrowRightIcon, {
                className: "hidden group-hover:block"
              })]
            })
          }, collection.id))
        }), /* @__PURE__ */ jsx(MobileCurrencySelector, {})]
      }) : null]
    })
  });
}
function CloseIcon() {
  return /* @__PURE__ */ jsx("svg", {
    width: "18",
    height: "18",
    viewBox: "0 0 18 18",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: /* @__PURE__ */ jsx("path", {
      d: "M1 17L17 1M1 1L17 17",
      stroke: "black",
      strokeWidth: "2",
      strokeLinecap: "round",
      strokeLinejoin: "round"
    })
  });
}
function ArrowRightIcon({
  className
}) {
  return /* @__PURE__ */ jsx("svg", {
    className,
    width: "7",
    height: "12",
    viewBox: "0 0 7 12",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: /* @__PURE__ */ jsx("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M0.999762 12C0.743762 12 0.487762 11.902 0.292762 11.707C-0.0982383 11.316 -0.0982383 10.684 0.292762 10.293L4.58576 6.00001L0.292762 1.70701C-0.0982383 1.31601 -0.0982383 0.684006 0.292762 0.293006C0.683762 -0.0979941 1.31576 -0.0979941 1.70676 0.293006L6.70676 5.29301C7.09776 5.68401 7.09776 6.31601 6.70676 6.70701L1.70676 11.707C1.51176 11.902 1.25576 12 0.999762 12Z",
      fill: "black"
    })
  });
}
var MobileNavigation = wrapInClientMarker({
  name: "MobileNavigation",
  id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/src/components/MobileNavigation.client.jsx",
  component: MobileNavigation$1,
  named: false
});
function Header$1({
  collections,
  storeName
}) {
  const [isMobileNavOpen, setIsMobileNavOpen] = react.exports.useState(false);
  return /* @__PURE__ */ jsx("header", {
    className: "h-20 lg:h-32",
    role: "banner",
    children: /* @__PURE__ */ jsx("div", {
      className: `fixed z-20 h-20 lg:h-32 w-full border-b border-gray-200 px-6 md:px-8 md:py-6 lg:pt-8 lg:pb-0 mx-auto bg-white ${isMobileNavOpen ? "" : "bg-opacity-95"}`,
      children: /* @__PURE__ */ jsxs("div", {
        className: "h-full flex lg:flex-col place-content-between",
        children: [/* @__PURE__ */ jsxs("div", {
          className: "text-center w-full flex justify-between items-center",
          children: [/* @__PURE__ */ jsx(CurrencySelector, {}), /* @__PURE__ */ jsx(MobileNavigation, {
            collections,
            isOpen: isMobileNavOpen,
            setIsOpen: setIsMobileNavOpen
          }), /* @__PURE__ */ jsx(Link, {
            className: "font-black text-3xl tracking-widest",
            to: "/",
            children: storeName
          }), /* @__PURE__ */ jsx(CartToggle, {
            handleClick: () => {
              if (isMobileNavOpen)
                setIsMobileNavOpen(false);
            }
          })]
        }), /* @__PURE__ */ jsx(Navigation, {
          collections,
          storeName
        })]
      })
    })
  });
}
var Header = wrapInClientMarker({
  name: "Header",
  id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/src/components/Header.client.jsx",
  component: Header$1,
  named: false
});
var twitter = "/assets/twitter.237e9bb6.png";
var insta = "/assets/insta.fc2850f7.png";
function Footer({
  collection,
  product
}) {
  return /* @__PURE__ */ jsxs("footer", {
    role: "contentinfo",
    children: [/* @__PURE__ */ jsx("div", {
      className: "relative bg-white border-t border-b border-black border-opacity-5",
      children: /* @__PURE__ */ jsx("div", {
        className: "mx-auto max-w-7xl px-4 py-14 md:px-8 grid grid-cols-1 md:grid-cols-3 gap-12"
      })
    }), /* @__PURE__ */ jsxs("div", {
      className: "py-6 px-4 md:px-8 bg-purple-50",
      children: [/* @__PURE__ */ jsx("div", {
        className: "box",
        children: /* @__PURE__ */ jsx("a", {
          href: "https://twitter.com/EnemaTreasure",
          children: /* @__PURE__ */ jsx("img", {
            src: twitter,
            alt: "logo"
          })
        })
      }), /* @__PURE__ */ jsx("div", {
        className: "box",
        children: /* @__PURE__ */ jsx("a", {
          href: "https://www.instagram.com/bensmith.io/?hl=en",
          children: /* @__PURE__ */ jsx("img", {
            src: insta,
            alt: "logo"
          })
        })
      }), /* @__PURE__ */ jsx("p", {
        className: "text-gray-400",
        children: "\xA9 2021 cottonsmith"
      })]
    })]
  });
}
const DEFAULT_CLASSES = "block m-0 w-full items-center justify-center uppercase font-medium text-center px-6 py-4 rounded disabled:border-gray-300 disabled:bg-gray-300 disabled:cursor-not-allowed";
const VARIANT_CLASSES = {
  primary: "text-gray-700 bg-purple-50 active:bg-purple-200",
  secondary: "bg-pink-200 active:bg-pink-300 border border-black"
};
const BUTTON_PRIMARY_CLASSES = `${DEFAULT_CLASSES} ${VARIANT_CLASSES.primary}`;
const BUTTON_SECONDARY_CLASSES = `${DEFAULT_CLASSES} ${VARIANT_CLASSES.secondary}`;
const ExternalIcon = () => /* @__PURE__ */ jsxs("svg", {
  className: "fill-current text-white ml-3",
  width: "15",
  height: "14",
  viewBox: "0 0 15 14",
  xmlns: "http://www.w3.org/2000/svg",
  children: [/* @__PURE__ */ jsx("path", {
    d: "M8.11963 0.000976562C7.56734 0.000976562 7.11963 0.448692 7.11963 1.00098C7.11963 1.55326 7.56734 2.00098 8.11963 2.00098H10.7054L4.41252 8.29387C4.022 8.68439 4.022 9.31756 4.41252 9.70808C4.80305 10.0986 5.43621 10.0986 5.82674 9.70808L12.1196 3.41519V6.00098C12.1196 6.55326 12.5673 7.00098 13.1196 7.00098C13.6719 7.00098 14.1196 6.55326 14.1196 6.00098V1.00098C14.1196 0.448692 13.6719 0.000976562 13.1196 0.000976562H8.11963Z"
  }), /* @__PURE__ */ jsx("path", {
    d: "M2.11963 2.00098C1.01506 2.00098 0.119629 2.89641 0.119629 4.00098V12.001C0.119629 13.1055 1.01506 14.001 2.11963 14.001H10.1196C11.2242 14.001 12.1196 13.1055 12.1196 12.001V9.00098C12.1196 8.44869 11.6719 8.00098 11.1196 8.00098C10.5673 8.00098 10.1196 8.44869 10.1196 9.00098V12.001H2.11963V4.00098L5.11963 4.00098C5.67191 4.00098 6.11963 3.55326 6.11963 3.00098C6.11963 2.44869 5.67191 2.00098 5.11963 2.00098H2.11963Z"
  })]
});
function Button$1({
  className,
  label,
  handleClick,
  url,
  variant = "primary",
  passthroughProps
}) {
  const classes = `${DEFAULT_CLASSES} ${VARIANT_CLASSES[variant]} ${className}`;
  const isExternal = url ? url.indexOf("://") > 0 || url.indexOf("//") === 0 : false;
  if (isExternal) {
    return /* @__PURE__ */ jsxs("a", __spreadProps(__spreadValues({
      href: url,
      className: classes
    }, passthroughProps), {
      children: [label, /* @__PURE__ */ jsx(ExternalIcon, {})]
    }));
  }
  if (handleClick) {
    return /* @__PURE__ */ jsx("button", {
      className: classes,
      onClick: handleClick,
      type: "button",
      children: label
    });
  }
  return /* @__PURE__ */ jsx(Link, __spreadProps(__spreadValues({
    to: url,
    className: classes
  }, passthroughProps), {
    children: label
  }));
}
var Button = wrapInClientMarker({
  name: "Button",
  id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/src/components/Button.client.jsx",
  component: Button$1,
  named: false
});
function Cart$1() {
  const {
    isCartOpen,
    closeCart
  } = useCartUI();
  const itemCount = useCartLinesTotalQuantity();
  return /* @__PURE__ */ jsxs(Dialog, {
    open: isCartOpen,
    onClose: closeCart,
    children: [/* @__PURE__ */ jsx(Dialog.Overlay, {
      className: "fixed z-20 inset-0 bg-gray-50 opacity-75"
    }), /* @__PURE__ */ jsxs("div", {
      className: `absolute flex flex-col md:block z-20 top-0 left-0 right-0 bottom-0 md:top-7 h-full md:left-auto md:right-7 md:bottom-auto md:h-auto md:max-h-[calc(100vh-56px)] bg-gray-50 w-full md:w-[470px] rounded-b-lg shadow-2xl ${itemCount === 0 ? "overflow-hidden" : "overflow-y-scroll"}`,
      children: [/* @__PURE__ */ jsx(CartHeader, {}), itemCount === 0 ? /* @__PURE__ */ jsx(CartEmpty, {}) : /* @__PURE__ */ jsxs(Fragment, {
        children: [/* @__PURE__ */ jsx(CartItems, {}), /* @__PURE__ */ jsx(CartFooter, {})]
      })]
    })]
  });
}
function CartHeader() {
  const {
    closeCart
  } = useCartUI();
  return /* @__PURE__ */ jsxs("header", {
    className: "border-b border-gray-300 bg-white py-3 px-6 flex justify-between items-center sticky top-0",
    children: [/* @__PURE__ */ jsxs("button", {
      type: "button",
      onClick: closeCart,
      children: [/* @__PURE__ */ jsx(ArrowIcon, {}), /* @__PURE__ */ jsx("span", {
        className: "sr-only",
        children: "Close cart"
      })]
    }), /* @__PURE__ */ jsx("span", {
      className: "text-xs text-gray-500",
      children: "Free shipping on orders over $50"
    }), /* @__PURE__ */ jsx(CartIconWithItems, {})]
  });
}
function CartItems() {
  return /* @__PURE__ */ jsxs("div", {
    className: "px-7 flex-grow",
    role: "table",
    "aria-label": "Shopping cart",
    children: [/* @__PURE__ */ jsxs("div", {
      role: "row",
      className: "sr-only",
      children: [/* @__PURE__ */ jsx("div", {
        role: "columnheader",
        children: "Product image"
      }), /* @__PURE__ */ jsx("div", {
        role: "columnheader",
        children: "Product details"
      }), /* @__PURE__ */ jsx("div", {
        role: "columnheader",
        children: "Price"
      })]
    }), /* @__PURE__ */ jsx(CartLines, {
      children: ({
        merchandise
      }) => /* @__PURE__ */ jsxs("div", {
        role: "row",
        className: "flex py-7 border-b last:border-b-0 border-gray-300 text-gray-900",
        children: [/* @__PURE__ */ jsx("div", {
          role: "cell",
          className: "flex-shrink-0 mr-7",
          children: /* @__PURE__ */ jsx(Link, {
            to: `products/${merchandise.product.handle}`,
            children: /* @__PURE__ */ jsx(CartLine.Image, {
              className: "bg-white border border-black border-opacity-5 rounded-xl ",
              options: {
                width: 98,
                height: 98,
                crop: "center"
              }
            })
          })
        }), /* @__PURE__ */ jsxs("div", {
          role: "cell",
          className: "flex flex-col w-full justify-between items-start flex-grow-1 mr-4",
          children: [/* @__PURE__ */ jsx(Link, {
            to: `products/${merchandise.product.handle}`,
            className: "hover:underline",
            children: /* @__PURE__ */ jsx(CartLine.ProductTitle, {
              className: "text-lg font-medium"
            })
          }), /* @__PURE__ */ jsx(CartLine.SelectedOptions, {
            as: "ul",
            className: "text-xs space-y-1",
            children: ({
              name,
              value
            }) => /* @__PURE__ */ jsxs(Fragment, {
              children: [name, ": ", value]
            })
          }), /* @__PURE__ */ jsx(CartLine.Attributes, {
            as: "ul",
            className: "text-sm space-y-1",
            children: ({
              key,
              value
            }) => /* @__PURE__ */ jsxs(Fragment, {
              children: [key, ": ", value]
            })
          }), /* @__PURE__ */ jsx(CartItemQuantity, {})]
        }), /* @__PURE__ */ jsxs("div", {
          role: "cell",
          className: "flex flex-col justify-between items-end",
          children: [/* @__PURE__ */ jsx(CartLine.QuantityAdjustButton, {
            adjust: "remove",
            "aria-label": "Remove from cart",
            className: "disabled:pointer-events-all disabled:cursor-wait",
            children: /* @__PURE__ */ jsx("svg", {
              xmlns: "http://www.w3.org/2000/svg",
              className: "h-5 w-5",
              viewBox: "0 0 20 20",
              fill: "currentColor",
              children: /* @__PURE__ */ jsx("path", {
                fillRule: "evenodd",
                d: "M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z",
                clipRule: "evenodd"
              })
            })
          }), /* @__PURE__ */ jsx(CartLine.Price, {
            className: "text-lg"
          })]
        })]
      })
    })]
  });
}
function CartItemQuantity() {
  return /* @__PURE__ */ jsxs("div", {
    className: "flex border rounded border-gray-300 items-center overflow-auto mt-2",
    children: [/* @__PURE__ */ jsx(CartLine.QuantityAdjustButton, {
      adjust: "decrease",
      "aria-label": "Decrease quantity",
      className: "p-2 disabled:pointer-events-all disabled:cursor-wait",
      children: /* @__PURE__ */ jsx("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        className: "h-5 w-5 text-gray-400",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        children: /* @__PURE__ */ jsx("path", {
          fillRule: "evenodd",
          d: "M5 10a1 1 0 011-1h8a1 1 0 110 2H6a1 1 0 01-1-1z",
          clipRule: "evenodd"
        })
      })
    }), /* @__PURE__ */ jsx(CartLine.Quantity, {
      as: "div",
      className: "p-2 text-gray-900 text-xs text-center"
    }), /* @__PURE__ */ jsx(CartLine.QuantityAdjustButton, {
      adjust: "increase",
      "aria-label": "Increase quantity",
      className: "p-2 text-gray-400 disabled:pointer-events-all disabled:cursor-wait",
      children: /* @__PURE__ */ jsx("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        className: "h-5 w-5",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        children: /* @__PURE__ */ jsx("path", {
          fillRule: "evenodd",
          d: "M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z",
          clipRule: "evenodd"
        })
      })
    })]
  });
}
function CartFooter() {
  return /* @__PURE__ */ jsx("footer", {
    className: "bottom-0 sticky pb-8 border-t border-black border-opacity-5",
    children: /* @__PURE__ */ jsxs("div", {
      className: "relative h-60 bg-white text-gray-900 p-7",
      children: [/* @__PURE__ */ jsxs("div", {
        role: "table",
        "aria-label": "Cost summary",
        children: [/* @__PURE__ */ jsxs("div", {
          role: "row",
          className: "flex justify-between",
          children: [/* @__PURE__ */ jsx("span", {
            className: "font-semibold",
            role: "rowheader",
            children: "Subtotal"
          }), /* @__PURE__ */ jsx(CartEstimatedCost, {
            amountType: "subtotal",
            role: "cell",
            className: "text-right "
          })]
        }), /* @__PURE__ */ jsxs("div", {
          role: "row",
          className: "flex justify-between mt-2",
          children: [/* @__PURE__ */ jsx("span", {
            className: "font-semibold",
            role: "rowheader",
            children: "Shipping"
          }), /* @__PURE__ */ jsx("span", {
            role: "cell",
            className: "uppercase",
            children: "Free"
          })]
        })]
      }), /* @__PURE__ */ jsx(CartShopPayButton, {
        className: "flex my-4 justify-center w-full bg-[#5a31f4] py-2 rounded-md"
      }), /* @__PURE__ */ jsx(CartCheckoutButton, {
        className: BUTTON_PRIMARY_CLASSES,
        children: "Checkout"
      })]
    })
  });
}
function CartEmpty() {
  const {
    closeCart
  } = useCartUI();
  return /* @__PURE__ */ jsxs("div", {
    className: "p-7 flex flex-col",
    children: [/* @__PURE__ */ jsx("p", {
      className: "mb-4 text-lg text-gray-500 text-center",
      children: "Your cart is empty"
    }), /* @__PURE__ */ jsx("button", {
      type: "button",
      onClick: closeCart,
      className: BUTTON_PRIMARY_CLASSES,
      children: "Continue Shopping"
    })]
  });
}
function ArrowIcon() {
  return /* @__PURE__ */ jsx("svg", {
    width: "20",
    height: "17",
    viewBox: "0 0 20 17",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: /* @__PURE__ */ jsx("path", {
      d: "M12 1.5L19 8.5M19 8.5L12 15.5M19 8.5L1 8.5",
      stroke: "black",
      strokeWidth: "2",
      strokeLinecap: "round",
      strokeLinejoin: "round"
    })
  });
}
var Cart = wrapInClientMarker({
  name: "Cart",
  id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/src/components/Cart.client.jsx",
  component: Cart$1,
  named: false
});
function Layout({
  children,
  hero
}) {
  const {
    data
  } = useShopQuery({
    query: QUERY$8,
    variables: {
      numCollections: 3
    },
    cache: {
      maxAge: 60,
      staleWhileRevalidate: 60 * 10
    }
  });
  const {
    isCartOpen,
    closeCart
  } = useCartUI();
  const collections = data ? flattenConnection(data.collections) : null;
  const products = data ? flattenConnection(data.products) : null;
  const storeName = data ? data.shop.name : "";
  return /* @__PURE__ */ jsxs(LocalizationProvider, {
    children: [/* @__PURE__ */ jsx("div", {
      className: "absolute top-0 left-0",
      children: /* @__PURE__ */ jsx("a", {
        href: "#mainContent",
        className: "p-4 focus:block sr-only focus:not-sr-only",
        children: "Skip to content"
      })
    }), /* @__PURE__ */ jsxs("div", {
      className: "min-h-screen max-w-screen text-pink-600",
      children: [/* @__PURE__ */ jsx(Header, {
        collections,
        storeName
      }), /* @__PURE__ */ jsxs("div", {
        children: [/* @__PURE__ */ jsx("div", {
          className: `z-50 fixed top-0 bottom-0 left-0 right-0 bg-black transition-opacity duration-400 ${isCartOpen ? "opacity-20" : "opacity-0 pointer-events-none"}`,
          onClick: isCartOpen ? closeCart : null
        }), /* @__PURE__ */ jsx(Cart, {})]
      }), /* @__PURE__ */ jsxs("main", {
        role: "main",
        id: "mainContent",
        className: "relative bg-pink-50",
        children: [hero, /* @__PURE__ */ jsx("div", {
          className: "mx-auto max-w-7xl p-4 md:py-5 md:px-8",
          children
        })]
      }), /* @__PURE__ */ jsx(Footer, {
        collection: collections[0],
        product: products[0]
      })]
    })]
  });
}
const QUERY$8 = gql$1`
  query indexContent($numCollections: Int!) {
    shop {
      name
    }
    collections(first: $numCollections) {
      edges {
        node {
          description
          handle
          id
          title
          image {
            ...ImageFragment
          }
        }
      }
    }
    products(first: 1) {
      edges {
        node {
          handle
        }
      }
    }
  }
  ${Image.Fragment}
`;
function FeaturedCollection({
  collection
}) {
  return collection ? /* @__PURE__ */ jsxs("div", {
    className: "shadow-xl rounded grid grid-cols-1 lg:grid-cols-2 items-center bg-purple-50 overflow-hidden",
    children: [collection.image ? /* @__PURE__ */ jsx(Image, {
      width: "622",
      height: "465",
      image: collection.image
    }) : null, /* @__PURE__ */ jsxs("div", {
      className: "px-10 py-10 lg:py-0",
      children: [/* @__PURE__ */ jsx("h2", {
        className: "text-pink-600 text-3xl font-bold mb-5",
        children: collection.title
      }), /* @__PURE__ */ jsx("p", {
        className: "text-xl text-gray-500 mb-6",
        children: collection.description
      }), /* @__PURE__ */ jsx(Link, {
        to: `/collections/${collection.handle}`,
        className: "inline-block bg-pink-200 text-gray-900 active:bg-pink-300 border border-black text-lg font-medium rounded-md py-4 px-16 uppercase",
        children: "Shop Collection"
      })]
    })]
  }) : null;
}
function MoneyCompareAtPrice$1({
  money
}) {
  return /* @__PURE__ */ jsx(Money, {
    money,
    children: ({
      amount,
      currencyNarrowSymbol
    }) => /* @__PURE__ */ jsxs("span", {
      className: "line-through text-lg mr-2.5 text-pink-600 ",
      children: [currencyNarrowSymbol, amount]
    })
  });
}
var MoneyCompareAtPrice = wrapInClientMarker({
  name: "MoneyCompareAtPrice",
  id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/src/components/MoneyCompareAtPrice.client.jsx",
  component: MoneyCompareAtPrice$1,
  named: false
});
function MoneyPrice$1({
  money
}) {
  return /* @__PURE__ */ jsx(Money, {
    className: "text-pink-600 text-md font-black",
    money,
    children: ({
      amount,
      currencyNarrowSymbol,
      currencyCode
    }) => /* @__PURE__ */ jsxs(Fragment, {
      children: [currencyNarrowSymbol, amount]
    })
  });
}
var MoneyPrice = wrapInClientMarker({
  name: "MoneyPrice",
  id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/src/components/MoneyPrice.client.jsx",
  component: MoneyPrice$1,
  named: false
});
function ProductCard({
  product
}) {
  const selectedVariant = product.variants.edges[0].node;
  if (selectedVariant == null) {
    return null;
  }
  return /* @__PURE__ */ jsx("div", {
    className: "text-md mb-4 relative ",
    children: /* @__PURE__ */ jsxs(Link, {
      to: `/products/${product.handle}`,
      children: [/* @__PURE__ */ jsxs("div", {
        className: "bg-yellow-50 border-2 border-purple-50 rounded-full mb-2 relative flex items-center justify-center overflow-hidden object-cover h-96",
        children: [selectedVariant.image ? /* @__PURE__ */ jsx(Image, {
          className: "bg-white absolute w-full h-full transition-all duration-600 ease-in-out transform bg-center bg-cover object-center object-contain hover:scale-105",
          image: selectedVariant.image
        }) : null, !(selectedVariant == null ? void 0 : selectedVariant.availableForSale) && /* @__PURE__ */ jsx("div", {
          className: "absolute top-3 left-3 rounded-3xl text-xs bg-black text-white py-3 px-4",
          children: "Out of stock"
        })]
      }), /* @__PURE__ */ jsx("span", {
        className: "text-black font-semibold mb-0.5",
        children: product.title
      }), product.vendor && /* @__PURE__ */ jsx("p", {
        className: "text-gray-900 font-medium text-sm mb-0.5",
        children: product.vendor
      }), /* @__PURE__ */ jsxs("div", {
        className: "flex ",
        children: [selectedVariant.compareAtPriceV2 && /* @__PURE__ */ jsx(MoneyCompareAtPrice, {
          money: selectedVariant.compareAtPriceV2
        }), /* @__PURE__ */ jsx(MoneyPrice, {
          money: selectedVariant.priceV2
        })]
      })]
    })
  });
}
function Welcome() {
  const {
    data
  } = useShopQuery({
    query: QUERY$7
  });
  data ? data.shop.name : "";
  const products = data && flattenConnection(data.products);
  const collections = data && flattenConnection(data.collections);
  products ? products[0].handle : "";
  products && products.length;
  collections[0] ? collections[0].handle : "";
  collections && collections.length;
  return /* @__PURE__ */ jsx("div", {});
}
const QUERY$7 = gql$1`
  query welcomeContent {
    shop {
      name
    }
    products(first: 250) {
      edges {
        node {
          handle
        }
      }
    }
    collections(first: 250) {
      edges {
        node {
          handle
        }
      }
    }
  }
`;
function GradientBackground() {
  return /* @__PURE__ */ jsxs("div", {
    className: "fixed top-0 w-full h-3/5 overflow-hidden",
    children: [/* @__PURE__ */ jsx("div", {
      className: "absolute w-full h-full bg-gradient-to-t from-pink-50 z-10"
    }), /* @__PURE__ */ jsxs("svg", {
      viewBox: "0 0 960 743",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      xmlnsXlink: "http://www.w3.org/1999/xlink",
      className: "filter blur-[30px]",
      "aria-hidden": "true",
      children: [/* @__PURE__ */ jsx("defs", {
        children: /* @__PURE__ */ jsx("path", {
          fill: "#fff",
          d: "M0 0h960v540H0z",
          id: "reuse-0"
        })
      }), /* @__PURE__ */ jsxs("g", {
        clipPath: "url(#a)",
        children: [/* @__PURE__ */ jsx("use", {
          xlinkHref: "#reuse-0"
        }), /* @__PURE__ */ jsx("path", {
          d: "M960 0H0v743h960V0Z",
          fill: "#B190B1"
        }), /* @__PURE__ */ jsx("path", {
          d: "M831 380c200.48 0 363-162.521 363-363s-162.52-363-363-363c-200.479 0-363 162.521-363 363s162.521 363 363 363Z",
          fill: "#FDF8E7"
        }), /* @__PURE__ */ jsx("path", {
          d: "M579 759c200.479 0 363-162.521 363-363S779.479 33 579 33 216 195.521 216 396s162.521 363 363 363Z",
          fill: "#B190B1"
        }), /* @__PURE__ */ jsx("path", {
          d: "M178 691c200.479 0 363-162.521 363-363S378.479-35 178-35c-200.4794 0-363 162.521-363 363s162.5206 363 363 363Z",
          fill: "#FDF8E7"
        }), /* @__PURE__ */ jsx("path", {
          d: "M490 414c200.479 0 363-162.521 363-363S690.479-312 490-312 127-149.479 127 51s162.521 363 363 363Z",
          fill: "#FDF8E7"
        }), /* @__PURE__ */ jsx("path", {
          d: "M354 569c200.479 0 363-162.521 363-363 0-200.47937-162.521-363-363-363S-9 5.52063-9 206c0 200.479 162.521 363 363 363Z",
          fill: "#B190B1"
        }), /* @__PURE__ */ jsx("path", {
          d: "M630 532c200.479 0 363-162.521 363-363 0-200.4794-162.521-363-363-363S267-31.4794 267 169c0 200.479 162.521 363 363 363Z",
          fill: "#B190B1"
        })]
      }), /* @__PURE__ */ jsx("path", {
        fill: "#fff",
        d: "M0 540h960v203H0z"
      }), /* @__PURE__ */ jsx("defs", {
        children: /* @__PURE__ */ jsx("clipPath", {
          id: "a",
          children: /* @__PURE__ */ jsx("use", {
            xlinkHref: "#reuse-0"
          })
        })
      })]
    })]
  });
}
function Index({
  country = {
    isoCode: "US"
  }
}) {
  const {
    data
  } = useShopQuery({
    query: QUERY$6,
    variables: {
      country: country.isoCode
    }
  });
  const collections = data ? flattenConnection(data.collections) : [];
  const featuredProductsCollection = collections[0];
  const featuredProducts = featuredProductsCollection ? flattenConnection(featuredProductsCollection.products) : null;
  const featuredCollection = collections && collections.length > 1 ? collections[1] : collections[0];
  return /* @__PURE__ */ jsx(Layout, {
    hero: /* @__PURE__ */ jsx(GradientBackground, {}),
    children: /* @__PURE__ */ jsxs("div", {
      className: "relative mb-12",
      children: [/* @__PURE__ */ jsx(Welcome, {}), /* @__PURE__ */ jsx("div", {
        className: "bg-white p-12 shadow-xl rounded mb-10",
        children: featuredProductsCollection ? /* @__PURE__ */ jsxs(Fragment, {
          children: [/* @__PURE__ */ jsx("div", {
            className: "flex justify-between items-center mb-8 text-md font-medium",
            children: /* @__PURE__ */ jsx("span", {
              className: "hidden lowercase md:inline-flex ",
              children: /* @__PURE__ */ jsx(Link, {
                to: `/collections/${featuredProductsCollection.handle}`,
                className: "text-pink-600 hover:underline",
                children: "Shop all"
              })
            })
          }), /* @__PURE__ */ jsx("div", {
            className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-8",
            children: featuredProducts.map((product) => /* @__PURE__ */ jsx("div", {
              children: /* @__PURE__ */ jsx(ProductCard, {
                product
              })
            }, product.id))
          }), /* @__PURE__ */ jsx("div", {
            className: "md:hidden text-center",
            children: /* @__PURE__ */ jsx(Link, {
              to: `/collections/${featuredCollection.handle}`,
              className: "text-pink-600",
              children: "Shop all"
            })
          })]
        }) : null
      }), /* @__PURE__ */ jsx(FeaturedCollection, {
        collection: featuredCollection
      })]
    })
  });
}
const QUERY$6 = gql$1`
  query indexContent(
    $country: CountryCode
    $numCollections: Int = 2
    $numProducts: Int = 3
    $numProductMetafields: Int = 0
    $numProductVariants: Int = 250
    $numProductMedia: Int = 1
    $numProductVariantMetafields: Int = 10
    $numProductVariantSellingPlanAllocations: Int = 0
    $numProductSellingPlanGroups: Int = 0
    $numProductSellingPlans: Int = 0
  ) @inContext(country: $country) {
    collections(first: $numCollections) {
      edges {
        node {
          descriptionHtml
          description
          handle
          id
          title
          image {
            ...ImageFragment
          }
          products(first: $numProducts) {
            edges {
              node {
                ...ProductProviderFragment
              }
            }
          }
        }
      }
    }
  }

  ${ProductProviderFragment}
  ${Image.Fragment}
`;
var __glob_10_0 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Index
});
function Sitemap({
  response
}) {
  response.doNotStream();
  const {
    data
  } = useShopQuery({
    query: QUERY$5
  });
  response.headers.set("content-type", "application/xml");
  return response.send(shopSitemap(data));
}
function shopSitemap(data) {
  return `
    <urlset
      xmlns="http://www.sitemaps.org/schemas/sitemap/0.9"
      xmlns:image="http://www.google.com/schemas/sitemap-image/1.1"
    >
      ${flattenConnection(data.products).map((product) => {
    var _a, _b, _c, _d, _e, _f, _g, _h, _i;
    return `
          <url>
            <loc>
              https://hydrogen-preview.myshopify.com/products/${product.handle}
            </loc>
            <lastmod>${product.updatedAt}</lastmod>
            <changefreq>daily</changefreq>
            <image:image>
              <image:loc>
                ${(_d = (_c = (_b = (_a = product == null ? void 0 : product.images) == null ? void 0 : _a.edges) == null ? void 0 : _b[0]) == null ? void 0 : _c.node) == null ? void 0 : _d.url}
              </image:loc>
              <image:title>
                ${(_i = (_h = (_g = (_f = (_e = product == null ? void 0 : product.images) == null ? void 0 : _e.edges) == null ? void 0 : _f[0]) == null ? void 0 : _g.node) == null ? void 0 : _h.altText) != null ? _i : ""}
              </image:title>
              <image:caption />
            </image:image>
          </url>
        `;
  }).join("")}
    </urlset>`;
}
const QUERY$5 = gql$1`
  query Products {
    products(first: 100) {
      edges {
        node {
          updatedAt
          handle
          images(first: 1) {
            edges {
              node {
                url
                altText
              }
            }
          }
        }
      }
    }
  }
`;
var __glob_10_1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Sitemap
});
function LoadMoreProducts$1({
  startingCount
}) {
  const {
    pending,
    serverState,
    setServerState
  } = useServerState();
  return /* @__PURE__ */ jsx("div", {
    className: "flex justify-center h-14",
    children: pending ? /* @__PURE__ */ jsx(SpinnerIcon, {}) : /* @__PURE__ */ jsx("button", {
      type: "button",
      disabled: pending,
      className: `uppercase border-4 bg-white border-black text-black text-center px-5 py-3 font-mono font-bold drop-shadow-lg active:drop-shadow-none hover:bg-black hover:text-white hover:border-white ${pending ? "opacity-50" : void 0}`,
      onClick: () => {
        setServerState("collectionProductCount", serverState.collectionProductCount ? serverState.collectionProductCount + 24 : startingCount + 1);
      },
      children: "Load more"
    })
  });
}
function SpinnerIcon() {
  return /* @__PURE__ */ jsxs("svg", {
    width: "54",
    height: "54",
    viewBox: "0 0 54 54",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    className: "animate-spin",
    children: [/* @__PURE__ */ jsx("path", {
      d: "M43.6663 27.0002C43.6663 36.2049 36.2044 43.6668 26.9997 43.6668C17.7949 43.6668 10.333 36.2049 10.333 27.0002C10.333 17.7954 17.7949 10.3335 26.9997 10.3335C36.2044 10.3335 43.6663 17.7954 43.6663 27.0002ZM13.6663 27.0002C13.6663 34.364 19.6359 40.3335 26.9997 40.3335C34.3635 40.3335 40.333 34.364 40.333 27.0002C40.333 19.6364 34.3635 13.6668 26.9997 13.6668C19.6359 13.6668 13.6663 19.6364 13.6663 27.0002Z",
      fill: "#E6E7EB"
    }), /* @__PURE__ */ jsx("path", {
      d: "M26.9997 10.3332C29.1884 10.3332 31.3556 10.7643 33.3777 11.6018C35.3998 12.4394 37.2371 13.6671 38.7848 15.2147C40.3324 16.7624 41.5601 18.5997 42.3977 20.6218C43.2352 22.6439 43.6663 24.8111 43.6663 26.9998L40.333 26.9998C40.333 25.2489 39.9881 23.5151 39.3181 21.8974C38.648 20.2797 37.6659 18.8099 36.4278 17.5717C35.1896 16.3336 33.7198 15.3515 32.1021 14.6814C30.4844 14.0114 28.7506 13.6665 26.9997 13.6665L26.9997 10.3332Z",
      fill: "black"
    })]
  });
}
var LoadMoreProducts = wrapInClientMarker({
  name: "LoadMoreProducts",
  id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/src/components/LoadMoreProducts.client.jsx",
  component: LoadMoreProducts$1,
  named: false
});
function NotFoundHero() {
  return /* @__PURE__ */ jsx("div", {
    className: "py-10 border-b border-gray-200",
    children: /* @__PURE__ */ jsxs("div", {
      className: "max-w-3xl text-center mx-4 md:mx-auto",
      children: [/* @__PURE__ */ jsx("h1", {
        className: "text-gray-700 text-5xl font-bold mb-4",
        children: "We've lost this page"
      }), /* @__PURE__ */ jsx("p", {
        className: "text-xl m-8 text-gray-500",
        children: "We couldn\u2019t find the page you\u2019re looking for. Try checking the URL or heading back to the home page."
      }), /* @__PURE__ */ jsx(Button, {
        className: "w-full md:mx-auto md:w-96",
        url: "/",
        label: "Take me to the home page"
      })]
    })
  });
}
function NotFound({
  country = {
    isoCode: "US"
  }
}) {
  const {
    data
  } = useShopQuery({
    query: QUERY$4,
    variables: {
      country: country.isoCode,
      numProductMetafields: 0,
      numProductVariants: 250,
      numProductMedia: 0,
      numProductVariantMetafields: 0,
      numProductVariantSellingPlanAllocations: 0,
      numProductSellingPlanGroups: 0,
      numProductSellingPlans: 0
    }
  });
  const products = data ? flattenConnection(data.products) : [];
  return /* @__PURE__ */ jsxs(Layout, {
    children: [/* @__PURE__ */ jsx(NotFoundHero, {}), /* @__PURE__ */ jsxs("div", {
      className: "my-8",
      children: [/* @__PURE__ */ jsx("p", {
        className: "mb-8 text-lg text-black font-medium uppercase",
        children: "Products you might like"
      }), /* @__PURE__ */ jsx("div", {
        className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-16",
        children: products.map((product) => /* @__PURE__ */ jsx("div", {
          children: /* @__PURE__ */ jsx(ProductCard, {
            product
          })
        }, product.id))
      })]
    })]
  });
}
const QUERY$4 = gql$1`
  query NotFoundProductDetails(
    $country: CountryCode
    $numProductMetafields: Int!
    $numProductVariants: Int!
    $numProductMedia: Int!
    $numProductVariantMetafields: Int!
    $numProductVariantSellingPlanAllocations: Int!
    $numProductSellingPlanGroups: Int!
    $numProductSellingPlans: Int!
  ) @inContext(country: $country) {
    products(first: 3) {
      edges {
        node {
          ...ProductProviderFragment
        }
      }
    }
  }

  ${ProductProviderFragment}
`;
function Collection({
  country = {
    isoCode: "US"
  },
  collectionProductCount = 24
}) {
  const {
    handle
  } = useParams();
  const {
    data
  } = useShopQuery({
    query: QUERY$3,
    variables: {
      handle,
      country: country.isoCode,
      numProducts: collectionProductCount
    }
  });
  if ((data == null ? void 0 : data.collection) == null) {
    return /* @__PURE__ */ jsx(NotFound, {});
  }
  const collection = data.collection;
  const products = flattenConnection(collection.products);
  const hasNextPage = data.collection.products.pageInfo.hasNextPage;
  return /* @__PURE__ */ jsxs(Layout, {
    children: [/* @__PURE__ */ jsx("h1", {
      className: "font-bold text-4xl md:text-5xl text-gray-900 mb-6 mt-6",
      children: collection.title
    }), /* @__PURE__ */ jsx(RawHtml, {
      string: collection.descriptionHtml,
      className: "text-2xl"
    }), /* @__PURE__ */ jsxs("p", {
      className: "text-sm text-gray-500 mt-5 mb-5",
      children: [products.length, " ", products.length > 1 ? "products" : "product"]
    }), /* @__PURE__ */ jsx("ul", {
      className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-16",
      children: products.map((product) => /* @__PURE__ */ jsx("li", {
        children: /* @__PURE__ */ jsx(ProductCard, {
          product
        })
      }, product.id))
    }), hasNextPage && /* @__PURE__ */ jsx(LoadMoreProducts, {
      startingCount: collectionProductCount
    })]
  });
}
const QUERY$3 = gql$1`
  query CollectionDetails(
    $handle: String!
    $country: CountryCode
    $numProducts: Int!
    $numProductMetafields: Int = 0
    $numProductVariants: Int = 250
    $numProductMedia: Int = 6
    $numProductVariantMetafields: Int = 0
    $numProductVariantSellingPlanAllocations: Int = 0
    $numProductSellingPlanGroups: Int = 0
    $numProductSellingPlans: Int = 0
  ) @inContext(country: $country) {
    collection(handle: $handle) {
      id
      title
      descriptionHtml

      products(first: $numProducts) {
        edges {
          node {
            vendor
            ...ProductProviderFragment
          }
        }
        pageInfo {
          hasNextPage
        }
      }
    }
  }

  ${MediaFileFragment}
  ${ProductProviderFragment}
`;
var __glob_10_2 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Collection
});
function Page() {
  const {
    handle
  } = useParams();
  const {
    data
  } = useShopQuery({
    query: QUERY$2,
    variables: {
      handle
    }
  });
  if (!data.pageByHandle) {
    return /* @__PURE__ */ jsx(NotFound, {});
  }
  const page = data.pageByHandle;
  return /* @__PURE__ */ jsxs(Layout, {
    children: [/* @__PURE__ */ jsx("h1", {
      className: "text-2xl font-bold",
      children: page.title
    }), /* @__PURE__ */ jsx(RawHtml, {
      string: page.body,
      className: "prose mt-8"
    })]
  });
}
const QUERY$2 = gql$1`
  query PageDetails($handle: String!) {
    pageByHandle(handle: $handle) {
      title
      body
    }
  }
`;
var __glob_10_3 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Page
});
function ProductOptions$1() {
  const {
    options,
    setSelectedOption,
    selectedOptions
  } = useProduct();
  return /* @__PURE__ */ jsx(Fragment, {
    children: options.map(({
      name,
      values
    }) => {
      return /* @__PURE__ */ jsx("fieldset", {
        className: "mt-8",
        children: /* @__PURE__ */ jsx("div", {
          className: "flex items-center flex-wrap gap-4",
          children: values.map((value) => {
            const checked = selectedOptions[name] === value;
            const id2 = `option-${name}-${value}`;
            return /* @__PURE__ */ jsx("label", {
              htmlFor: id2,
              children: /* @__PURE__ */ jsx("input", {
                className: "sr-only",
                type: "radio",
                id: id2,
                name: `option[${name}]`,
                value,
                checked,
                onChange: () => setSelectedOption(name, value)
              })
            }, id2);
          })
        })
      }, name);
    })
  });
}
var ProductOptions = wrapInClientMarker({
  name: "ProductOptions",
  id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/src/components/ProductOptions.client.jsx",
  component: ProductOptions$1,
  named: false
});
function Gallery$1() {
  const {
    media,
    selectedVariant
  } = useProduct();
  const featuredMedia = selectedVariant.image || media[0].image;
  const featuredMediaSrc = featuredMedia.url.split("?")[0];
  const galleryMedia = media.filter((med) => {
    if (med.mediaContentType === MODEL_3D_TYPE) {
      return true;
    }
    return !med.image.url.includes(featuredMediaSrc);
  });
  if (!media.length) {
    return null;
  }
  return /* @__PURE__ */ jsxs("div", {
    className: "gap-4 flex md:grid md:grid-cols-2 overflow-x-scroll no-scrollbar scroll-snap-x scroll-smooth h-[485px] md:h-auto place-content-start",
    tabIndex: "-1",
    children: [/* @__PURE__ */ jsx(SelectedVariantImage, {
      className: "w-[80vw] md:w-full h-full md:h-auto object-cover object-center flex-shrink-0 md:flex-shrink-none snap-start md:col-span-2 border border-gray-200 rounded-lg"
    }), galleryMedia.map((med) => {
      let extraProps = {};
      if (med.mediaContentType === MODEL_3D_TYPE) {
        extraProps = MODEL_3D_PROPS;
      }
      return /* @__PURE__ */ jsx(MediaFile, __spreadValues({
        tabIndex: "0",
        className: "w-[80vw] md:w-auto h-full md:h-auto object-cover object-center transition-all snap-start border border-gray-200 flex-shrink-0 rounded-lg",
        media: med,
        options: {
          height: "485",
          crop: "center"
        }
      }, extraProps), med.id || med.image.id);
    })]
  });
}
const MODEL_3D_TYPE = "MODEL_3D";
const MODEL_3D_PROPS = {
  interactionPromptThreshold: "0"
};
var Gallery = wrapInClientMarker({
  name: "Gallery",
  id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/src/components/Gallery.client.jsx",
  component: Gallery$1,
  named: false
});
function Seo$1({
  shopName,
  product
}) {
  var _a, _b, _c, _d, _e;
  const {
    locale
  } = useShop();
  const lang2 = locale.split(/[-_]/)[0];
  if (product) {
    const variant = product.variants.edges[0].node;
    const price = variant.priceV2;
    const image2 = (_a = product.images.edges[0]) == null ? void 0 : _a.node;
    const title = (_c = (_b = product.seo) == null ? void 0 : _b.title) != null ? _c : product.title;
    const description = (_e = (_d = product.seo) == null ? void 0 : _d.description) != null ? _e : product.description;
    const url = typeof window === "undefined" ? "" : window.location.href;
    return /* @__PURE__ */ jsxs(z, {
      children: [/* @__PURE__ */ jsx("title", {
        children: title
      }), /* @__PURE__ */ jsx("meta", {
        name: "description",
        content: description
      }), url && /* @__PURE__ */ jsx("meta", {
        property: "og:url",
        content: url
      }), /* @__PURE__ */ jsx("meta", {
        property: "og:title",
        content: title
      }), /* @__PURE__ */ jsx("meta", {
        property: "og:type",
        content: "product"
      }), /* @__PURE__ */ jsx("meta", {
        property: "og:description",
        content: description
      }), /* @__PURE__ */ jsx("meta", {
        property: "og:price:amount",
        content: price.amount
      }), /* @__PURE__ */ jsx("meta", {
        property: "og:price:currency",
        content: price.currencyCode
      }), image2 && /* @__PURE__ */ jsx("meta", {
        property: "og:image",
        content: image2.url
      }), image2 && /* @__PURE__ */ jsx("meta", {
        property: "og:image:secure_url",
        content: image2.url
      }), /* @__PURE__ */ jsx("meta", {
        name: "twitter:card",
        content: "summary_large_image"
      }), /* @__PURE__ */ jsx("meta", {
        name: "twitter:title",
        content: title
      }), /* @__PURE__ */ jsx("meta", {
        name: "twitter:description",
        content: description
      }), /* @__PURE__ */ jsx("script", {
        type: "application/ld+json",
        children: `
          {
            "@context": "https://schema.org/",
            "@type": "Product",
            "name": "${product.title}",
            "image": [
              ${image2 ? `"${image2.url}"` : ""}
            ],
            "description": "${description}",
            "brand": {
              "@type": "Brand",
              "name": "${product.vendor}"
            },
            "offers": {
              "@type": "Offer",
              "url": "${url}",
              "priceCurrency": "${price.currencyCode}",
              "price": "${price.amount}",
              "availability": "https://schema.org/${variant.availableForSale ? "InStock" : "OutOfStock"}"
            }
          }
        `
      })]
    });
  }
  return /* @__PURE__ */ jsxs(z, {
    defaultTitle: shopName,
    titleTemplate: `%s - ${shopName}`,
    children: [/* @__PURE__ */ jsx("html", {
      lang: lang2
    }), /* @__PURE__ */ jsx("meta", {
      property: "og:site_name",
      content: shopName
    })]
  });
}
var Seo = wrapInClientMarker({
  name: "Seo",
  id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/src/components/Seo.client.jsx",
  component: Seo$1,
  named: false
});
function ProductPriceMarkup() {
  return /* @__PURE__ */ jsxs("div", {
    className: "flex md:flex-col items-end font-semibold text-lg md:items-start md:mb-4",
    children: [/* @__PURE__ */ jsx(Product$1.SelectedVariant.Price, {
      priceType: "compareAt",
      className: "text-gray-500 line-through text-lg mr-2.5",
      children: ({
        amount,
        currencyNarrowSymbol
      }) => `${currencyNarrowSymbol}${amount}`
    }), /* @__PURE__ */ jsx(Product$1.SelectedVariant.Price, {
      className: "text-gray-900",
      children: ({
        currencyCode,
        amount,
        currencyNarrowSymbol
      }) => `${currencyCode} ${currencyNarrowSymbol}${amount}`
    }), /* @__PURE__ */ jsx(Product$1.SelectedVariant.UnitPrice, {
      className: "text-gray-500",
      children: ({
        currencyCode,
        amount,
        currencyNarrowSymbol,
        referenceUnit
      }) => `${currencyCode} ${currencyNarrowSymbol}${amount}/${referenceUnit}`
    })]
  });
}
function AddToCartMarkup() {
  const {
    selectedVariant
  } = useProduct();
  const isOutOfStock = !selectedVariant.availableForSale;
  return /* @__PURE__ */ jsxs("div", {
    className: "space-y-2 mb-8",
    children: [/* @__PURE__ */ jsx(Product$1.SelectedVariant.AddToCartButton, {
      className: BUTTON_PRIMARY_CLASSES,
      disabled: isOutOfStock,
      children: isOutOfStock ? "Out of stock" : "Add to bag"
    }), isOutOfStock ? /* @__PURE__ */ jsx("p", {
      className: "text-black text-center",
      children: "Available in 2-3 weeks"
    }) : /* @__PURE__ */ jsx(Product$1.SelectedVariant.BuyNowButton, {
      className: BUTTON_SECONDARY_CLASSES,
      children: "Buy it now"
    })]
  });
}
function SizeChart() {
  return /* @__PURE__ */ jsxs(Fragment, {
    children: [/* @__PURE__ */ jsx("h3", {
      className: "text-xl text-black font-semibold mt-8 mb-4",
      id: "size-chart",
      children: "Size Chart"
    }), /* @__PURE__ */ jsxs("table", {
      className: "min-w-full table-fixed text-sm text-center bg-white",
      children: [/* @__PURE__ */ jsx("thead", {
        children: /* @__PURE__ */ jsxs("tr", {
          className: "bg-black text-white",
          children: [/* @__PURE__ */ jsx("th", {
            className: "w-1/4 py-2 px-4 font-normal",
            children: "Board Size"
          }), /* @__PURE__ */ jsx("th", {
            className: "w-1/4 py-2 px-4 font-normal",
            children: "154"
          }), /* @__PURE__ */ jsx("th", {
            className: "w-1/4 py-2 px-4 font-normal",
            children: "158"
          })]
        })
      }), /* @__PURE__ */ jsxs("tbody", {
        children: [/* @__PURE__ */ jsxs("tr", {
          children: [/* @__PURE__ */ jsx("td", {
            className: "p-3 border border-black",
            children: "Weight Range"
          }), /* @__PURE__ */ jsx("td", {
            className: "p-3 border border-black",
            children: "120-180 lbs. /54-82kg"
          }), /* @__PURE__ */ jsx("td", {
            className: "p-3 border border-black",
            children: "150-200 lbs. /68-91 kg"
          })]
        }), /* @__PURE__ */ jsxs("tr", {
          children: [/* @__PURE__ */ jsx("td", {
            className: "p-3 border border-black",
            children: "Waist Width"
          }), /* @__PURE__ */ jsx("td", {
            className: "p-3 border border-black",
            children: "246mm"
          }), /* @__PURE__ */ jsx("td", {
            className: "p-3 border border-black",
            children: "255mm"
          })]
        }), /* @__PURE__ */ jsxs("tr", {
          children: [/* @__PURE__ */ jsx("td", {
            className: "p-3 border border-black",
            children: "Stance Width"
          }), /* @__PURE__ */ jsx("td", {
            className: "p-3 border border-black",
            children: "-40"
          }), /* @__PURE__ */ jsx("td", {
            className: "p-3 border border-black",
            children: "-40"
          })]
        }), /* @__PURE__ */ jsxs("tr", {
          children: [/* @__PURE__ */ jsx("td", {
            className: "p-3 border border-black",
            children: "Binding Sizes"
          }), /* @__PURE__ */ jsx("td", {
            className: "p-3 border border-black",
            children: "Men\u2019s S/M, Women\u2019s S/M"
          }), /* @__PURE__ */ jsx("td", {
            className: "p-3 border border-black",
            children: "Men\u2019s L, Women\u2019s L"
          })]
        })]
      })]
    })]
  });
}
function ProductDetails$1({
  product
}) {
  const initialVariant = flattenConnection(product.variants)[0];
  return /* @__PURE__ */ jsxs(Fragment, {
    children: [/* @__PURE__ */ jsx(Seo, {
      product
    }), /* @__PURE__ */ jsx(Product$1, {
      product,
      initialVariantId: initialVariant.id,
      children: /* @__PURE__ */ jsxs("div", {
        className: "grid grid-cols-1 md:grid-cols-[2fr,1fr] gap-x-8 my-16",
        children: [/* @__PURE__ */ jsxs("div", {
          className: "md:hidden mt-5 mb-8",
          children: [/* @__PURE__ */ jsx(Product$1.Title, {
            as: "h1",
            className: "text-4xl font-bold text-black mb-4"
          }), product.vendor && /* @__PURE__ */ jsx("div", {
            className: "text-sm font-medium mb-2 text-gray-900",
            children: product.vendor
          }), /* @__PURE__ */ jsx("span", {}), /* @__PURE__ */ jsx("div", {
            className: "flex justify-between md:block",
            children: /* @__PURE__ */ jsx(ProductPriceMarkup, {})
          })]
        }), /* @__PURE__ */ jsx(Gallery, {}), /* @__PURE__ */ jsxs("div", {
          children: [/* @__PURE__ */ jsxs("div", {
            className: "hidden md:block",
            children: [/* @__PURE__ */ jsx(Product$1.Title, {
              as: "h1",
              className: "text-5xl font-bold text-black mb-4"
            }), product.vendor && /* @__PURE__ */ jsx("div", {
              className: "text-sm font-medium mb-2 text-gray-900",
              children: product.vendor
            }), /* @__PURE__ */ jsx(ProductPriceMarkup, {})]
          }), /* @__PURE__ */ jsxs("div", {
            className: "mt-8",
            children: [/* @__PURE__ */ jsx(ProductOptions, {}), /* @__PURE__ */ jsx(Product$1.Metafield, {
              namespace: "my_fields",
              keyName: "size_chart",
              children: ({
                value
              }) => {
                return value ? /* @__PURE__ */ jsx("a", {
                  href: "#size-chart",
                  className: "block underline text-gray-500 text-sm tracking-wide my-4",
                  children: "Size Chart"
                }) : null;
              }
            }), /* @__PURE__ */ jsx(AddToCartMarkup, {}), /* @__PURE__ */ jsxs("div", {
              className: "flex items space-x-4",
              children: [/* @__PURE__ */ jsx(Product$1.Metafield, {
                namespace: "my_fields",
                keyName: "sustainable",
                children: ({
                  value
                }) => {
                  return value ? /* @__PURE__ */ jsxs("span", {
                    className: "flex items-center mb-8",
                    children: [/* @__PURE__ */ jsx("svg", {
                      width: "24",
                      height: "24",
                      viewBox: "0 0 24 24",
                      fill: "none",
                      xmlns: "http://www.w3.org/2000/svg",
                      className: "stroke-current text-blue-600 mr-3",
                      children: /* @__PURE__ */ jsx("path", {
                        d: "M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364-.7071-.7071M6.34315 6.34315l-.70711-.70711m12.72796.00005-.7071.70711M6.3432 17.6569l-.70711.7071M16 12c0 2.2091-1.7909 4-4 4-2.20914 0-4-1.7909-4-4 0-2.20914 1.79086-4 4-4 2.2091 0 4 1.79086 4 4Z",
                        strokeWidth: "2",
                        strokeLinecap: "round",
                        strokeLinejoin: "round"
                      })
                    }), /* @__PURE__ */ jsx("span", {
                      className: "text-sm text-gray-900 font-medium",
                      children: "Sustainable Material"
                    })]
                  }) : null;
                }
              }), /* @__PURE__ */ jsx(Product$1.Metafield, {
                namespace: "my_fields",
                keyName: "lifetime_warranty",
                children: ({
                  value
                }) => {
                  return value ? /* @__PURE__ */ jsxs("span", {
                    className: "flex items-center mb-8",
                    children: [/* @__PURE__ */ jsx("svg", {
                      width: "24",
                      height: "24",
                      viewBox: "0 0 24 24",
                      fill: "none",
                      xmlns: "http://www.w3.org/2000/svg",
                      className: "stroke-current text-blue-600 mr-3",
                      children: /* @__PURE__ */ jsx("path", {
                        d: "M9 12L11 14L15 10M20.6179 5.98434C20.4132 5.99472 20.2072 5.99997 20 5.99997C16.9265 5.99997 14.123 4.84453 11.9999 2.94434C9.87691 4.84446 7.07339 5.99985 4 5.99985C3.79277 5.99985 3.58678 5.9946 3.38213 5.98422C3.1327 6.94783 3 7.95842 3 9.00001C3 14.5915 6.82432 19.2898 12 20.622C17.1757 19.2898 21 14.5915 21 9.00001C21 7.95847 20.8673 6.94791 20.6179 5.98434Z",
                        strokeWidth: "2",
                        strokeLinecap: "round",
                        strokeLinejoin: "round"
                      })
                    }), /* @__PURE__ */ jsx("span", {
                      className: "text-sm text-gray-900 font-medium",
                      children: "Lifetime Warranty"
                    })]
                  }) : null;
                }
              })]
            })]
          }), /* @__PURE__ */ jsx(Product$1.Description, {
            className: "prose border-t border-gray-200 pt-6 text-black text-md"
          }), /* @__PURE__ */ jsx(Product$1.Metafield, {
            namespace: "my_fields",
            keyName: "size_chart",
            children: ({
              value
            }) => {
              return value ? /* @__PURE__ */ jsx("div", {
                className: "border-t border-gray-200",
                children: /* @__PURE__ */ jsx(SizeChart, {})
              }) : null;
            }
          })]
        })]
      })
    })]
  });
}
var ProductDetails = wrapInClientMarker({
  name: "ProductDetails",
  id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/src/components/ProductDetails.client.jsx",
  component: ProductDetails$1,
  named: false
});
function Product({
  country = {
    isoCode: "US"
  }
}) {
  const {
    handle
  } = useParams();
  const {
    data
  } = useShopQuery({
    query: QUERY$1,
    variables: {
      country: country.isoCode,
      handle
    }
  });
  if (!data.product) {
    return /* @__PURE__ */ jsx(NotFound, {});
  }
  return /* @__PURE__ */ jsx(Layout, {
    children: /* @__PURE__ */ jsx(ProductDetails, {
      product: data.product
    })
  });
}
const QUERY$1 = gql$1`
  query product(
    $country: CountryCode
    $handle: String!
    $numProductMetafields: Int = 20
    $numProductVariants: Int = 250
    $numProductMedia: Int = 6
    $numProductVariantMetafields: Int = 10
    $numProductVariantSellingPlanAllocations: Int = 0
    $numProductSellingPlanGroups: Int = 0
    $numProductSellingPlans: Int = 0
  ) @inContext(country: $country) {
    product: product(handle: $handle) {
      id
      vendor
      seo {
        title
        description
      }
      images(first: 1) {
        edges {
          node {
            url
          }
        }
      }
      ...ProductProviderFragment
    }
  }

  ${ProductProviderFragment}
`;
var __glob_10_4 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Product
});
var shopifyConfig = {
  locale: "en-us",
  storeDomain: "https://cottonsmithco.myshopify.com/",
  storefrontToken: "b43c57afd5161d35077735a47a52d1b4",
  graphqlApiVersion: "unstable"
};
function SeoServer() {
  const {
    data: {
      shop: {
        name: shopName
      }
    }
  } = useShopQuery({
    query: QUERY,
    cache: {
      maxAge: 60 * 60 * 12,
      staleWhileRevalidate: 60 * 60 * 12
    }
  });
  return /* @__PURE__ */ jsx(Seo, {
    shopName
  });
}
const QUERY = gql$1`
  query shopName {
    shop {
      name
    }
  }
`;
function CartProvider$1({
  children,
  numCartLines
}) {
  return /* @__PURE__ */ jsx(CartUIProvider, {
    children: /* @__PURE__ */ jsx(Provider, {
      numCartLines,
      children
    })
  });
}
function Provider({
  children,
  numCartLines
}) {
  const {
    openCart
  } = useCartUI();
  const open = react.exports.useCallback(() => {
    openCart();
  }, [openCart]);
  return /* @__PURE__ */ jsx(Fragment, {
    children: /* @__PURE__ */ jsx(CartProvider$2, {
      numCartLines,
      onLineAdd: open,
      onCreate: open,
      children
    })
  });
}
var CartProvider = wrapInClientMarker({
  name: "CartProvider",
  id: "/Users/Plethora/Documents/CODING-PROJECTS/REACT/hydrogenia/cotton-shop/src/components/CartProvider.client.jsx",
  component: CartProvider$1,
  named: false
});
function LoadingFallback() {
  return /* @__PURE__ */ jsx("header", {
    className: "h-20 lg:h-32 max-w-screen text-pink-600",
    children: /* @__PURE__ */ jsx("div", {
      className: "fixed z-10 h-20 lg:h-32 w-full bg-white/90 border-b border-black border-opacity-5 px-6 md:px-8 md:py-6 lg:pt-8 lg:pb-0 mx-auto",
      children: /* @__PURE__ */ jsx("div", {
        className: "h-full flex lg:flex-col place-content-between",
        children: /* @__PURE__ */ jsxs("div", {
          className: "text-center w-full flex justify-between items-center",
          children: [/* @__PURE__ */ jsx("div", {
            className: "hidden lg:block w-16"
          }), /* @__PURE__ */ jsx("div", {
            className: "lg:hidden flex justify-center items-center w-7 h-full",
            children: /* @__PURE__ */ jsx(OpenIcon, {})
          }), /* @__PURE__ */ jsx("p", {
            className: "font-black text-3xl tracking-widest",
            children: "cottonsmith"
          }), /* @__PURE__ */ jsx(CartIcon, {})]
        })
      })
    })
  });
}
function App(_c) {
  var serverState = __objRest(_c, []);
  const pages = { "./pages/Index.server.jsx": __glob_10_0, "./pages/sitemap.xml.server.jsx": __glob_10_1, "./pages/collections/[handle].server.jsx": __glob_10_2, "./pages/pages/[handle].server.jsx": __glob_10_3, "./pages/products/[handle].server.jsx": __glob_10_4 };
  return /* @__PURE__ */ jsx(react.exports.Suspense, {
    fallback: /* @__PURE__ */ jsx(LoadingFallback, {}),
    children: /* @__PURE__ */ jsx(ShopifyServerProvider, __spreadProps(__spreadValues({
      shopifyConfig
    }, serverState), {
      children: /* @__PURE__ */ jsxs(CartProvider, {
        children: [/* @__PURE__ */ jsx(SeoServer, {}), /* @__PURE__ */ jsx(Switch, {
          children: /* @__PURE__ */ jsx(DefaultRoutes, {
            pages,
            serverState,
            fallback: /* @__PURE__ */ jsx(NotFound, {})
          })
        })]
      })
    }))
  });
}
var entrypoint = renderHydrogen(App, () => {
});
var indexHtml = '<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset="UTF-8" />\n    <link rel="icon" type="image" href="/circle-icon.png" />\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <title>cottonsmith</title>\n        \n    <link rel="preconnect" href="https://fonts.gstatic.com" />\n    <link href="https://fonts.googleapis.com/css2?family=Suranna&display=swap" rel="stylesheet" />\n    <link href="https://fonts.googleapis.com/css2?family=Raleway:wght@100&display=swap" rel="stylesheet" />\n    \n    <script type="module" crossorigin src="/assets/index.bd1ab1dc.js"><\/script>\n    <link rel="modulepreload" href="/assets/vendor.6dd26a1e.js">\n    <link rel="stylesheet" href="/assets/index.1a672e08.css">\n  </head>\n  <body>\n    <div id="root"></div>\n    \n  </body>\n</html>\n';
addEventListener("fetch", (event) => {
  try {
    event.respondWith(handleWorkerEvent(event, {
      entrypoint,
      indexTemplate: indexHtml,
      cache: caches.default,
      context: event
    }));
  } catch (error) {
    event.respondWith(new Response(error.message || error.toString(), {
      status: 500
    }));
  }
});
//# sourceMappingURL=worker.js.map
