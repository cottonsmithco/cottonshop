{"version":3,"file":"LocalizationClientProvider.client.b34b8fd6.js","sources":["../../../node_modules/@shopify/hydrogen/dist/esnext/components/LocalizationProvider/LocalizationClientProvider.client.js"],"sourcesContent":["import React, { useMemo, useState, useCallback } from 'react';\nimport { LocalizationContext } from './LocalizationContext.client';\nimport { useServerState } from '../../foundation/useServerState';\nexport default function LocalizationClientProvider({ localization, children, }) {\n    const { setServerState } = useServerState();\n    const [country, setCountry] = useState(localization.country);\n    const [availableCountries] = useState(localization.availableCountries);\n    const setter = useCallback((country) => {\n        setCountry(country);\n        setServerState('country', country);\n    }, [setServerState]);\n    const contextValue = useMemo(() => {\n        return {\n            country,\n            setCountry: setter,\n            availableCountries,\n        };\n    }, [country, setter, availableCountries]);\n    return (React.createElement(LocalizationContext.Provider, { value: contextValue }, children));\n}\n"],"names":["localization","children","setServerState","useServerState","country","setCountry","useState","availableCountries","setter","useCallback","contextValue","useMemo"],"mappings":"8DAGe,WAAoC,CAAEA,eAAcC,YAAa,MACtE,CAAEC,kBAAmBC,IACrB,CAACC,EAASC,GAAcC,mBAASN,EAAaI,SAC9C,CAACG,GAAsBD,mBAASN,EAAaO,oBAC7CC,EAASC,sBAAaL,GAAY,CACpCC,EAAWD,GACXF,EAAe,UAAWE,IAC3B,CAACF,IACEQ,EAAeC,kBAAQ,IAClB,EACHP,UACAC,WAAYG,EACZD,uBAEL,CAACH,EAASI,EAAQD,+BAC8CG,WAAgBT"}